[{"path":"http://www.reconverse.org/incidence2/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Tim Taylor Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/articles/Introduction.html","id":"what-does-it-do","dir":"Articles","previous_headings":"","what":"What does it do?","title":"Introduction to the incidence2 package","text":"incidence2 R package implements functions classes compute, handle visualise incidence linelist data. main features package include: incidence() build_incidence() functions compute incidence linelist pre-aggregated datasets across range date groupings. returned object incidence() subclass tibble. compatible dplyr data manipulation (see vignette(\"handling_incidence_objects\") details). Plotting methods, plot.incidence2() facet_plot.incidence2() provide quick plots sensible defaults. regroup(): regroup incidence different groups one global incidence time series. keep_first() keep_last() : keep rows corresponding first (last) set grouped dates (ordered time) incidence() object. complete_counts(): ensure every possible combination date groupings given explicit count. print.incidence_df()** summary.incidence_df() methods. .data.frame.incidence_df() as_tibble.incidence_df() conversion methods. Accessor functions: get_count_names(), get_dates_name(), get_date_index(), get_group_names(), get_interval(), get_timespan() get_n().","code":""},{"path":"http://www.reconverse.org/incidence2/dev/articles/Introduction.html","id":"worked-example-simulated-ebola-outbreak","dir":"Articles","previous_headings":"","what":"Worked example: simulated Ebola outbreak","title":"Introduction to the incidence2 package","text":"example uses simulated Ebola Virus Disease (EVD) outbreak package outbreaks. compute incidence various time steps illustrate easily plot data.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/articles/Introduction.html","id":"loading-the-data","dir":"Articles","previous_headings":"Worked example: simulated Ebola outbreak","what":"Loading the data","title":"Introduction to the incidence2 package","text":"","code":"library(outbreaks) library(incidence2) dat <- ebola_sim_clean$linelist class(dat) #> [1] \"data.frame\" str(dat) #> 'data.frame':    5829 obs. of  11 variables: #>  $ case_id                : chr  \"d1fafd\" \"53371b\" \"f5c3d8\" \"6c286a\" ... #>  $ generation             : int  0 1 1 2 2 0 3 3 2 3 ... #>  $ date_of_infection      : Date, format: NA \"2014-04-09\" ... #>  $ date_of_onset          : Date, format: \"2014-04-07\" \"2014-04-15\" ... #>  $ date_of_hospitalisation: Date, format: \"2014-04-17\" \"2014-04-20\" ... #>  $ date_of_outcome        : Date, format: \"2014-04-19\" NA ... #>  $ outcome                : Factor w/ 2 levels \"Death\",\"Recover\": NA NA 2 1 2 NA 2 1 2 1 ... #>  $ gender                 : Factor w/ 2 levels \"f\",\"m\": 1 2 1 1 1 1 1 1 2 2 ... #>  $ hospital               : Factor w/ 5 levels \"Connaught Hospital\",..: 2 1 3 NA 3 NA 1 4 3 5 ... #>  $ lon                    : num  -13.2 -13.2 -13.2 -13.2 -13.2 ... #>  $ lat                    : num  8.47 8.46 8.48 8.46 8.45 ..."},{"path":"http://www.reconverse.org/incidence2/dev/articles/Introduction.html","id":"computing-and-plotting-incidence","dir":"Articles","previous_headings":"Worked example: simulated Ebola outbreak","what":"Computing and plotting incidence","title":"Introduction to the incidence2 package","text":"compute daily incidence must pass observation data form data.frame incidence(). must also pass name date variable data can use index input: First compute daily incidence:  daily incidence quite noisy, can easily compute incidence using time intervals Notice specifying interval 7 creates weekly intervals coverage displayed date. illustrate incidence() also allows us create year-weekly groupings default weeks starting Monday (following ISO 8601 date time standard).  incidence() also work larger intervals","code":"daily <- incidence(dat, date_index = date_of_onset) daily #> An incidence object: 367 x 2 #> date range: [2014-04-07] to [2015-04-30] #> cases: 5829 #> interval: 1 day #> cumulative: FALSE #>  #>    date_index count #>    <date>     <int> #>  1 2014-04-07     1 #>  2 2014-04-15     1 #>  3 2014-04-21     2 #>  4 2014-04-25     1 #>  5 2014-04-26     1 #>  6 2014-04-27     1 #>  7 2014-05-01     2 #>  8 2014-05-03     1 #>  9 2014-05-04     1 #> 10 2014-05-05     1 #> # … with 357 more rows summary(daily) #> date range: [2014-04-07] to [2015-04-30] #> cases: 5829 #> interval: 1 day #> cumulative: FALSE #> timespan: 389 days plot(daily) # 7 day incidence seven <- incidence(dat, date_index = date_of_onset, interval = 7) seven #> An incidence object: 56 x 2 #> date range: [2014-04-07 to 2014-04-13] to [2015-04-27 to 2015-05-03] #> cases: 5829 #> interval: 7 days #> cumulative: FALSE #>  #>                  date_index count #>                    <period> <int> #>  1 2014-04-07 to 2014-04-13     1 #>  2 2014-04-14 to 2014-04-20     1 #>  3 2014-04-21 to 2014-04-27     5 #>  4 2014-04-28 to 2014-05-04     4 #>  5 2014-05-05 to 2014-05-11    12 #>  6 2014-05-12 to 2014-05-18    17 #>  7 2014-05-19 to 2014-05-25    15 #>  8 2014-05-26 to 2014-06-01    19 #>  9 2014-06-02 to 2014-06-08    23 #> 10 2014-06-09 to 2014-06-15    21 #> # … with 46 more rows plot(seven, color = \"white\") # year-weekly, starting on Monday (ISO week, default) weekly <- incidence(dat, date_index = date_of_onset, interval = \"week\") plot(weekly, color = \"white\") # bi-weekly, based on first day in data biweekly <- incidence(dat, date_index = date_of_onset, interval = \"2 weeks\") plot(biweekly, color = \"white\") # monthly monthly <- incidence(dat, date_index = date_of_onset, interval = \"month\") plot(monthly, color = \"white\") # quarterly quarterly <- incidence(dat, date_index = date_of_onset, interval = \"quarter\") plot(quarterly, color = \"white\") # year yearly <- incidence(dat, date_index = date_of_onset, interval = \"year\") plot(yearly, color = \"white\", n_breaks = 2)"},{"path":"http://www.reconverse.org/incidence2/dev/articles/Introduction.html","id":"grouping","dir":"Articles","previous_headings":"Worked example: simulated Ebola outbreak","what":"Grouping","title":"Introduction to the incidence2 package","text":"incidence() can also aggregate incidence specified groups using groups argument. instance, can compute incidence gender plot plot.incidence_df() function single facet_plot.incidence_df() function multi-faceted plot across groups:   limit number groups group allows us facet fill different variables:","code":"weekly_grouped <- incidence(dat, date_of_onset, interval = \"week\", groups = gender) weekly_grouped #> An incidence object: 109 x 3 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index gender count #>        <yrwk> <fct>  <int> #>  1   2014-W15 f          1 #>  2   2014-W16 m          1 #>  3   2014-W17 f          4 #>  4   2014-W17 m          1 #>  5   2014-W18 f          4 #>  6   2014-W19 f          9 #>  7   2014-W19 m          3 #>  8   2014-W20 f          7 #>  9   2014-W20 m         10 #> 10   2014-W21 f          8 #> # … with 99 more rows summary(weekly_grouped) #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #> timespan: 392 days #>  #> 1 grouped variable #>  #>   gender count #>   <fct>  <int> #> 1 f       2934 #> 2 m       2895 # A singular plot plot(weekly_grouped, fill = gender, color = \"white\") # a multi-facet plot facet_plot(weekly_grouped, fill = gender, n_breaks = 5, angle = 45, color = \"white\") inci <- incidence(dat, date_of_onset, interval = \"week\", groups = c(outcome, hospital)) facet_plot(inci, facets = hospital, fill = outcome, nrow = 3, n_breaks = 5, angle = 45)"},{"path":"http://www.reconverse.org/incidence2/dev/articles/alternative_date_groupings.html","id":"month-grouping-based-on-clock-functions","dir":"Articles","previous_headings":"","what":"Month grouping based on clock functions","title":"Alternative date groupings","text":"","code":"clock_month_inci <-    build_incidence(     dat,     date_index = date,     groups = region,     counts = ends_with(\"new\"),     FUN = function(x) calendar_narrow(as_year_month_day(x), precision = \"month\")   )  clock_month_inci #> An incidence object: 234 x 7 #> date range: [2020-01] to [2021-06] #> cases_new: 8379330 #> deaths_new: 239477 #> recovered_new: 0 #> hosp_new: 466704 #> tested_new: 162328695 #>  #>    date_index   region           cases_new deaths_new recovere…¹ hosp_…² teste…³ #>    <ymd<month>> <chr>                <dbl>      <dbl>      <dbl>   <dbl>   <dbl> #>  1 2020-01      East Midlands            0          0          0       0       0 #>  2 2020-01      East of England          0          0          0       0       0 #>  3 2020-01      England                  2          0          0       0       0 #>  4 2020-01      London                   0          0          0       0       0 #>  5 2020-01      North East               0          0          0       0       0 #>  6 2020-01      North West               0          0          0       0       0 #>  7 2020-01      Northern Ireland         0          0          0       0       0 #>  8 2020-01      Scotland                 0          0          0       0       0 #>  9 2020-01      South East               0          0          0       0       0 #> 10 2020-01      South West               0          0          0       0       0 #> # … with 224 more rows, and abbreviated variable names ¹​recovered_new, #> #   ²​hosp_new, ³​tested_new"},{"path":"http://www.reconverse.org/incidence2/dev/articles/alternative_date_groupings.html","id":"month-grouping-zoo-function-as-yearmon","dir":"Articles","previous_headings":"","what":"Month grouping zoo function as.yearmon","title":"Alternative date groupings","text":"","code":"zoo_month_inci <-    build_incidence(     dat,     date_index = date,     groups = region,     counts = ends_with(\"new\"),     FUN = as.yearmon   )  zoo_month_inci #> An incidence object: 234 x 7 #> date range: [Jan 2020] to [Jun 2021] #> cases_new: 8379330 #> deaths_new: 239477 #> recovered_new: 0 #> hosp_new: 466704 #> tested_new: 162328695 #>  #>    date_index region           cases_new deaths_new recovered_…¹ hosp_…² teste…³ #>    <yearmon>  <chr>                <dbl>      <dbl>        <dbl>   <dbl>   <dbl> #>  1 Jan 2020   East Midlands            0          0            0       0       0 #>  2 Jan 2020   East of England          0          0            0       0       0 #>  3 Jan 2020   England                  2          0            0       0       0 #>  4 Jan 2020   London                   0          0            0       0       0 #>  5 Jan 2020   North East               0          0            0       0       0 #>  6 Jan 2020   North West               0          0            0       0       0 #>  7 Jan 2020   Northern Ireland         0          0            0       0       0 #>  8 Jan 2020   Scotland                 0          0            0       0       0 #>  9 Jan 2020   South East               0          0            0       0       0 #> 10 Jan 2020   South West               0          0            0       0       0 #> # … with 224 more rows, and abbreviated variable names ¹​recovered_new, #> #   ²​hosp_new, ³​tested_new"},{"path":"http://www.reconverse.org/incidence2/dev/articles/alternative_date_groupings.html","id":"comparing-the-above-to-the-grates-implementation","dir":"Articles","previous_headings":"","what":"comparing the above to the grates implementation","title":"Alternative date groupings","text":"","code":"# we can compare this to the grates implementation grates_month_inci <-    incidence(     dat,     date_index = date,     groups = region,     counts = ends_with(\"new\"),     interval = \"month\"   )  grates_month_inci #> An incidence object: 234 x 7 #> date range: [2020-Jan] to [2021-Jun] #> cases_new: 8379330 #> deaths_new: 239477 #> recovered_new: 0 #> hosp_new: 466704 #> tested_new: 162328695 #> interval: 1 month #> cumulative: FALSE #>  #>    date_index region           cases_new deaths_new recovered_…¹ hosp_…² teste…³ #>        <mnth> <chr>                <dbl>      <dbl>        <dbl>   <dbl>   <dbl> #>  1   2020-Jan East Midlands            0          0            0       0       0 #>  2   2020-Jan East of England          0          0            0       0       0 #>  3   2020-Jan England                  2          0            0       0       0 #>  4   2020-Jan London                   0          0            0       0       0 #>  5   2020-Jan North East               0          0            0       0       0 #>  6   2020-Jan North West               0          0            0       0       0 #>  7   2020-Jan Northern Ireland         0          0            0       0       0 #>  8   2020-Jan Scotland                 0          0            0       0       0 #>  9   2020-Jan South East               0          0            0       0       0 #> 10   2020-Jan South West               0          0            0       0       0 #> # … with 224 more rows, and abbreviated variable names ¹​recovered_new, #> #   ²​hosp_new, ³​tested_new  # and check they are all \"equal\" ... clock_month_inci$date_index <- as.Date(calendar_widen(clock_month_inci$date_index, \"day\")) zoo_month_inci$date_index <- as.Date(zoo_month_inci$date_index) grates_month_inci$date_index <- as.Date(grates_month_inci$date_index)  identical(   as.data.frame(clock_month_inci),   as.data.frame(zoo_month_inci) ) #> [1] TRUE  identical(   as.data.frame(grates_month_inci),   as.data.frame(clock_month_inci) ) #> [1] TRUE"},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"example-data-simulated-ebola-outbreak","dir":"Articles","previous_headings":"","what":"Example data: simulated Ebola outbreak","title":"Customizing incidence plots","text":"example uses simulated Ebola Virus Disease (EVD) outbreak package outbreaks. First, load data, compute weekly incidence initially group gender hospital:","code":"library(outbreaks) library(incidence2)  dat <- ebola_sim_clean$linelist str(dat) #> 'data.frame':    5829 obs. of  11 variables: #>  $ case_id                : chr  \"d1fafd\" \"53371b\" \"f5c3d8\" \"6c286a\" ... #>  $ generation             : int  0 1 1 2 2 0 3 3 2 3 ... #>  $ date_of_infection      : Date, format: NA \"2014-04-09\" ... #>  $ date_of_onset          : Date, format: \"2014-04-07\" \"2014-04-15\" ... #>  $ date_of_hospitalisation: Date, format: \"2014-04-17\" \"2014-04-20\" ... #>  $ date_of_outcome        : Date, format: \"2014-04-19\" NA ... #>  $ outcome                : Factor w/ 2 levels \"Death\",\"Recover\": NA NA 2 1 2 NA 2 1 2 1 ... #>  $ gender                 : Factor w/ 2 levels \"f\",\"m\": 1 2 1 1 1 1 1 1 2 2 ... #>  $ hospital               : Factor w/ 5 levels \"Connaught Hospital\",..: 2 1 3 NA 3 NA 1 4 3 5 ... #>  $ lon                    : num  -13.2 -13.2 -13.2 -13.2 -13.2 ... #>  $ lat                    : num  8.47 8.46 8.48 8.46 8.45 ...  i <- incidence(dat, date_of_onset, interval = 7, groups = c(gender, hospital)) i #> An incidence object: 601 x 4 #> date range: [2014-04-07 to 2014-04-13] to [2015-04-27 to 2015-05-03] #> cases: 5829 #> interval: 7 days #> cumulative: FALSE #>  #>                  date_index gender hospital                                count #>                    <period> <fct>  <fct>                                   <int> #>  1 2014-04-07 to 2014-04-13 f      Military Hospital                           1 #>  2 2014-04-14 to 2014-04-20 m      Connaught Hospital                          1 #>  3 2014-04-21 to 2014-04-27 f      NA                                          2 #>  4 2014-04-21 to 2014-04-27 f      other                                       2 #>  5 2014-04-21 to 2014-04-27 m      other                                       1 #>  6 2014-04-28 to 2014-05-04 f      NA                                          1 #>  7 2014-04-28 to 2014-05-04 f      Connaught Hospital                          1 #>  8 2014-04-28 to 2014-05-04 f      Princess Christian Maternity Hospital …     1 #>  9 2014-04-28 to 2014-05-04 f      Rokupa Hospital                             1 #> 10 2014-05-05 to 2014-05-11 f      NA                                          1 #> # … with 591 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"plot-incidence2","dir":"Articles","previous_headings":"","what":"plot.incidence2()","title":"Customizing incidence plots","text":"calling plot incidence() object, function plot.incidence2() implicitly used. access documentation, use ?plot.incidence2. section, illustrate existing customisations.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"default-behaviour","dir":"Articles","previous_headings":"plot.incidence2()","what":"Default behaviour","title":"Customizing incidence plots","text":"default, function uses colours colour palette vibrant(). fill specified, groups filled colour message displayed due multiple groups present:  Note, however, groups still present just hidden default border coloring:","code":"plot(i) #> plot() can only stack/dodge by one variable. #> For multi-facet plotting try facet_plot() plot(i, color = \"white\") #> plot() can only stack/dodge by one variable. #> For multi-facet plotting try facet_plot()"},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"additional-arguments","dir":"Articles","previous_headings":"plot.incidence2()","what":"Additional arguments","title":"Customizing incidence plots","text":"plot.incidence2() designed high level customization without needing knowledge ggplot2. end, multiple arguments can provided set sensible defaults. common changes may wish make illustrated (full description arguments check accompanying help file ?plot.incidence2). can easily fill plot according groups present colour choosing:    Sometimes may wish change rotation x-axis can done passing additional angle argument:","code":"plot(i, fill = gender) #> plot() can only stack/dodge by one variable. #> For multi-facet plotting try facet_plot() plot(i, fill = hospital, legend = \"bottom\") #> plot() can only stack/dodge by one variable. #> For multi-facet plotting try facet_plot() ii <- regroup(i) plot(ii, fill = \"red\", color = \"white\") plot(i, angle = 45) #> plot() can only stack/dodge by one variable. #> For multi-facet plotting try facet_plot()"},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"applying-the-style-of-european-programme-for-intervention-epidemiology-training-epiet","dir":"Articles","previous_headings":"plot.incidence2()","what":"Applying the style of European Programme for Intervention Epidemiology Training (EPIET)","title":"Customizing incidence plots","text":"small datasets convention EPIET display individual cases rectangles. can done two things: first, adding using option show_cases = TRUE white border. also add coord_equal = TRUE forces case square.","code":"i_epiet <- incidence(dat[160:180, ], date_index = date_of_onset) plot(i_epiet, color = \"white\", show_cases = TRUE, angle = 45, size = 10, n_breaks = 20)"},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"facet_plot","dir":"Articles","previous_headings":"","what":"facet_plot()","title":"Customizing incidence plots","text":"stacked plots can difficult ascertain difference groups. reason provide users ability make faceted plots facet_plot.incidence2() function. function takes similar arguments plot includes additional facet argument:","code":"facet_plot(i, facets = gender, n_breaks = 3) facet_plot(i, facets = hospital, fill = gender, n_breaks = 3, nrow = 4) ii <- regroup(i, gender) facet_plot(ii, facets = gender, fill = \"grey\", color = \"white\")"},{"path":[]},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"the-default-palette","dir":"Articles","previous_headings":"Miscellaneous > Changing colors","what":"The default palette","title":"Customizing incidence plots","text":"color palette function outputs specified number colours. default, colour used incidence called vibrant(). behaviour different usual palettes, sense first 6 colours interpolated:  also provide second palette called muted() first 9 colours interpolated:","code":"par(mfrow = c(2, 1), mar = c(4,2,1,1)) barplot(1:6, col = vibrant(6)) barplot(1:20, col = vibrant(20)) #> Using more colors (20) than this palette can handle (6); some colors will be interpolated. #> Consider using `muted` palette instead? par(mfrow = c(2,1), mar = c(4,2,1,1)) barplot(1:9, col = muted(9)) barplot(1:20, col = muted(20)) #> Using more colors (20) than this palette can handle (9); some colors will be interpolated."},{"path":"http://www.reconverse.org/incidence2/dev/articles/customizing_incidence_plots.html","id":"using-different-palettes","dir":"Articles","previous_headings":"Miscellaneous > Changing colors","what":"Using different palettes","title":"Customizing incidence plots","text":"color palettes can provided via col_pal. Various palettes part base R distribution, many provided additional packages. provide couple examples :","code":"ih <- regroup(i, hospital) plot(ih, fill = hospital, col_pal = rainbow, n_breaks = 3) # see ?rainbow ig <- regroup(i, gender) plot(ig, fill = gender, col_pal = cm.colors)   # see ?cm.colors"},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/articles/handling_incidence_objects.html","id":"regroup","dir":"Articles","previous_headings":"Modifying incidence objects","what":"regroup()","title":"Handling incidence objects","text":"Sometimes may find ’ve created grouped incidence now want change internal grouping. Assuming subset grouping already generated, can use regroup() function get desired aggregation:","code":"library(outbreaks) library(dplyr) library(incidence2)  # load data dat <- ebola_sim_clean$linelist  # generate the incidence object with 3 groups inci <- incidence(dat, date_of_onset, groups = c(gender, hospital, outcome), interval = \"week\") inci #> An incidence object: 1,448 x 5 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index gender hospital                                     outcome count #>        <yrwk> <fct>  <fct>                                        <fct>   <int> #>  1   2014-W15 f      Military Hospital                            NA          1 #>  2   2014-W16 m      Connaught Hospital                           NA          1 #>  3   2014-W17 f      NA                                           NA          1 #>  4   2014-W17 f      NA                                           Death       1 #>  5   2014-W17 f      other                                        Recover     2 #>  6   2014-W17 m      other                                        Recover     1 #>  7   2014-W18 f      NA                                           Recover     1 #>  8   2014-W18 f      Connaught Hospital                           Recover     1 #>  9   2014-W18 f      Princess Christian Maternity Hospital (PCMH) Death       1 #> 10   2014-W18 f      Rokupa Hospital                              Recover     1 #> # … with 1,438 more rows  # regroup to just two groups inci %>% regroup(c(gender, outcome)) #> An incidence object: 320 x 4 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index gender outcome count #>        <yrwk> <fct>  <fct>   <int> #>  1   2014-W15 f      NA          1 #>  2   2014-W16 m      NA          1 #>  3   2014-W17 f      NA          1 #>  4   2014-W17 f      Death       1 #>  5   2014-W17 f      Recover     2 #>  6   2014-W17 m      Recover     1 #>  7   2014-W18 f      Death       1 #>  8   2014-W18 f      Recover     3 #>  9   2014-W19 f      NA          4 #> 10   2014-W19 f      Death       2 #> # … with 310 more rows  # drop all groups inci %>% regroup() #> An incidence object: 56 x 2 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index count #>        <yrwk> <int> #>  1   2014-W15     1 #>  2   2014-W16     1 #>  3   2014-W17     5 #>  4   2014-W18     4 #>  5   2014-W19    12 #>  6   2014-W20    17 #>  7   2014-W21    15 #>  8   2014-W22    19 #>  9   2014-W23    23 #> 10   2014-W24    21 #> # … with 46 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/articles/handling_incidence_objects.html","id":"cumulate","dir":"Articles","previous_headings":"Modifying incidence objects","what":"cumulate","title":"Handling incidence objects","text":"also provide helper function, cumulate() easily generate cumulative incidences:","code":"inci %>%    regroup(hospital) %>%    cumulate() %>%    facet_plot(n_breaks = 4, nrow = 3)"},{"path":"http://www.reconverse.org/incidence2/dev/articles/handling_incidence_objects.html","id":"keep_first-and-keep_last","dir":"Articles","previous_headings":"Modifying incidence objects","what":"keep_first() and keep_last()","title":"Handling incidence objects","text":"data grouped date, may want select first last entries based particular date grouping using keep_first() keep_last():","code":"inci %>% keep_first(3) #> An incidence object: 6 x 5 #> date range: [2014-W15] to [2014-W17] #> cases: 7 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>   date_index gender hospital           outcome count #>       <yrwk> <fct>  <fct>              <fct>   <int> #> 1   2014-W15 f      Military Hospital  NA          1 #> 2   2014-W16 m      Connaught Hospital NA          1 #> 3   2014-W17 f      NA                 NA          1 #> 4   2014-W17 f      NA                 Death       1 #> 5   2014-W17 f      other              Recover     2 #> 6   2014-W17 m      other              Recover     1 inci %>% keep_last(3) #> An incidence object: 63 x 5 #> date range: [2015-W16] to [2015-W18] #> cases: 103 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index gender hospital           outcome count #>        <yrwk> <fct>  <fct>              <fct>   <int> #>  1   2015-W16 f      NA                 NA          1 #>  2   2015-W16 f      NA                 Death       7 #>  3   2015-W16 f      NA                 Recover     1 #>  4   2015-W16 f      Connaught Hospital NA          1 #>  5   2015-W16 f      Connaught Hospital Death       5 #>  6   2015-W16 f      Connaught Hospital Recover     3 #>  7   2015-W16 f      Military Hospital  Recover     1 #>  8   2015-W16 f      other              NA          1 #>  9   2015-W16 f      other              Death       2 #> 10   2015-W16 f      other              Recover     1 #> # … with 53 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/articles/handling_incidence_objects.html","id":"tidyverse-compatibility","dir":"Articles","previous_headings":"Modifying incidence objects","what":"Tidyverse compatibility","title":"Handling incidence objects","text":"incidence2 written tidyverse compatibility (particular dplyr) forefront design choices made. mean operation dplyr applied incidence object long invariants object preserved (.e. groups, interval uniqueness rows) object returned incidence object. invariants preserved tibble returned instead.","code":"library(dplyr)  # create incidence object inci <- incidence(dat, date_of_onset, interval = \"week\", groups = c(hospital, gender))  # filtering preserves class inci %>%  filter(gender == \"f\", hospital == \"Rokupa Hospital\") #> An incidence object: 48 x 4 #> date range: [2014-W18] to [2015-W18] #> cases: 210 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index hospital        gender count #>        <yrwk> <fct>           <fct>  <int> #>  1   2014-W18 Rokupa Hospital f          1 #>  2   2014-W20 Rokupa Hospital f          1 #>  3   2014-W22 Rokupa Hospital f          1 #>  4   2014-W23 Rokupa Hospital f          1 #>  5   2014-W25 Rokupa Hospital f          1 #>  6   2014-W27 Rokupa Hospital f          1 #>  7   2014-W28 Rokupa Hospital f          4 #>  8   2014-W29 Rokupa Hospital f          2 #>  9   2014-W30 Rokupa Hospital f          1 #> 10   2014-W31 Rokupa Hospital f          1 #> # … with 38 more rows  # slice operations preserve class inci %>% slice_sample(n = 10) #> An incidence object: 10 x 4 #> date range: [2014-W32] to [2015-W16] #> cases: 123 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index hospital           gender count #>        <yrwk> <fct>              <fct>  <int> #>  1   2014-W49 other              m         11 #>  2   2015-W06 other              m          5 #>  3   2014-W35 other              f          7 #>  4   2014-W32 Connaught Hospital f         15 #>  5   2015-W11 Rokupa Hospital    f          1 #>  6   2014-W41 Military Hospital  m         20 #>  7   2015-W16 Connaught Hospital f          9 #>  8   2015-W03 Connaught Hospital f         16 #>  9   2014-W34 other              f         13 #> 10   2014-W38 other              m         26  inci %>%  slice(1, 5, 10) #> An incidence object: 3 x 4 #> date range: [2014-W15] to [2014-W19] #> cases: 3 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>   date_index hospital          gender count #>       <yrwk> <fct>             <fct>  <int> #> 1   2014-W15 Military Hospital f          1 #> 2   2014-W17 other             m          1 #> 3   2014-W19 NA                f          1  # mutate preserve class inci %>%  mutate(future = date_index + 999) #> An incidence object: 601 x 5 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index hospital                                     gender count   future #>        <yrwk> <fct>                                        <fct>  <int>   <yrwk> #>  1   2014-W15 Military Hospital                            f          1 2033-W22 #>  2   2014-W16 Connaught Hospital                           m          1 2033-W23 #>  3   2014-W17 NA                                           f          2 2033-W24 #>  4   2014-W17 other                                        f          2 2033-W24 #>  5   2014-W17 other                                        m          1 2033-W24 #>  6   2014-W18 NA                                           f          1 2033-W25 #>  7   2014-W18 Connaught Hospital                           f          1 2033-W25 #>  8   2014-W18 Princess Christian Maternity Hospital (PCMH) f          1 2033-W25 #>  9   2014-W18 Rokupa Hospital                              f          1 2033-W25 #> 10   2014-W19 NA                                           f          1 2033-W26 #> # … with 591 more rows  # rename preserve class inci %>%  rename(left_bin = date_index) #> An incidence object: 601 x 4 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    left_bin hospital                                     gender count #>      <yrwk> <fct>                                        <fct>  <int> #>  1 2014-W15 Military Hospital                            f          1 #>  2 2014-W16 Connaught Hospital                           m          1 #>  3 2014-W17 NA                                           f          2 #>  4 2014-W17 other                                        f          2 #>  5 2014-W17 other                                        m          1 #>  6 2014-W18 NA                                           f          1 #>  7 2014-W18 Connaught Hospital                           f          1 #>  8 2014-W18 Princess Christian Maternity Hospital (PCMH) f          1 #>  9 2014-W18 Rokupa Hospital                              f          1 #> 10 2014-W19 NA                                           f          1 #> # … with 591 more rows  # select returns a tibble unless all date, count and group variables are preserved inci %>% select(-1) #> # A tibble: 601 × 3 #>    hospital                                     gender count #>    <fct>                                        <fct>  <int> #>  1 Military Hospital                            f          1 #>  2 Connaught Hospital                           m          1 #>  3 NA                                           f          2 #>  4 other                                        f          2 #>  5 other                                        m          1 #>  6 NA                                           f          1 #>  7 Connaught Hospital                           f          1 #>  8 Princess Christian Maternity Hospital (PCMH) f          1 #>  9 Rokupa Hospital                              f          1 #> 10 NA                                           f          1 #> # … with 591 more rows  inci %>% select(everything()) #> An incidence object: 601 x 4 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index hospital                                     gender count #>        <yrwk> <fct>                                        <fct>  <int> #>  1   2014-W15 Military Hospital                            f          1 #>  2   2014-W16 Connaught Hospital                           m          1 #>  3   2014-W17 NA                                           f          2 #>  4   2014-W17 other                                        f          2 #>  5   2014-W17 other                                        m          1 #>  6   2014-W18 NA                                           f          1 #>  7   2014-W18 Connaught Hospital                           f          1 #>  8   2014-W18 Princess Christian Maternity Hospital (PCMH) f          1 #>  9   2014-W18 Rokupa Hospital                              f          1 #> 10   2014-W19 NA                                           f          1 #> # … with 591 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/articles/handling_incidence_objects.html","id":"accessing-variable-information","dir":"Articles","previous_headings":"","what":"Accessing variable information","title":"Handling incidence objects","text":"provide multiple accessors easily access information incidence() objects structure: get_count_names(), get_dates_name(), get_group_names() return character vectors column names corresponding requested variables. get_n() returns number observations. get_interval() returns interval object. get_timespan() returns number days object covers.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tim Taylor. Author, maintainer. Thibaut Jombart. Contributor. Zhian N. Kamvar. Contributor.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taylor T (2022). incidence2: Compute, Handle Plot Incidence Dated Events. R package version 1.2.3.9000, https://github.com/reconverse/incidence2.","code":"@Manual{,   title = {incidence2: Compute, Handle and Plot Incidence of Dated Events},   author = {Tim Taylor},   year = {2022},   note = {R package version 1.2.3.9000},   url = {https://github.com/reconverse/incidence2}, }"},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"incidence2","dir":"","previous_headings":"","what":"Compute, Handle and Plot Incidence of Dated Events","title":"Compute, Handle and Plot Incidence of Dated Events","text":"incidence2 R package implements functions classes compute, handle visualise incidence linelist data. refocusses scope original incidence package. Unlike original package, incidence2 concentrates initial calculation, manipulation plotting resultant incidence objects.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package","title":"Compute, Handle and Plot Incidence of Dated Events","text":"development version, documentation refers , can installed GitHub : can install current version package releases page directly CRAN :","code":"if (!require(remotes)) {   install.packages(\"remotes\") } remotes::install_github(\"reconverse/incidence2\", build_vignettes = TRUE) install.packages(\"incidence2\")"},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"vignettes","dir":"","previous_headings":"Resources","what":"Vignettes","title":"Compute, Handle and Plot Incidence of Dated Events","text":"short overview incidence2 provided worked example . detailed tutorials distributed vignettes package: vignette(\"Introduction\", package = \"incidence2\") vignette(\"handling_incidence_objects\", package = \"incidence2\") vignette(\"customizing_incidence_plots\", package = \"incidence2\") vignette(\"alternative_date_groupings\", package = \"incidence2\")","code":""},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"getting-help-online","dir":"","previous_headings":"","what":"Getting help online","title":"Compute, Handle and Plot Incidence of Dated Events","text":"Bug reports feature requests posted github using issue system: https://github.com/reconverse/incidence2/issues. Online documentation: https://www.reconverse.org/incidence2. questions posted RECON slack channel; see https://www.repidemicsconsortium.org/forum/ details join.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"a-quick-overview","dir":"","previous_headings":"","what":"A quick overview","title":"Compute, Handle and Plot Incidence of Dated Events","text":"short example uses simulated Ebola Virus Disease (EVD) outbreak package outbreaks. shows compute incidence various time steps plot resulting output. First, load data:","code":"library(outbreaks) library(incidence2)  dat <- ebola_sim_clean$linelist str(dat) #> 'data.frame':    5829 obs. of  11 variables: #>  $ case_id                : chr  \"d1fafd\" \"53371b\" \"f5c3d8\" \"6c286a\" ... #>  $ generation             : int  0 1 1 2 2 0 3 3 2 3 ... #>  $ date_of_infection      : Date, format: NA \"2014-04-09\" ... #>  $ date_of_onset          : Date, format: \"2014-04-07\" \"2014-04-15\" ... #>  $ date_of_hospitalisation: Date, format: \"2014-04-17\" \"2014-04-20\" ... #>  $ date_of_outcome        : Date, format: \"2014-04-19\" NA ... #>  $ outcome                : Factor w/ 2 levels \"Death\",\"Recover\": NA NA 2 1 2 NA 2 1 2 1 ... #>  $ gender                 : Factor w/ 2 levels \"f\",\"m\": 1 2 1 1 1 1 1 1 2 2 ... #>  $ hospital               : Factor w/ 5 levels \"Connaught Hospital\",..: 2 1 3 NA 3 NA 1 4 3 5 ... #>  $ lon                    : num  -13.2 -13.2 -13.2 -13.2 -13.2 ... #>  $ lat                    : num  8.47 8.46 8.48 8.46 8.45 ..."},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"computing-and-plotting-incidence","dir":"","previous_headings":"","what":"Computing and plotting incidence","title":"Compute, Handle and Plot Incidence of Dated Events","text":"compute weekly incidence:  Notice specifying interval 7 creates weekly intervals coverage displayed date. incidence() also allows us create year-weekly groupings default weeks starting Monday (following ISO 8601 date time standard). incidence() can also compute incidence specified groups using groups argument. example, can compute weekly incidence gender plot single, stacked chart:  can also facet plot (grouping detected automatically):  also possible group multiple variables specifying different facets fills:","code":"i_7 <- incidence(dat, date_index = date_of_onset, interval = 7) i_7 #> An incidence object: 56 x 2 #> date range: [2014-04-07 to 2014-04-13] to [2015-04-27 to 2015-05-03] #> cases: 5829 #> interval: 7 days #> cumulative: FALSE #>  #>                  date_index count #>                    <period> <int> #>  1 2014-04-07 to 2014-04-13     1 #>  2 2014-04-14 to 2014-04-20     1 #>  3 2014-04-21 to 2014-04-27     5 #>  4 2014-04-28 to 2014-05-04     4 #>  5 2014-05-05 to 2014-05-11    12 #>  6 2014-05-12 to 2014-05-18    17 #>  7 2014-05-19 to 2014-05-25    15 #>  8 2014-05-26 to 2014-06-01    19 #>  9 2014-06-02 to 2014-06-08    23 #> 10 2014-06-09 to 2014-06-15    21 #> # … with 46 more rows summary(i_7) #> date range: [2014-04-07 to 2014-04-13] to [2015-04-27 to 2015-05-03] #> cases: 5829 #> interval: 7 days #> cumulative: FALSE #> timespan: 392 days plot(i_7, color = \"white\") iw <- incidence(dat, interval = \"week\", date_index = date_of_onset, groups = gender) iw #> An incidence object: 109 x 3 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index gender count #>        <yrwk> <fct>  <int> #>  1   2014-W15 f          1 #>  2   2014-W16 m          1 #>  3   2014-W17 f          4 #>  4   2014-W17 m          1 #>  5   2014-W18 f          4 #>  6   2014-W19 f          9 #>  7   2014-W19 m          3 #>  8   2014-W20 f          7 #>  9   2014-W20 m         10 #> 10   2014-W21 f          8 #> # … with 99 more rows summary(iw) #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #> timespan: 392 days #>  #> 1 grouped variable #>  #>   gender count #>   <fct>  <int> #> 1 f       2934 #> 2 m       2895 plot(iw, fill = \"gender\", color = \"white\") facet_plot(iw, n_breaks = 3, color = \"white\") iw2 <- incidence(dat, date_of_onset, interval = \"week\",  groups = c(gender, hospital)) iw2 #> An incidence object: 601 x 4 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index gender hospital                                     count #>        <yrwk> <fct>  <fct>                                        <int> #>  1   2014-W15 f      Military Hospital                                1 #>  2   2014-W16 m      Connaught Hospital                               1 #>  3   2014-W17 f      <NA>                                             2 #>  4   2014-W17 f      other                                            2 #>  5   2014-W17 m      other                                            1 #>  6   2014-W18 f      <NA>                                             1 #>  7   2014-W18 f      Connaught Hospital                               1 #>  8   2014-W18 f      Princess Christian Maternity Hospital (PCMH)     1 #>  9   2014-W18 f      Rokupa Hospital                                  1 #> 10   2014-W19 f      <NA>                                             1 #> # … with 591 more rows summary(iw2) #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #> timespan: 392 days #>  #> 2 grouped variables #>  #>   gender count #>   <fct>  <int> #> 1 f       2934 #> 2 m       2895 #>  #>  #>   hospital                                     count #>   <fct>                                        <int> #> 1 Military Hospital                              889 #> 2 Connaught Hospital                            1737 #> 3 <NA>                                          1456 #> 4 other                                          876 #> 5 Princess Christian Maternity Hospital (PCMH)   420 #> 6 Rokupa Hospital                                451 facet_plot(iw2, facets = gender, fill = hospital, n_breaks = 3)"},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"using-an-alternative-function","dir":"","previous_headings":"","what":"Using an alternative function","title":"Compute, Handle and Plot Incidence of Dated Events","text":"incidence() function wraps date grouping functionality grates package, providing easy use interface constructing incidence objects. Sometimes, however, may want greater flexibility choosing like transform “date” inputs. Using function build_incidence(),can specify function wish apply. illustrate excellent clock package:","code":"library(clock)  # create a week function comparable to above approach isoweek <- function(x) calendar_narrow(as_iso_year_week_day(x), \"week\")  clock_week_inci <-    build_incidence(     dat,     date_index = date_of_onset,     groups = c(gender, hospital),     FUN = isoweek   )  clock_week_inci #> An incidence object: 601 x 4 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #>  #>    date_index      gender hospital                                     count #>    <iso_ywd<week>> <fct>  <fct>                                        <int> #>  1 2014-W15        f      Military Hospital                                1 #>  2 2014-W16        m      Connaught Hospital                               1 #>  3 2014-W17        f      other                                            2 #>  4 2014-W17        f      <NA>                                             2 #>  5 2014-W17        m      other                                            1 #>  6 2014-W18        f      Connaught Hospital                               1 #>  7 2014-W18        f      Princess Christian Maternity Hospital (PCMH)     1 #>  8 2014-W18        f      Rokupa Hospital                                  1 #>  9 2014-W18        f      <NA>                                             1 #> 10 2014-W19        f      Connaught Hospital                               2 #> # … with 591 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Access various elements of an incidence object — accessors","title":"Access various elements of an incidence object — accessors","text":"Access various elements incidence object NULL none present.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access various elements of an incidence object — accessors","text":"","code":"get_counts(x, ...)  # S3 method for default get_counts(x, ...)  # S3 method for incidence_df get_counts(x, ...)  get_count_names(x, ...)  # S3 method for default get_count_names(x, ...)  # S3 method for incidence_df get_count_names(x, ...)  get_date_index(x, ...)  # S3 method for default get_date_index(x, ...)  # S3 method for incidence_df get_date_index(x, ...)  get_dates(x, ...)  get_dates_name(x, ...)  # S3 method for default get_dates_name(x, ...)  # S3 method for incidence_df get_dates_name(x, ...)  get_group_names(x, ...)  # S3 method for default get_group_names(x, ...)  # S3 method for incidence_df get_group_names(x, ...)  get_timespan(x, ...)  # S3 method for default get_timespan(x, ...)  # S3 method for incidence2 get_timespan(x, ...)  get_n(x)  # S3 method for default get_n(x)  # S3 method for incidence_df get_n(x)  get_interval(x, ...)  # S3 method for default get_interval(x, ...)  # S3 method for incidence2 get_interval(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access various elements of an incidence object — accessors","text":"x incidence() object. ... used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access various elements of an incidence object — accessors","text":"get_counts: count vector x. get_count_names(): name count variable x. get_date_index(): date_index vector x. get_dates(): get_date_index(). get_dates_name(): name date_index variable x. get_group_names(): character vector group variables x get_timespan(): integer denoting timespan days represented incidence object. get_n() total number cases stored object get_interval(): integer = TRUE, integer vector, otherwise character value interval","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access various elements of an incidence object — accessors","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) {   withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist     i <- incidence(dat,                    date_index = date_of_onset,                    groups = c(gender, hospital))      get_counts(i)     get_count_names(i)      get_group_names(i)      get_date_index(i)     get_dates_name(i)      get_interval(i)      get_n(i)      get_timespan(i)   }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > i <- incidence(dat, date_index = date_of_onset, groups = c(gender, hospital)) #> > get_counts(i) #>    [1]  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  2  1  1  1  1  1 #>   [25]  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 #>   [49]  1  1  1  2  1  1  2  1  2  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1 #>   [73]  1  2  1  1  2  2  1  1  1  2  1  1  1  1  1  1  1  3  1  1  1  1  1  1 #>   [97]  1  1  1  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1  2  1  1  1  3  1 #>  [121]  1  1  1  1  1  1  1  1  1  1  2  1  3  1  1  1  1  1  2  1  2  2  2  1 #>  [145]  1  1  1  2  1  2  1  1  1  2  2  1  1  1  1  1  1  3  1  1  2  1  1  1 #>  [169]  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1 #>  [193]  1  1  1  2  1  1  1  2  2  1  1  1  1  1  1  1  2  1  2  1  1  1  2  1 #>  [217]  2  1  1  1  1  1  1  2  1  1  1  2  1  1  3  2  1  2  1  2  2  1  1  1 #>  [241]  2  2  1  2  1  2  1  1  1  2  1  1  2  1  1  1  3  1  4  1  2  1  1  1 #>  [265]  1  3  1  1  2  2  1  1  1  2  1  1  2  1  2  1  1  2  1  1  1  2  2  2 #>  [289]  1  2  1  2  1  4  2  1  2  1  3  3  3  1  1  1  1  1  3  1  1  3  1  1 #>  [313]  1  1  2  1  1  2  1  1  3  1  1  2  3  1  3  2  3  1  2  1  1  3  1  1 #>  [337]  3  3  1  2  4  2  1  2  5  1  1  1  3  4  2  2  1  1  1  1  2  1  1  1 #>  [361]  1  2  1  3  1  1  1  1  2  2  1  2  1  2  2  1  1  1  3  1  1  2  1  3 #>  [385]  2  1  4  1  3  4  2  1  2  1  1  1  2  1  1  1  1  2  2  2  1  3  1  3 #>  [409]  1  1  2  1  1  2  1  3  1  3  4  1  1  4  2  2  2  4  4  1  2  1  2  3 #>  [433]  4  4  1  2  3  4  1  2  1  3  2  2  2  1  1  3  3  1  1  1  1  3  1  2 #>  [457]  1  4  2  2  5  1  1  1  2  5  1  1  4  4  1  4  4  2  2  3  2  3  2  4 #>  [481]  7  1  1  3  2  1  3  3  3  1  2  1  1  2  6  1  2  2  1  7  2  3  1  5 #>  [505]  6  2  3  2  1  1  2  1  2  5  2  2  4  1  2  1  1  5  2  1  3  6  1  3 #>  [529]  3  1  3  2  1  4  4  1  3  3  1  3  3  4  3  5  4  1  3  3  2  2  1  4 #>  [553]  4  3  3  2  5  3  1  3  2  4  3  4  4  3  4  4  1  4  3  2  2  1  4  3 #>  [577]  1  1  1  5  3  4  2  1  1  4  3  3  2  2  6  3  2  1  2  6  7  1  3  1 #>  [601]  1  4  4  3  1  1  3  1  1  2  1  3  6  3  2  7  9  3  2  3  1  3  4  1 #>  [625]  2  2  6  7  3  1  2  3  2  3  1  2  1  5  2  5  3  3  1  6  5  2  1  2 #>  [649]  1  2 10  2  2  1  3  3  1  5  3  3  4  3  2  1  5  4  2  1  1  1  2  6 #>  [673]  3  6  1  5  2  1  3  1  1  2  5  1  4  3  3  9  1  3  1  2  7  2  4  1 #>  [697]  1  2  8  1  3  1  7  7  2  4  3  2  5  4  2  3  1  3  8  4  4  2  2  1 #>  [721]  3  9  3  2  5  1  6  8  7  3  3  5  9  5  3  2  2 10  3  4  4  2  3  1 #>  [745]  4  7  2  7  8  2  1  1  9  4  2  3  1  3  6  5  2  3  1  2  7  7  5  3 #>  [769]  2  8  3  6  2  2  7 14  5  6  7 12  4  4  2  3  6  4  4  2  2  1  6  5 #>  [793]  3  1  1  4  4  3  7  1 10  2  6  1  3  3 11  5  5  3  2  8  8  1  2  2 #>  [817]  2  7  4  1  3  3  2  6  8  6  3  1  4  5  4  2  3  5  8  2  3  1  4  8 #>  [841]  1  2  1  4 10  5  5  1  1  4  2  3  2  2  6  8  1  3  4  2  7  9  2  3 #>  [865]  6  3  4  4  2  8  7  5  2  1  9  9  1  4  1  2  6  9  2  2  1  2  6  2 #>  [889]  5  4  5  4  3  5  2  5  5 11  2  2  3  1  1  9  2  4  1  5  6  4  4  2 #>  [913]  4  5  1  1  4  1  1  3  9  2  3  2  2  4  7  2  4  1  4 13  8  4  3  1 #>  [937] 12  4  4  4  1  6  4  8  6  2  1  3  5  3  3  2  8  4  1  2  2  1  7  8 #>  [961]  3  1  2  3  3  3  1  4  2  2  6 14  2  4  1  3  5  4  2  2  5  7  3  1 #>  [985]  2  7  7  3  3  1  5  1  5  4  2  1  2  4  6  5  2  6  4  3  3  1  2  5 #> [1009]  5  4  4  2  1  5  4  1  3  3  4  4  4  8  1  1  4  4  5  2  2  3  3  3 #> [1033]  2  4  6  6  2  5  2  1  4  4  1  5  2  1  6  4  2  4  4 11  6  5  1  1 #> [1057]  8  5  4  1  2  5  2  1  3  3  7  4  2  3  2  8  6  3  4  2  5  4  3  3 #> [1081]  3  1  4  4  2  5  2  3  2  4  3  3  1  8  3  1  3  5  6  5  4  3  2  3 #> [1105]  8  2  1  2  7  2  1  1  4  3  9  4  1  5 11  4  1  8  3  2  5  3  6  5 #> [1129]  5  2  1  4  3  3  6  4  1  1 10  4  3  5  3  3  4  4  1  1  2  5  3  3 #> [1153]  1  6  8  2  4  2  5  4  4  4  2  3  9  3  1  1  1  1  2  4  2  3  3  8 #> [1177]  5  1  3  6  1  7  2  1  1  9  4  2  1  4  3  2  2  6  2  2  2  3  6  7 #> [1201]  3  2  2  3  1 12  5  1  2  4  6  3  4  1  5  3  7  3  4  1  2  2  7  3 #> [1225]  1  3  5  2  1  5  3  1  6  8  5  1  1  2  3  2  3  2  4  2  2  3  5  3 #> [1249]  2  3  8  1  1  1  3  7  6  2  1  2  3  1  6  2  1  1  1  3  3  5  1  1 #> [1273]  7  4  2  1  1  2  5  4  1  1  1  7  4  1  2  3  7  7  1  1  1  3  7  1 #> [1297]  5  1  4  3  6  1  1  1  3  2  2  2  1  1  4  3  3  1  3  6  2  3  2  1 #> [1321]  3  1  1  1  2  2  6  4  1  1  5  4  3  1  1  1  3  1  2  2  3  1  1  3 #> [1345]  1  1  8  4  2  2  2  5  2  3  1  2  4  2  1  1  1  1  4  3  3  3  4  3 #> [1369]  4  1  1  1  5  6  1  1  2  1  5  1  1  4  4  3  1  1  3  1  4  2  2  2 #> [1393]  4  1  3  1  2  2  5  1  3  1  1  2  1  1  4  5  1  1  4  3  1  2  1  5 #> [1417]  1  4  1  1  7  2  2  7  1  1  1  3  2  3  3  1  2  1  6  2  3  6  1  1 #> [1441]  2  1  2  8  2  3  2  1  7  6  5  1  1  1  2  4  2  3  2  1  3  3  4  2 #> [1465]  3  7  2  2  2  3  3  1  1  2  2  2  1  4  1  1  1  6  4  3  1  4  4  1 #> [1489]  3  2  6  1  2  2  2  2  1  2  2  1  2  3  3  3  3  3  1  2  6  2  1  3 #> [1513]  1  1  2  1  2  3  4  1  1  2  2  3  2  1  2  1  3  2  5  1  1  2  2  2 #> [1537]  1  6  3  1  1  1  6  3  3  1  4  6  1  3  2  1  2  2  3  1  1  5  2  1 #> [1561]  3  1  2  4  3  1  2  5  1  1  3  3  1  2  1  3  4  2  2  1  1  2  5  3 #> [1585]  1  2  2  1  1  2  1  1  1  1  1  2  1  2  2  1  5  1  3  1  1  1  2  1 #> [1609]  1  1  4  4  3  1  1  4  2  1  6  3  2  2  1  1  1  2  1  2  1  2  1  1 #> [1633]  5  2  3  1  1  2  3  1  1  6  2  2  2  1  2  3  1  2  1  1  2  5  1  2 #> [1657]  4  2  3  2  2  1  1  6  4  2  2  1  2  1  1  1  3  5  1  1  1  3  2  1 #> [1681]  3  2  2  1  4  2  1  1  1  3  1  4  4  1  2  1  2  1  1  3  3  2  1  4 #> [1705]  3  1  2  4  1  1  2  3  1  1  1  3  2  1  1  4  1  1  1  2  2  2  5  3 #> [1729]  2  4  2  1  3  5  1  1  1  3  1  1  2  1  3  3  1  1  3  5  1  3  1  1 #> [1753]  1  2  2  3  2  4  1  2  1  1  2  4  2  1  3  1  1  1  2  2  1  4  4  4 #> [1777]  1  1  2  1  2  3  2  1  2  2  1  2  4  1  3  2  2  1  1  1  2  1  2  1 #> [1801]  1  3  2  3  2  2  1  1  1  1  1  1  1  1  2  1  3  1  1  2  1  2  3  1 #> [1825]  1  1  4  2  3  2  1  1  2  2  2  1  3  1  2  1  1  1  2  1  1  2  3  2 #> [1849]  1  1  1  1  1  1  1  4  2  2  4  3  1  2  1  2  1  2  1  1  3  2  3  2 #> [1873]  5  4  3  1  2  5  2  2  1  2  2  1  2  1  3  3  1  1  2  1  2  1  3  3 #> [1897]  1  1  1  2  1  2  2  3  2  1  2  1  4  1  1  3  2  2  1  1  2  2  1  1 #> [1921]  1  1  1  1  1  2  3  1  2  3  1  1  4  1  1  3  1  2  3  2  1  1  1  1 #> [1945]  2  3  1  1  1  1  1  2  1  2  3  2  1  1  4  2  2  2  2  1  2  2  1  1 #> [1969]  2  1  1  2  4  1  2  2  1  1  1  1  2  2  2  1  2  1  2  3  1  3  1  2 #> [1993]  4  3  2  2  1  2  1  1  1  2  4  1  2  1  1  1  1  3  2  1  1  1  2  1 #> [2017]  2  1  1  1  3  1  2  1  1  1  2  3  2  1  3  2  2  2  2  4  1  2  1  1 #> [2041]  1  1  2  1  3  2  3  1  3  1  1  1  1  4  4  1  1  3  1  1  1  1  1  1 #> [2065]  1  3  1  1  1  2  2  1  1  3  1  1  1  1  1  2  1  1  2  4  1  4  2  2 #> [2089]  1  1  2  1  1  2  1  2  3  1  2  3  2  1  1  1  1  2  1  2  2  1  2  2 #> [2113]  1  1  1  2  1  2  1  3  2  1  1  1  1  1  2  4  1  1  2  2  1  1  1  1 #> [2137]  1  3  2  1  2  1  2  2  2  1  1  3  2  1  2  4  1  1  1  3  1  1  1  1 #> [2161]  1  2  4  4  1  1  2  2  1  2  2  2  1  1  1  2  4  2  1  1  3  3  1  1 #> [2185]  1  1  3  2  1  1  2  1  1  1  2  2  1  1  1  1  2  4  2  1  1  4  1  1 #> [2209]  1  4  1  4  1  1  1  1  1  2  1  1  1  1  3  1  1  2  1  2  1  1  1  1 #> [2233]  2  1  2  2  1  1  1  4  1  1  2  3  1  1  5  2  1  1  1  2  2  1  2  1 #> [2257]  1  4  1  1  3  2  2  1  1  1  1  3  3  1  3  2  1  1  2  3  2  3  2  1 #> [2281]  2  1  1  1  2  3  2  3  1  2  2  1  2  1  1  1  2  1  1  2  1  1  1  1 #> [2305]  2  2  1  1  1  1  1  2  1  1  1  1  2  1  1  1  1  2  1  2  1  2  2  1 #> [2329]  1  2  1  2  1  2  2  2  2  1  1  1  1  1  3  1  1  1  3  1  1  1  1  3 #> [2353]  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1  2  2  2  1  2  2  3  2  2 #> [2377]  3  1  1  1  3  2  1  1  3  1  3  1  1  2  1  2  1  1  2  1  2  1  1  3 #> [2401]  2  1  1  4  1  1  1  1  1  1  1  1  1  1  1  1  1  1  3  1  1  1  1  1 #> [2425]  1  2  1  1  1  1  1  2  1  1  1  1  1  1  2  2  2  1  1  3  1  2  2  1 #> [2449]  1  1  1  1  1  1  1  1  2  1  2  1  2  2  1  1  1  2  1  1  1  3  1  1 #> [2473]  1  1  2  1  1  2  1  1  1  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1 #> [2497]  1  1  2  1  2  2  1  1  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  3 #> [2521]  1  3  1  1  2  1  2  1  2  1  1  1  1  1  1 #> > get_count_names(i) #> [1] \"count\" #> > get_group_names(i) #> [1] \"gender\"   \"hospital\" #> > get_date_index(i) #>    [1] \"2014-04-07\" \"2014-04-15\" \"2014-04-21\" \"2014-04-21\" \"2014-04-25\" #>    [6] \"2014-04-26\" \"2014-04-27\" \"2014-05-01\" \"2014-05-01\" \"2014-05-03\" #>   [11] \"2014-05-04\" \"2014-05-05\" \"2014-05-06\" \"2014-05-06\" \"2014-05-06\" #>   [16] \"2014-05-07\" \"2014-05-08\" \"2014-05-08\" \"2014-05-09\" \"2014-05-10\" #>   [21] \"2014-05-11\" \"2014-05-12\" \"2014-05-12\" \"2014-05-12\" \"2014-05-13\" #>   [26] \"2014-05-13\" \"2014-05-13\" \"2014-05-14\" \"2014-05-14\" \"2014-05-16\" #>   [31] \"2014-05-16\" \"2014-05-17\" \"2014-05-17\" \"2014-05-18\" \"2014-05-18\" #>   [36] \"2014-05-18\" \"2014-05-19\" \"2014-05-19\" \"2014-05-19\" \"2014-05-20\" #>   [41] \"2014-05-21\" \"2014-05-21\" \"2014-05-21\" \"2014-05-22\" \"2014-05-23\" #>   [46] \"2014-05-23\" \"2014-05-24\" \"2014-05-24\" \"2014-05-25\" \"2014-05-25\" #>   [51] \"2014-05-25\" \"2014-05-26\" \"2014-05-26\" \"2014-05-26\" \"2014-05-27\" #>   [56] \"2014-05-27\" \"2014-05-27\" \"2014-05-27\" \"2014-05-27\" \"2014-05-27\" #>   [61] \"2014-05-27\" \"2014-05-28\" \"2014-05-29\" \"2014-05-30\" \"2014-05-31\" #>   [66] \"2014-05-31\" \"2014-06-02\" \"2014-06-02\" \"2014-06-02\" \"2014-06-02\" #>   [71] \"2014-06-03\" \"2014-06-03\" \"2014-06-03\" \"2014-06-05\" \"2014-06-05\" #>   [76] \"2014-06-05\" \"2014-06-06\" \"2014-06-06\" \"2014-06-06\" \"2014-06-07\" #>   [81] \"2014-06-07\" \"2014-06-07\" \"2014-06-07\" \"2014-06-08\" \"2014-06-09\" #>   [86] \"2014-06-09\" \"2014-06-09\" \"2014-06-09\" \"2014-06-09\" \"2014-06-10\" #>   [91] \"2014-06-10\" \"2014-06-11\" \"2014-06-11\" \"2014-06-11\" \"2014-06-12\" #>   [96] \"2014-06-13\" \"2014-06-14\" \"2014-06-14\" \"2014-06-15\" \"2014-06-15\" #>  [101] \"2014-06-15\" \"2014-06-15\" \"2014-06-16\" \"2014-06-16\" \"2014-06-16\" #>  [106] \"2014-06-16\" \"2014-06-16\" \"2014-06-16\" \"2014-06-17\" \"2014-06-17\" #>  [111] \"2014-06-17\" \"2014-06-18\" \"2014-06-18\" \"2014-06-19\" \"2014-06-19\" #>  [116] \"2014-06-20\" \"2014-06-20\" \"2014-06-20\" \"2014-06-20\" \"2014-06-20\" #>  [121] \"2014-06-21\" \"2014-06-21\" \"2014-06-21\" \"2014-06-22\" \"2014-06-22\" #>  [126] \"2014-06-22\" \"2014-06-22\" \"2014-06-22\" \"2014-06-23\" \"2014-06-23\" #>  [131] \"2014-06-24\" \"2014-06-24\" \"2014-06-24\" \"2014-06-25\" \"2014-06-25\" #>  [136] \"2014-06-25\" \"2014-06-25\" \"2014-06-25\" \"2014-06-26\" \"2014-06-26\" #>  [141] \"2014-06-27\" \"2014-06-28\" \"2014-06-29\" \"2014-06-30\" \"2014-06-30\" #>  [146] \"2014-06-30\" \"2014-06-30\" \"2014-06-30\" \"2014-07-01\" \"2014-07-01\" #>  [151] \"2014-07-01\" \"2014-07-02\" \"2014-07-02\" \"2014-07-02\" \"2014-07-03\" #>  [156] \"2014-07-03\" \"2014-07-03\" \"2014-07-03\" \"2014-07-04\" \"2014-07-04\" #>  [161] \"2014-07-04\" \"2014-07-04\" \"2014-07-04\" \"2014-07-05\" \"2014-07-05\" #>  [166] \"2014-07-05\" \"2014-07-05\" \"2014-07-06\" \"2014-07-06\" \"2014-07-06\" #>  [171] \"2014-07-07\" \"2014-07-07\" \"2014-07-07\" \"2014-07-08\" \"2014-07-08\" #>  [176] \"2014-07-08\" \"2014-07-08\" \"2014-07-08\" \"2014-07-08\" \"2014-07-09\" #>  [181] \"2014-07-09\" \"2014-07-09\" \"2014-07-09\" \"2014-07-09\" \"2014-07-09\" #>  [186] \"2014-07-09\" \"2014-07-10\" \"2014-07-10\" \"2014-07-10\" \"2014-07-10\" #>  [191] \"2014-07-11\" \"2014-07-11\" \"2014-07-11\" \"2014-07-11\" \"2014-07-12\" #>  [196] \"2014-07-12\" \"2014-07-12\" \"2014-07-12\" \"2014-07-12\" \"2014-07-13\" #>  [201] \"2014-07-13\" \"2014-07-13\" \"2014-07-13\" \"2014-07-14\" \"2014-07-14\" #>  [206] \"2014-07-14\" \"2014-07-14\" \"2014-07-14\" \"2014-07-14\" \"2014-07-14\" #>  [211] \"2014-07-14\" \"2014-07-15\" \"2014-07-15\" \"2014-07-15\" \"2014-07-15\" #>  [216] \"2014-07-15\" \"2014-07-15\" \"2014-07-15\" \"2014-07-15\" \"2014-07-16\" #>  [221] \"2014-07-16\" \"2014-07-16\" \"2014-07-16\" \"2014-07-16\" \"2014-07-17\" #>  [226] \"2014-07-17\" \"2014-07-17\" \"2014-07-17\" \"2014-07-17\" \"2014-07-18\" #>  [231] \"2014-07-18\" \"2014-07-18\" \"2014-07-18\" \"2014-07-18\" \"2014-07-18\" #>  [236] \"2014-07-19\" \"2014-07-19\" \"2014-07-19\" \"2014-07-19\" \"2014-07-19\" #>  [241] \"2014-07-20\" \"2014-07-20\" \"2014-07-20\" \"2014-07-20\" \"2014-07-20\" #>  [246] \"2014-07-20\" \"2014-07-20\" \"2014-07-20\" \"2014-07-21\" \"2014-07-21\" #>  [251] \"2014-07-21\" \"2014-07-22\" \"2014-07-22\" \"2014-07-22\" \"2014-07-22\" #>  [256] \"2014-07-22\" \"2014-07-23\" \"2014-07-23\" \"2014-07-23\" \"2014-07-23\" #>  [261] \"2014-07-23\" \"2014-07-24\" \"2014-07-24\" \"2014-07-24\" \"2014-07-24\" #>  [266] \"2014-07-24\" \"2014-07-24\" \"2014-07-24\" \"2014-07-25\" \"2014-07-25\" #>  [271] \"2014-07-25\" \"2014-07-25\" \"2014-07-25\" \"2014-07-25\" \"2014-07-25\" #>  [276] \"2014-07-26\" \"2014-07-26\" \"2014-07-26\" \"2014-07-26\" \"2014-07-26\" #>  [281] \"2014-07-27\" \"2014-07-27\" \"2014-07-27\" \"2014-07-27\" \"2014-07-27\" #>  [286] \"2014-07-27\" \"2014-07-27\" \"2014-07-27\" \"2014-07-28\" \"2014-07-28\" #>  [291] \"2014-07-28\" \"2014-07-28\" \"2014-07-29\" \"2014-07-29\" \"2014-07-29\" #>  [296] \"2014-07-29\" \"2014-07-29\" \"2014-07-29\" \"2014-07-29\" \"2014-07-30\" #>  [301] \"2014-07-30\" \"2014-07-30\" \"2014-07-30\" \"2014-07-30\" \"2014-07-30\" #>  [306] \"2014-07-30\" \"2014-07-30\" \"2014-07-31\" \"2014-07-31\" \"2014-07-31\" #>  [311] \"2014-07-31\" \"2014-07-31\" \"2014-07-31\" \"2014-08-01\" \"2014-08-01\" #>  [316] \"2014-08-01\" \"2014-08-01\" \"2014-08-01\" \"2014-08-01\" \"2014-08-01\" #>  [321] \"2014-08-02\" \"2014-08-02\" \"2014-08-02\" \"2014-08-02\" \"2014-08-02\" #>  [326] \"2014-08-02\" \"2014-08-02\" \"2014-08-02\" \"2014-08-03\" \"2014-08-03\" #>  [331] \"2014-08-03\" \"2014-08-03\" \"2014-08-03\" \"2014-08-03\" \"2014-08-03\" #>  [336] \"2014-08-03\" \"2014-08-04\" \"2014-08-04\" \"2014-08-04\" \"2014-08-04\" #>  [341] \"2014-08-04\" \"2014-08-04\" \"2014-08-04\" \"2014-08-04\" \"2014-08-05\" #>  [346] \"2014-08-05\" \"2014-08-05\" \"2014-08-05\" \"2014-08-05\" \"2014-08-05\" #>  [351] \"2014-08-05\" \"2014-08-06\" \"2014-08-06\" \"2014-08-06\" \"2014-08-06\" #>  [356] \"2014-08-06\" \"2014-08-06\" \"2014-08-06\" \"2014-08-07\" \"2014-08-07\" #>  [361] \"2014-08-07\" \"2014-08-07\" \"2014-08-07\" \"2014-08-07\" \"2014-08-08\" #>  [366] \"2014-08-08\" \"2014-08-08\" \"2014-08-08\" \"2014-08-08\" \"2014-08-08\" #>  [371] \"2014-08-08\" \"2014-08-09\" \"2014-08-09\" \"2014-08-09\" \"2014-08-09\" #>  [376] \"2014-08-09\" \"2014-08-09\" \"2014-08-09\" \"2014-08-10\" \"2014-08-10\" #>  [381] \"2014-08-10\" \"2014-08-10\" \"2014-08-10\" \"2014-08-10\" \"2014-08-10\" #>  [386] \"2014-08-10\" \"2014-08-11\" \"2014-08-11\" \"2014-08-11\" \"2014-08-11\" #>  [391] \"2014-08-11\" \"2014-08-11\" \"2014-08-11\" \"2014-08-12\" \"2014-08-12\" #>  [396] \"2014-08-12\" \"2014-08-12\" \"2014-08-12\" \"2014-08-12\" \"2014-08-13\" #>  [401] \"2014-08-13\" \"2014-08-13\" \"2014-08-13\" \"2014-08-13\" \"2014-08-13\" #>  [406] \"2014-08-13\" \"2014-08-13\" \"2014-08-13\" \"2014-08-13\" \"2014-08-14\" #>  [411] \"2014-08-14\" \"2014-08-14\" \"2014-08-14\" \"2014-08-14\" \"2014-08-14\" #>  [416] \"2014-08-14\" \"2014-08-14\" \"2014-08-15\" \"2014-08-15\" \"2014-08-15\" #>  [421] \"2014-08-15\" \"2014-08-15\" \"2014-08-15\" \"2014-08-15\" \"2014-08-15\" #>  [426] \"2014-08-16\" \"2014-08-16\" \"2014-08-16\" \"2014-08-16\" \"2014-08-16\" #>  [431] \"2014-08-16\" \"2014-08-16\" \"2014-08-16\" \"2014-08-16\" \"2014-08-16\" #>  [436] \"2014-08-16\" \"2014-08-16\" \"2014-08-17\" \"2014-08-17\" \"2014-08-17\" #>  [441] \"2014-08-17\" \"2014-08-17\" \"2014-08-17\" \"2014-08-18\" \"2014-08-18\" #>  [446] \"2014-08-18\" \"2014-08-18\" \"2014-08-18\" \"2014-08-18\" \"2014-08-18\" #>  [451] \"2014-08-18\" \"2014-08-19\" \"2014-08-19\" \"2014-08-19\" \"2014-08-19\" #>  [456] \"2014-08-19\" \"2014-08-19\" \"2014-08-19\" \"2014-08-19\" \"2014-08-20\" #>  [461] \"2014-08-20\" \"2014-08-20\" \"2014-08-20\" \"2014-08-20\" \"2014-08-20\" #>  [466] \"2014-08-20\" \"2014-08-20\" \"2014-08-20\" \"2014-08-21\" \"2014-08-21\" #>  [471] \"2014-08-21\" \"2014-08-21\" \"2014-08-21\" \"2014-08-21\" \"2014-08-22\" #>  [476] \"2014-08-22\" \"2014-08-22\" \"2014-08-22\" \"2014-08-22\" \"2014-08-22\" #>  [481] \"2014-08-22\" \"2014-08-22\" \"2014-08-22\" \"2014-08-22\" \"2014-08-23\" #>  [486] \"2014-08-23\" \"2014-08-23\" \"2014-08-23\" \"2014-08-23\" \"2014-08-23\" #>  [491] \"2014-08-23\" \"2014-08-23\" \"2014-08-23\" \"2014-08-24\" \"2014-08-24\" #>  [496] \"2014-08-24\" \"2014-08-24\" \"2014-08-24\" \"2014-08-24\" \"2014-08-24\" #>  [501] \"2014-08-24\" \"2014-08-24\" \"2014-08-24\" \"2014-08-25\" \"2014-08-25\" #>  [506] \"2014-08-25\" \"2014-08-25\" \"2014-08-25\" \"2014-08-25\" \"2014-08-25\" #>  [511] \"2014-08-25\" \"2014-08-25\" \"2014-08-26\" \"2014-08-26\" \"2014-08-26\" #>  [516] \"2014-08-26\" \"2014-08-26\" \"2014-08-26\" \"2014-08-26\" \"2014-08-26\" #>  [521] \"2014-08-27\" \"2014-08-27\" \"2014-08-27\" \"2014-08-27\" \"2014-08-27\" #>  [526] \"2014-08-27\" \"2014-08-27\" \"2014-08-27\" \"2014-08-27\" \"2014-08-28\" #>  [531] \"2014-08-28\" \"2014-08-28\" \"2014-08-28\" \"2014-08-28\" \"2014-08-28\" #>  [536] \"2014-08-28\" \"2014-08-28\" \"2014-08-28\" \"2014-08-28\" \"2014-08-29\" #>  [541] \"2014-08-29\" \"2014-08-29\" \"2014-08-29\" \"2014-08-29\" \"2014-08-29\" #>  [546] \"2014-08-29\" \"2014-08-29\" \"2014-08-30\" \"2014-08-30\" \"2014-08-30\" #>  [551] \"2014-08-30\" \"2014-08-30\" \"2014-08-30\" \"2014-08-30\" \"2014-08-30\" #>  [556] \"2014-08-30\" \"2014-08-31\" \"2014-08-31\" \"2014-08-31\" \"2014-08-31\" #>  [561] \"2014-08-31\" \"2014-08-31\" \"2014-08-31\" \"2014-09-01\" \"2014-09-01\" #>  [566] \"2014-09-01\" \"2014-09-01\" \"2014-09-01\" \"2014-09-01\" \"2014-09-01\" #>  [571] \"2014-09-01\" \"2014-09-01\" \"2014-09-01\" \"2014-09-01\" \"2014-09-02\" #>  [576] \"2014-09-02\" \"2014-09-02\" \"2014-09-02\" \"2014-09-02\" \"2014-09-02\" #>  [581] \"2014-09-02\" \"2014-09-02\" \"2014-09-02\" \"2014-09-02\" \"2014-09-02\" #>  [586] \"2014-09-03\" \"2014-09-03\" \"2014-09-03\" \"2014-09-03\" \"2014-09-03\" #>  [591] \"2014-09-03\" \"2014-09-03\" \"2014-09-03\" \"2014-09-03\" \"2014-09-03\" #>  [596] \"2014-09-04\" \"2014-09-04\" \"2014-09-04\" \"2014-09-04\" \"2014-09-04\" #>  [601] \"2014-09-04\" \"2014-09-04\" \"2014-09-04\" \"2014-09-04\" \"2014-09-04\" #>  [606] \"2014-09-04\" \"2014-09-05\" \"2014-09-05\" \"2014-09-05\" \"2014-09-05\" #>  [611] \"2014-09-05\" \"2014-09-05\" \"2014-09-05\" \"2014-09-05\" \"2014-09-05\" #>  [616] \"2014-09-06\" \"2014-09-06\" \"2014-09-06\" \"2014-09-06\" \"2014-09-06\" #>  [621] \"2014-09-06\" \"2014-09-06\" \"2014-09-06\" \"2014-09-06\" \"2014-09-06\" #>  [626] \"2014-09-06\" \"2014-09-07\" \"2014-09-07\" \"2014-09-07\" \"2014-09-07\" #>  [631] \"2014-09-07\" \"2014-09-07\" \"2014-09-07\" \"2014-09-07\" \"2014-09-07\" #>  [636] \"2014-09-07\" \"2014-09-07\" \"2014-09-08\" \"2014-09-08\" \"2014-09-08\" #>  [641] \"2014-09-08\" \"2014-09-08\" \"2014-09-08\" \"2014-09-08\" \"2014-09-08\" #>  [646] \"2014-09-08\" \"2014-09-08\" \"2014-09-08\" \"2014-09-08\" \"2014-09-09\" #>  [651] \"2014-09-09\" \"2014-09-09\" \"2014-09-09\" \"2014-09-09\" \"2014-09-09\" #>  [656] \"2014-09-09\" \"2014-09-09\" \"2014-09-09\" \"2014-09-09\" \"2014-09-09\" #>  [661] \"2014-09-10\" \"2014-09-10\" \"2014-09-10\" \"2014-09-10\" \"2014-09-10\" #>  [666] \"2014-09-10\" \"2014-09-10\" \"2014-09-10\" \"2014-09-10\" \"2014-09-10\" #>  [671] \"2014-09-11\" \"2014-09-11\" \"2014-09-11\" \"2014-09-11\" \"2014-09-11\" #>  [676] \"2014-09-11\" \"2014-09-11\" \"2014-09-11\" \"2014-09-11\" \"2014-09-11\" #>  [681] \"2014-09-11\" \"2014-09-12\" \"2014-09-12\" \"2014-09-12\" \"2014-09-12\" #>  [686] \"2014-09-12\" \"2014-09-12\" \"2014-09-12\" \"2014-09-12\" \"2014-09-12\" #>  [691] \"2014-09-12\" \"2014-09-13\" \"2014-09-13\" \"2014-09-13\" \"2014-09-13\" #>  [696] \"2014-09-13\" \"2014-09-13\" \"2014-09-13\" \"2014-09-13\" \"2014-09-13\" #>  [701] \"2014-09-13\" \"2014-09-13\" \"2014-09-14\" \"2014-09-14\" \"2014-09-14\" #>  [706] \"2014-09-14\" \"2014-09-14\" \"2014-09-14\" \"2014-09-14\" \"2014-09-14\" #>  [711] \"2014-09-14\" \"2014-09-14\" \"2014-09-14\" \"2014-09-14\" \"2014-09-15\" #>  [716] \"2014-09-15\" \"2014-09-15\" \"2014-09-15\" \"2014-09-15\" \"2014-09-15\" #>  [721] \"2014-09-15\" \"2014-09-15\" \"2014-09-15\" \"2014-09-15\" \"2014-09-15\" #>  [726] \"2014-09-15\" \"2014-09-16\" \"2014-09-16\" \"2014-09-16\" \"2014-09-16\" #>  [731] \"2014-09-16\" \"2014-09-16\" \"2014-09-16\" \"2014-09-16\" \"2014-09-16\" #>  [736] \"2014-09-16\" \"2014-09-16\" \"2014-09-17\" \"2014-09-17\" \"2014-09-17\" #>  [741] \"2014-09-17\" \"2014-09-17\" \"2014-09-17\" \"2014-09-17\" \"2014-09-17\" #>  [746] \"2014-09-17\" \"2014-09-17\" \"2014-09-18\" \"2014-09-18\" \"2014-09-18\" #>  [751] \"2014-09-18\" \"2014-09-18\" \"2014-09-18\" \"2014-09-18\" \"2014-09-18\" #>  [756] \"2014-09-18\" \"2014-09-18\" \"2014-09-18\" \"2014-09-19\" \"2014-09-19\" #>  [761] \"2014-09-19\" \"2014-09-19\" \"2014-09-19\" \"2014-09-19\" \"2014-09-19\" #>  [766] \"2014-09-19\" \"2014-09-19\" \"2014-09-19\" \"2014-09-20\" \"2014-09-20\" #>  [771] \"2014-09-20\" \"2014-09-20\" \"2014-09-20\" \"2014-09-20\" \"2014-09-20\" #>  [776] \"2014-09-20\" \"2014-09-20\" \"2014-09-20\" \"2014-09-21\" \"2014-09-21\" #>  [781] \"2014-09-21\" \"2014-09-21\" \"2014-09-21\" \"2014-09-21\" \"2014-09-21\" #>  [786] \"2014-09-21\" \"2014-09-21\" \"2014-09-21\" \"2014-09-21\" \"2014-09-21\" #>  [791] \"2014-09-22\" \"2014-09-22\" \"2014-09-22\" \"2014-09-22\" \"2014-09-22\" #>  [796] \"2014-09-22\" \"2014-09-22\" \"2014-09-22\" \"2014-09-22\" \"2014-09-23\" #>  [801] \"2014-09-23\" \"2014-09-23\" \"2014-09-23\" \"2014-09-23\" \"2014-09-23\" #>  [806] \"2014-09-23\" \"2014-09-23\" \"2014-09-23\" \"2014-09-23\" \"2014-09-23\" #>  [811] \"2014-09-23\" \"2014-09-24\" \"2014-09-24\" \"2014-09-24\" \"2014-09-24\" #>  [816] \"2014-09-24\" \"2014-09-24\" \"2014-09-24\" \"2014-09-24\" \"2014-09-24\" #>  [821] \"2014-09-24\" \"2014-09-24\" \"2014-09-24\" \"2014-09-25\" \"2014-09-25\" #>  [826] \"2014-09-25\" \"2014-09-25\" \"2014-09-25\" \"2014-09-25\" \"2014-09-25\" #>  [831] \"2014-09-25\" \"2014-09-25\" \"2014-09-25\" \"2014-09-26\" \"2014-09-26\" #>  [836] \"2014-09-26\" \"2014-09-26\" \"2014-09-26\" \"2014-09-26\" \"2014-09-26\" #>  [841] \"2014-09-26\" \"2014-09-26\" \"2014-09-26\" \"2014-09-27\" \"2014-09-27\" #>  [846] \"2014-09-27\" \"2014-09-27\" \"2014-09-27\" \"2014-09-27\" \"2014-09-27\" #>  [851] \"2014-09-27\" \"2014-09-27\" \"2014-09-27\" \"2014-09-27\" \"2014-09-28\" #>  [856] \"2014-09-28\" \"2014-09-28\" \"2014-09-28\" \"2014-09-28\" \"2014-09-28\" #>  [861] \"2014-09-28\" \"2014-09-28\" \"2014-09-28\" \"2014-09-28\" \"2014-09-29\" #>  [866] \"2014-09-29\" \"2014-09-29\" \"2014-09-29\" \"2014-09-29\" \"2014-09-29\" #>  [871] \"2014-09-29\" \"2014-09-29\" \"2014-09-29\" \"2014-09-29\" \"2014-09-30\" #>  [876] \"2014-09-30\" \"2014-09-30\" \"2014-09-30\" \"2014-09-30\" \"2014-09-30\" #>  [881] \"2014-09-30\" \"2014-09-30\" \"2014-09-30\" \"2014-09-30\" \"2014-09-30\" #>  [886] \"2014-10-01\" \"2014-10-01\" \"2014-10-01\" \"2014-10-01\" \"2014-10-01\" #>  [891] \"2014-10-01\" \"2014-10-01\" \"2014-10-01\" \"2014-10-01\" \"2014-10-01\" #>  [896] \"2014-10-01\" \"2014-10-02\" \"2014-10-02\" \"2014-10-02\" \"2014-10-02\" #>  [901] \"2014-10-02\" \"2014-10-02\" \"2014-10-02\" \"2014-10-02\" \"2014-10-02\" #>  [906] \"2014-10-02\" \"2014-10-02\" \"2014-10-02\" \"2014-10-03\" \"2014-10-03\" #>  [911] \"2014-10-03\" \"2014-10-03\" \"2014-10-03\" \"2014-10-03\" \"2014-10-03\" #>  [916] \"2014-10-03\" \"2014-10-03\" \"2014-10-03\" \"2014-10-03\" \"2014-10-04\" #>  [921] \"2014-10-04\" \"2014-10-04\" \"2014-10-04\" \"2014-10-04\" \"2014-10-04\" #>  [926] \"2014-10-04\" \"2014-10-04\" \"2014-10-04\" \"2014-10-04\" \"2014-10-04\" #>  [931] \"2014-10-04\" \"2014-10-05\" \"2014-10-05\" \"2014-10-05\" \"2014-10-05\" #>  [936] \"2014-10-05\" \"2014-10-05\" \"2014-10-05\" \"2014-10-05\" \"2014-10-05\" #>  [941] \"2014-10-05\" \"2014-10-06\" \"2014-10-06\" \"2014-10-06\" \"2014-10-06\" #>  [946] \"2014-10-06\" \"2014-10-06\" \"2014-10-06\" \"2014-10-06\" \"2014-10-06\" #>  [951] \"2014-10-06\" \"2014-10-06\" \"2014-10-07\" \"2014-10-07\" \"2014-10-07\" #>  [956] \"2014-10-07\" \"2014-10-07\" \"2014-10-07\" \"2014-10-07\" \"2014-10-07\" #>  [961] \"2014-10-07\" \"2014-10-07\" \"2014-10-07\" \"2014-10-07\" \"2014-10-08\" #>  [966] \"2014-10-08\" \"2014-10-08\" \"2014-10-08\" \"2014-10-08\" \"2014-10-08\" #>  [971] \"2014-10-08\" \"2014-10-08\" \"2014-10-08\" \"2014-10-08\" \"2014-10-08\" #>  [976] \"2014-10-08\" \"2014-10-09\" \"2014-10-09\" \"2014-10-09\" \"2014-10-09\" #>  [981] \"2014-10-09\" \"2014-10-09\" \"2014-10-09\" \"2014-10-09\" \"2014-10-09\" #>  [986] \"2014-10-10\" \"2014-10-10\" \"2014-10-10\" \"2014-10-10\" \"2014-10-10\" #>  [991] \"2014-10-10\" \"2014-10-10\" \"2014-10-10\" \"2014-10-10\" \"2014-10-10\" #>  [996] \"2014-10-10\" \"2014-10-11\" \"2014-10-11\" \"2014-10-11\" \"2014-10-11\" #> [1001] \"2014-10-11\" \"2014-10-11\" \"2014-10-11\" \"2014-10-11\" \"2014-10-11\" #> [1006] \"2014-10-11\" \"2014-10-11\" \"2014-10-12\" \"2014-10-12\" \"2014-10-12\" #> [1011] \"2014-10-12\" \"2014-10-12\" \"2014-10-12\" \"2014-10-12\" \"2014-10-12\" #> [1016] \"2014-10-12\" \"2014-10-12\" \"2014-10-12\" \"2014-10-13\" \"2014-10-13\" #> [1021] \"2014-10-13\" \"2014-10-13\" \"2014-10-13\" \"2014-10-13\" \"2014-10-13\" #> [1026] \"2014-10-13\" \"2014-10-13\" \"2014-10-13\" \"2014-10-13\" \"2014-10-14\" #> [1031] \"2014-10-14\" \"2014-10-14\" \"2014-10-14\" \"2014-10-14\" \"2014-10-14\" #> [1036] \"2014-10-14\" \"2014-10-14\" \"2014-10-14\" \"2014-10-14\" \"2014-10-14\" #> [1041] \"2014-10-15\" \"2014-10-15\" \"2014-10-15\" \"2014-10-15\" \"2014-10-15\" #> [1046] \"2014-10-15\" \"2014-10-15\" \"2014-10-15\" \"2014-10-15\" \"2014-10-15\" #> [1051] \"2014-10-15\" \"2014-10-16\" \"2014-10-16\" \"2014-10-16\" \"2014-10-16\" #> [1056] \"2014-10-16\" \"2014-10-16\" \"2014-10-16\" \"2014-10-16\" \"2014-10-16\" #> [1061] \"2014-10-16\" \"2014-10-17\" \"2014-10-17\" \"2014-10-17\" \"2014-10-17\" #> [1066] \"2014-10-17\" \"2014-10-17\" \"2014-10-17\" \"2014-10-17\" \"2014-10-17\" #> [1071] \"2014-10-17\" \"2014-10-18\" \"2014-10-18\" \"2014-10-18\" \"2014-10-18\" #> [1076] \"2014-10-18\" \"2014-10-18\" \"2014-10-18\" \"2014-10-18\" \"2014-10-18\" #> [1081] \"2014-10-18\" \"2014-10-18\" \"2014-10-19\" \"2014-10-19\" \"2014-10-19\" #> [1086] \"2014-10-19\" \"2014-10-19\" \"2014-10-19\" \"2014-10-19\" \"2014-10-19\" #> [1091] \"2014-10-19\" \"2014-10-19\" \"2014-10-19\" \"2014-10-20\" \"2014-10-20\" #> [1096] \"2014-10-20\" \"2014-10-20\" \"2014-10-20\" \"2014-10-20\" \"2014-10-20\" #> [1101] \"2014-10-20\" \"2014-10-20\" \"2014-10-20\" \"2014-10-21\" \"2014-10-21\" #> [1106] \"2014-10-21\" \"2014-10-21\" \"2014-10-21\" \"2014-10-21\" \"2014-10-21\" #> [1111] \"2014-10-21\" \"2014-10-21\" \"2014-10-21\" \"2014-10-22\" \"2014-10-22\" #> [1116] \"2014-10-22\" \"2014-10-22\" \"2014-10-22\" \"2014-10-22\" \"2014-10-22\" #> [1121] \"2014-10-22\" \"2014-10-23\" \"2014-10-23\" \"2014-10-23\" \"2014-10-23\" #> [1126] \"2014-10-23\" \"2014-10-23\" \"2014-10-23\" \"2014-10-23\" \"2014-10-23\" #> [1131] \"2014-10-23\" \"2014-10-23\" \"2014-10-24\" \"2014-10-24\" \"2014-10-24\" #> [1136] \"2014-10-24\" \"2014-10-24\" \"2014-10-24\" \"2014-10-24\" \"2014-10-24\" #> [1141] \"2014-10-24\" \"2014-10-24\" \"2014-10-24\" \"2014-10-24\" \"2014-10-25\" #> [1146] \"2014-10-25\" \"2014-10-25\" \"2014-10-25\" \"2014-10-25\" \"2014-10-25\" #> [1151] \"2014-10-25\" \"2014-10-25\" \"2014-10-25\" \"2014-10-26\" \"2014-10-26\" #> [1156] \"2014-10-26\" \"2014-10-26\" \"2014-10-26\" \"2014-10-26\" \"2014-10-26\" #> [1161] \"2014-10-26\" \"2014-10-26\" \"2014-10-26\" \"2014-10-27\" \"2014-10-27\" #> [1166] \"2014-10-27\" \"2014-10-27\" \"2014-10-27\" \"2014-10-27\" \"2014-10-27\" #> [1171] \"2014-10-27\" \"2014-10-27\" \"2014-10-27\" \"2014-10-27\" \"2014-10-28\" #> [1176] \"2014-10-28\" \"2014-10-28\" \"2014-10-28\" \"2014-10-28\" \"2014-10-28\" #> [1181] \"2014-10-28\" \"2014-10-28\" \"2014-10-28\" \"2014-10-28\" \"2014-10-28\" #> [1186] \"2014-10-29\" \"2014-10-29\" \"2014-10-29\" \"2014-10-29\" \"2014-10-29\" #> [1191] \"2014-10-29\" \"2014-10-29\" \"2014-10-30\" \"2014-10-30\" \"2014-10-30\" #> [1196] \"2014-10-30\" \"2014-10-30\" \"2014-10-30\" \"2014-10-30\" \"2014-10-30\" #> [1201] \"2014-10-30\" \"2014-10-30\" \"2014-10-30\" \"2014-10-30\" \"2014-10-31\" #> [1206] \"2014-10-31\" \"2014-10-31\" \"2014-10-31\" \"2014-10-31\" \"2014-10-31\" #> [1211] \"2014-10-31\" \"2014-10-31\" \"2014-10-31\" \"2014-10-31\" \"2014-10-31\" #> [1216] \"2014-11-01\" \"2014-11-01\" \"2014-11-01\" \"2014-11-01\" \"2014-11-01\" #> [1221] \"2014-11-01\" \"2014-11-01\" \"2014-11-01\" \"2014-11-01\" \"2014-11-01\" #> [1226] \"2014-11-01\" \"2014-11-02\" \"2014-11-02\" \"2014-11-02\" \"2014-11-02\" #> [1231] \"2014-11-02\" \"2014-11-02\" \"2014-11-02\" \"2014-11-02\" \"2014-11-02\" #> [1236] \"2014-11-02\" \"2014-11-02\" \"2014-11-02\" \"2014-11-03\" \"2014-11-03\" #> [1241] \"2014-11-03\" \"2014-11-03\" \"2014-11-03\" \"2014-11-03\" \"2014-11-03\" #> [1246] \"2014-11-03\" \"2014-11-03\" \"2014-11-03\" \"2014-11-03\" \"2014-11-04\" #> [1251] \"2014-11-04\" \"2014-11-04\" \"2014-11-04\" \"2014-11-04\" \"2014-11-04\" #> [1256] \"2014-11-04\" \"2014-11-04\" \"2014-11-04\" \"2014-11-04\" \"2014-11-04\" #> [1261] \"2014-11-05\" \"2014-11-05\" \"2014-11-05\" \"2014-11-05\" \"2014-11-05\" #> [1266] \"2014-11-05\" \"2014-11-05\" \"2014-11-05\" \"2014-11-05\" \"2014-11-05\" #> [1271] \"2014-11-05\" \"2014-11-06\" \"2014-11-06\" \"2014-11-06\" \"2014-11-06\" #> [1276] \"2014-11-06\" \"2014-11-06\" \"2014-11-06\" \"2014-11-06\" \"2014-11-06\" #> [1281] \"2014-11-06\" \"2014-11-06\" \"2014-11-07\" \"2014-11-07\" \"2014-11-07\" #> [1286] \"2014-11-07\" \"2014-11-07\" \"2014-11-07\" \"2014-11-07\" \"2014-11-07\" #> [1291] \"2014-11-07\" \"2014-11-07\" \"2014-11-07\" \"2014-11-08\" \"2014-11-08\" #> [1296] \"2014-11-08\" \"2014-11-08\" \"2014-11-08\" \"2014-11-08\" \"2014-11-08\" #> [1301] \"2014-11-08\" \"2014-11-08\" \"2014-11-08\" \"2014-11-08\" \"2014-11-09\" #> [1306] \"2014-11-09\" \"2014-11-09\" \"2014-11-09\" \"2014-11-09\" \"2014-11-09\" #> [1311] \"2014-11-09\" \"2014-11-09\" \"2014-11-09\" \"2014-11-09\" \"2014-11-10\" #> [1316] \"2014-11-10\" \"2014-11-10\" \"2014-11-10\" \"2014-11-10\" \"2014-11-10\" #> [1321] \"2014-11-10\" \"2014-11-10\" \"2014-11-10\" \"2014-11-10\" \"2014-11-10\" #> [1326] \"2014-11-10\" \"2014-11-11\" \"2014-11-11\" \"2014-11-11\" \"2014-11-11\" #> [1331] \"2014-11-11\" \"2014-11-11\" \"2014-11-11\" \"2014-11-11\" \"2014-11-11\" #> [1336] \"2014-11-12\" \"2014-11-12\" \"2014-11-12\" \"2014-11-12\" \"2014-11-12\" #> [1341] \"2014-11-12\" \"2014-11-12\" \"2014-11-12\" \"2014-11-12\" \"2014-11-12\" #> [1346] \"2014-11-12\" \"2014-11-13\" \"2014-11-13\" \"2014-11-13\" \"2014-11-13\" #> [1351] \"2014-11-13\" \"2014-11-13\" \"2014-11-13\" \"2014-11-13\" \"2014-11-13\" #> [1356] \"2014-11-14\" \"2014-11-14\" \"2014-11-14\" \"2014-11-14\" \"2014-11-14\" #> [1361] \"2014-11-14\" \"2014-11-14\" \"2014-11-14\" \"2014-11-14\" \"2014-11-14\" #> [1366] \"2014-11-14\" \"2014-11-15\" \"2014-11-15\" \"2014-11-15\" \"2014-11-15\" #> [1371] \"2014-11-15\" \"2014-11-15\" \"2014-11-15\" \"2014-11-15\" \"2014-11-15\" #> [1376] \"2014-11-15\" \"2014-11-15\" \"2014-11-16\" \"2014-11-16\" \"2014-11-16\" #> [1381] \"2014-11-16\" \"2014-11-16\" \"2014-11-16\" \"2014-11-16\" \"2014-11-16\" #> [1386] \"2014-11-16\" \"2014-11-16\" \"2014-11-17\" \"2014-11-17\" \"2014-11-17\" #> [1391] \"2014-11-17\" \"2014-11-17\" \"2014-11-17\" \"2014-11-17\" \"2014-11-17\" #> [1396] \"2014-11-17\" \"2014-11-18\" \"2014-11-18\" \"2014-11-18\" \"2014-11-18\" #> [1401] \"2014-11-18\" \"2014-11-18\" \"2014-11-18\" \"2014-11-18\" \"2014-11-18\" #> [1406] \"2014-11-18\" \"2014-11-19\" \"2014-11-19\" \"2014-11-19\" \"2014-11-19\" #> [1411] \"2014-11-20\" \"2014-11-20\" \"2014-11-20\" \"2014-11-20\" \"2014-11-20\" #> [1416] \"2014-11-20\" \"2014-11-20\" \"2014-11-20\" \"2014-11-20\" \"2014-11-21\" #> [1421] \"2014-11-21\" \"2014-11-21\" \"2014-11-21\" \"2014-11-21\" \"2014-11-21\" #> [1426] \"2014-11-21\" \"2014-11-22\" \"2014-11-22\" \"2014-11-22\" \"2014-11-22\" #> [1431] \"2014-11-22\" \"2014-11-22\" \"2014-11-22\" \"2014-11-22\" \"2014-11-22\" #> [1436] \"2014-11-22\" \"2014-11-23\" \"2014-11-23\" \"2014-11-23\" \"2014-11-23\" #> [1441] \"2014-11-23\" \"2014-11-23\" \"2014-11-23\" \"2014-11-23\" \"2014-11-23\" #> [1446] \"2014-11-23\" \"2014-11-23\" \"2014-11-23\" \"2014-11-24\" \"2014-11-24\" #> [1451] \"2014-11-24\" \"2014-11-24\" \"2014-11-24\" \"2014-11-24\" \"2014-11-24\" #> [1456] \"2014-11-24\" \"2014-11-24\" \"2014-11-24\" \"2014-11-24\" \"2014-11-24\" #> [1461] \"2014-11-25\" \"2014-11-25\" \"2014-11-25\" \"2014-11-25\" \"2014-11-25\" #> [1466] \"2014-11-25\" \"2014-11-25\" \"2014-11-25\" \"2014-11-25\" \"2014-11-26\" #> [1471] \"2014-11-26\" \"2014-11-26\" \"2014-11-26\" \"2014-11-26\" \"2014-11-26\" #> [1476] \"2014-11-26\" \"2014-11-26\" \"2014-11-27\" \"2014-11-27\" \"2014-11-27\" #> [1481] \"2014-11-27\" \"2014-11-27\" \"2014-11-27\" \"2014-11-27\" \"2014-11-27\" #> [1486] \"2014-11-28\" \"2014-11-28\" \"2014-11-28\" \"2014-11-28\" \"2014-11-28\" #> [1491] \"2014-11-28\" \"2014-11-28\" \"2014-11-28\" \"2014-11-28\" \"2014-11-29\" #> [1496] \"2014-11-29\" \"2014-11-29\" \"2014-11-29\" \"2014-11-29\" \"2014-11-29\" #> [1501] \"2014-11-29\" \"2014-11-29\" \"2014-11-29\" \"2014-11-30\" \"2014-11-30\" #> [1506] \"2014-11-30\" \"2014-11-30\" \"2014-11-30\" \"2014-11-30\" \"2014-11-30\" #> [1511] \"2014-11-30\" \"2014-12-01\" \"2014-12-01\" \"2014-12-01\" \"2014-12-01\" #> [1516] \"2014-12-01\" \"2014-12-01\" \"2014-12-01\" \"2014-12-01\" \"2014-12-01\" #> [1521] \"2014-12-01\" \"2014-12-01\" \"2014-12-02\" \"2014-12-02\" \"2014-12-02\" #> [1526] \"2014-12-02\" \"2014-12-02\" \"2014-12-02\" \"2014-12-02\" \"2014-12-02\" #> [1531] \"2014-12-02\" \"2014-12-02\" \"2014-12-02\" \"2014-12-03\" \"2014-12-03\" #> [1536] \"2014-12-03\" \"2014-12-03\" \"2014-12-03\" \"2014-12-03\" \"2014-12-03\" #> [1541] \"2014-12-03\" \"2014-12-04\" \"2014-12-04\" \"2014-12-04\" \"2014-12-04\" #> [1546] \"2014-12-04\" \"2014-12-04\" \"2014-12-04\" \"2014-12-04\" \"2014-12-04\" #> [1551] \"2014-12-04\" \"2014-12-04\" \"2014-12-05\" \"2014-12-05\" \"2014-12-05\" #> [1556] \"2014-12-05\" \"2014-12-05\" \"2014-12-05\" \"2014-12-05\" \"2014-12-05\" #> [1561] \"2014-12-05\" \"2014-12-05\" \"2014-12-06\" \"2014-12-06\" \"2014-12-06\" #> [1566] \"2014-12-06\" \"2014-12-06\" \"2014-12-06\" \"2014-12-06\" \"2014-12-06\" #> [1571] \"2014-12-07\" \"2014-12-07\" \"2014-12-07\" \"2014-12-07\" \"2014-12-07\" #> [1576] \"2014-12-07\" \"2014-12-07\" \"2014-12-07\" \"2014-12-07\" \"2014-12-07\" #> [1581] \"2014-12-07\" \"2014-12-08\" \"2014-12-08\" \"2014-12-08\" \"2014-12-08\" #> [1586] \"2014-12-08\" \"2014-12-08\" \"2014-12-08\" \"2014-12-09\" \"2014-12-09\" #> [1591] \"2014-12-09\" \"2014-12-09\" \"2014-12-09\" \"2014-12-09\" \"2014-12-09\" #> [1596] \"2014-12-09\" \"2014-12-09\" \"2014-12-09\" \"2014-12-09\" \"2014-12-10\" #> [1601] \"2014-12-10\" \"2014-12-10\" \"2014-12-10\" \"2014-12-10\" \"2014-12-10\" #> [1606] \"2014-12-10\" \"2014-12-10\" \"2014-12-10\" \"2014-12-10\" \"2014-12-10\" #> [1611] \"2014-12-11\" \"2014-12-11\" \"2014-12-11\" \"2014-12-11\" \"2014-12-11\" #> [1616] \"2014-12-11\" \"2014-12-11\" \"2014-12-11\" \"2014-12-12\" \"2014-12-12\" #> [1621] \"2014-12-12\" \"2014-12-12\" \"2014-12-12\" \"2014-12-12\" \"2014-12-12\" #> [1626] \"2014-12-12\" \"2014-12-12\" \"2014-12-13\" \"2014-12-13\" \"2014-12-13\" #> [1631] \"2014-12-13\" \"2014-12-13\" \"2014-12-13\" \"2014-12-13\" \"2014-12-13\" #> [1636] \"2014-12-13\" \"2014-12-14\" \"2014-12-14\" \"2014-12-14\" \"2014-12-14\" #> [1641] \"2014-12-14\" \"2014-12-14\" \"2014-12-14\" \"2014-12-14\" \"2014-12-14\" #> [1646] \"2014-12-14\" \"2014-12-15\" \"2014-12-15\" \"2014-12-15\" \"2014-12-15\" #> [1651] \"2014-12-15\" \"2014-12-15\" \"2014-12-15\" \"2014-12-15\" \"2014-12-15\" #> [1656] \"2014-12-16\" \"2014-12-16\" \"2014-12-16\" \"2014-12-16\" \"2014-12-16\" #> [1661] \"2014-12-16\" \"2014-12-16\" \"2014-12-16\" \"2014-12-17\" \"2014-12-17\" #> [1666] \"2014-12-17\" \"2014-12-17\" \"2014-12-17\" \"2014-12-17\" \"2014-12-17\" #> [1671] \"2014-12-17\" \"2014-12-17\" \"2014-12-18\" \"2014-12-18\" \"2014-12-18\" #> [1676] \"2014-12-18\" \"2014-12-18\" \"2014-12-18\" \"2014-12-18\" \"2014-12-19\" #> [1681] \"2014-12-19\" \"2014-12-19\" \"2014-12-19\" \"2014-12-19\" \"2014-12-19\" #> [1686] \"2014-12-19\" \"2014-12-19\" \"2014-12-19\" \"2014-12-19\" \"2014-12-20\" #> [1691] \"2014-12-20\" \"2014-12-20\" \"2014-12-20\" \"2014-12-20\" \"2014-12-20\" #> [1696] \"2014-12-21\" \"2014-12-21\" \"2014-12-21\" \"2014-12-21\" \"2014-12-21\" #> [1701] \"2014-12-21\" \"2014-12-21\" \"2014-12-21\" \"2014-12-21\" \"2014-12-22\" #> [1706] \"2014-12-22\" \"2014-12-22\" \"2014-12-22\" \"2014-12-22\" \"2014-12-22\" #> [1711] \"2014-12-22\" \"2014-12-22\" \"2014-12-22\" \"2014-12-23\" \"2014-12-23\" #> [1716] \"2014-12-23\" \"2014-12-23\" \"2014-12-23\" \"2014-12-23\" \"2014-12-23\" #> [1721] \"2014-12-23\" \"2014-12-23\" \"2014-12-24\" \"2014-12-24\" \"2014-12-24\" #> [1726] \"2014-12-24\" \"2014-12-24\" \"2014-12-24\" \"2014-12-25\" \"2014-12-25\" #> [1731] \"2014-12-25\" \"2014-12-25\" \"2014-12-25\" \"2014-12-25\" \"2014-12-25\" #> [1736] \"2014-12-25\" \"2014-12-25\" \"2014-12-26\" \"2014-12-26\" \"2014-12-26\" #> [1741] \"2014-12-26\" \"2014-12-26\" \"2014-12-26\" \"2014-12-26\" \"2014-12-26\" #> [1746] \"2014-12-26\" \"2014-12-26\" \"2014-12-27\" \"2014-12-27\" \"2014-12-27\" #> [1751] \"2014-12-27\" \"2014-12-27\" \"2014-12-27\" \"2014-12-27\" \"2014-12-27\" #> [1756] \"2014-12-27\" \"2014-12-28\" \"2014-12-28\" \"2014-12-28\" \"2014-12-28\" #> [1761] \"2014-12-28\" \"2014-12-28\" \"2014-12-29\" \"2014-12-29\" \"2014-12-29\" #> [1766] \"2014-12-29\" \"2014-12-29\" \"2014-12-29\" \"2014-12-29\" \"2014-12-29\" #> [1771] \"2014-12-30\" \"2014-12-30\" \"2014-12-30\" \"2014-12-30\" \"2014-12-30\" #> [1776] \"2014-12-30\" \"2014-12-30\" \"2014-12-30\" \"2014-12-31\" \"2014-12-31\" #> [1781] \"2014-12-31\" \"2014-12-31\" \"2014-12-31\" \"2014-12-31\" \"2015-01-01\" #> [1786] \"2015-01-01\" \"2015-01-01\" \"2015-01-01\" \"2015-01-01\" \"2015-01-01\" #> [1791] \"2015-01-02\" \"2015-01-02\" \"2015-01-02\" \"2015-01-02\" \"2015-01-02\" #> [1796] \"2015-01-02\" \"2015-01-02\" \"2015-01-02\" \"2015-01-03\" \"2015-01-03\" #> [1801] \"2015-01-03\" \"2015-01-03\" \"2015-01-03\" \"2015-01-03\" \"2015-01-04\" #> [1806] \"2015-01-04\" \"2015-01-04\" \"2015-01-04\" \"2015-01-04\" \"2015-01-04\" #> [1811] \"2015-01-04\" \"2015-01-04\" \"2015-01-04\" \"2015-01-05\" \"2015-01-05\" #> [1816] \"2015-01-05\" \"2015-01-05\" \"2015-01-05\" \"2015-01-05\" \"2015-01-05\" #> [1821] \"2015-01-05\" \"2015-01-05\" \"2015-01-06\" \"2015-01-06\" \"2015-01-06\" #> [1826] \"2015-01-06\" \"2015-01-06\" \"2015-01-06\" \"2015-01-06\" \"2015-01-06\" #> [1831] \"2015-01-06\" \"2015-01-07\" \"2015-01-07\" \"2015-01-07\" \"2015-01-07\" #> [1836] \"2015-01-07\" \"2015-01-07\" \"2015-01-07\" \"2015-01-07\" \"2015-01-07\" #> [1841] \"2015-01-07\" \"2015-01-08\" \"2015-01-08\" \"2015-01-08\" \"2015-01-08\" #> [1846] \"2015-01-08\" \"2015-01-08\" \"2015-01-09\" \"2015-01-09\" \"2015-01-09\" #> [1851] \"2015-01-09\" \"2015-01-09\" \"2015-01-09\" \"2015-01-09\" \"2015-01-09\" #> [1856] \"2015-01-09\" \"2015-01-09\" \"2015-01-10\" \"2015-01-10\" \"2015-01-10\" #> [1861] \"2015-01-10\" \"2015-01-10\" \"2015-01-10\" \"2015-01-10\" \"2015-01-10\" #> [1866] \"2015-01-11\" \"2015-01-11\" \"2015-01-11\" \"2015-01-11\" \"2015-01-11\" #> [1871] \"2015-01-11\" \"2015-01-12\" \"2015-01-12\" \"2015-01-12\" \"2015-01-12\" #> [1876] \"2015-01-12\" \"2015-01-12\" \"2015-01-13\" \"2015-01-13\" \"2015-01-13\" #> [1881] \"2015-01-13\" \"2015-01-13\" \"2015-01-13\" \"2015-01-13\" \"2015-01-13\" #> [1886] \"2015-01-13\" \"2015-01-14\" \"2015-01-14\" \"2015-01-14\" \"2015-01-14\" #> [1891] \"2015-01-14\" \"2015-01-14\" \"2015-01-14\" \"2015-01-14\" \"2015-01-15\" #> [1896] \"2015-01-15\" \"2015-01-15\" \"2015-01-15\" \"2015-01-15\" \"2015-01-15\" #> [1901] \"2015-01-15\" \"2015-01-16\" \"2015-01-16\" \"2015-01-16\" \"2015-01-16\" #> [1906] \"2015-01-16\" \"2015-01-16\" \"2015-01-16\" \"2015-01-16\" \"2015-01-16\" #> [1911] \"2015-01-17\" \"2015-01-17\" \"2015-01-17\" \"2015-01-17\" \"2015-01-17\" #> [1916] \"2015-01-17\" \"2015-01-17\" \"2015-01-17\" \"2015-01-18\" \"2015-01-18\" #> [1921] \"2015-01-18\" \"2015-01-18\" \"2015-01-18\" \"2015-01-18\" \"2015-01-18\" #> [1926] \"2015-01-18\" \"2015-01-18\" \"2015-01-18\" \"2015-01-18\" \"2015-01-19\" #> [1931] \"2015-01-19\" \"2015-01-19\" \"2015-01-19\" \"2015-01-19\" \"2015-01-19\" #> [1936] \"2015-01-19\" \"2015-01-19\" \"2015-01-20\" \"2015-01-20\" \"2015-01-20\" #> [1941] \"2015-01-20\" \"2015-01-20\" \"2015-01-20\" \"2015-01-20\" \"2015-01-21\" #> [1946] \"2015-01-21\" \"2015-01-21\" \"2015-01-21\" \"2015-01-21\" \"2015-01-21\" #> [1951] \"2015-01-21\" \"2015-01-21\" \"2015-01-21\" \"2015-01-22\" \"2015-01-22\" #> [1956] \"2015-01-22\" \"2015-01-22\" \"2015-01-22\" \"2015-01-22\" \"2015-01-22\" #> [1961] \"2015-01-22\" \"2015-01-22\" \"2015-01-22\" \"2015-01-23\" \"2015-01-23\" #> [1966] \"2015-01-23\" \"2015-01-23\" \"2015-01-23\" \"2015-01-23\" \"2015-01-23\" #> [1971] \"2015-01-23\" \"2015-01-24\" \"2015-01-24\" \"2015-01-24\" \"2015-01-24\" #> [1976] \"2015-01-24\" \"2015-01-24\" \"2015-01-24\" \"2015-01-24\" \"2015-01-25\" #> [1981] \"2015-01-25\" \"2015-01-25\" \"2015-01-25\" \"2015-01-25\" \"2015-01-25\" #> [1986] \"2015-01-26\" \"2015-01-26\" \"2015-01-26\" \"2015-01-26\" \"2015-01-26\" #> [1991] \"2015-01-26\" \"2015-01-26\" \"2015-01-27\" \"2015-01-27\" \"2015-01-27\" #> [1996] \"2015-01-27\" \"2015-01-27\" \"2015-01-28\" \"2015-01-28\" \"2015-01-28\" #> [2001] \"2015-01-28\" \"2015-01-28\" \"2015-01-28\" \"2015-01-28\" \"2015-01-28\" #> [2006] \"2015-01-29\" \"2015-01-29\" \"2015-01-29\" \"2015-01-29\" \"2015-01-29\" #> [2011] \"2015-01-29\" \"2015-01-29\" \"2015-01-30\" \"2015-01-30\" \"2015-01-30\" #> [2016] \"2015-01-30\" \"2015-01-30\" \"2015-01-30\" \"2015-01-30\" \"2015-01-30\" #> [2021] \"2015-01-31\" \"2015-01-31\" \"2015-01-31\" \"2015-01-31\" \"2015-01-31\" #> [2026] \"2015-01-31\" \"2015-01-31\" \"2015-01-31\" \"2015-01-31\" \"2015-02-01\" #> [2031] \"2015-02-01\" \"2015-02-01\" \"2015-02-01\" \"2015-02-01\" \"2015-02-02\" #> [2036] \"2015-02-02\" \"2015-02-02\" \"2015-02-02\" \"2015-02-02\" \"2015-02-02\" #> [2041] \"2015-02-02\" \"2015-02-02\" \"2015-02-02\" \"2015-02-02\" \"2015-02-03\" #> [2046] \"2015-02-03\" \"2015-02-03\" \"2015-02-03\" \"2015-02-03\" \"2015-02-03\" #> [2051] \"2015-02-04\" \"2015-02-04\" \"2015-02-04\" \"2015-02-04\" \"2015-02-04\" #> [2056] \"2015-02-04\" \"2015-02-04\" \"2015-02-05\" \"2015-02-05\" \"2015-02-05\" #> [2061] \"2015-02-05\" \"2015-02-05\" \"2015-02-05\" \"2015-02-05\" \"2015-02-05\" #> [2066] \"2015-02-06\" \"2015-02-06\" \"2015-02-06\" \"2015-02-06\" \"2015-02-06\" #> [2071] \"2015-02-06\" \"2015-02-06\" \"2015-02-07\" \"2015-02-07\" \"2015-02-07\" #> [2076] \"2015-02-07\" \"2015-02-07\" \"2015-02-07\" \"2015-02-08\" \"2015-02-08\" #> [2081] \"2015-02-08\" \"2015-02-08\" \"2015-02-08\" \"2015-02-08\" \"2015-02-09\" #> [2086] \"2015-02-09\" \"2015-02-09\" \"2015-02-09\" \"2015-02-09\" \"2015-02-09\" #> [2091] \"2015-02-10\" \"2015-02-10\" \"2015-02-10\" \"2015-02-10\" \"2015-02-10\" #> [2096] \"2015-02-10\" \"2015-02-10\" \"2015-02-11\" \"2015-02-11\" \"2015-02-11\" #> [2101] \"2015-02-11\" \"2015-02-12\" \"2015-02-12\" \"2015-02-12\" \"2015-02-12\" #> [2106] \"2015-02-12\" \"2015-02-12\" \"2015-02-12\" \"2015-02-13\" \"2015-02-13\" #> [2111] \"2015-02-13\" \"2015-02-13\" \"2015-02-13\" \"2015-02-14\" \"2015-02-14\" #> [2116] \"2015-02-14\" \"2015-02-14\" \"2015-02-14\" \"2015-02-14\" \"2015-02-15\" #> [2121] \"2015-02-15\" \"2015-02-15\" \"2015-02-15\" \"2015-02-15\" \"2015-02-15\" #> [2126] \"2015-02-15\" \"2015-02-16\" \"2015-02-16\" \"2015-02-16\" \"2015-02-16\" #> [2131] \"2015-02-17\" \"2015-02-17\" \"2015-02-17\" \"2015-02-17\" \"2015-02-17\" #> [2136] \"2015-02-17\" \"2015-02-17\" \"2015-02-18\" \"2015-02-18\" \"2015-02-18\" #> [2141] \"2015-02-18\" \"2015-02-18\" \"2015-02-18\" \"2015-02-19\" \"2015-02-19\" #> [2146] \"2015-02-19\" \"2015-02-19\" \"2015-02-19\" \"2015-02-19\" \"2015-02-19\" #> [2151] \"2015-02-20\" \"2015-02-20\" \"2015-02-20\" \"2015-02-20\" \"2015-02-20\" #> [2156] \"2015-02-20\" \"2015-02-20\" \"2015-02-21\" \"2015-02-21\" \"2015-02-21\" #> [2161] \"2015-02-21\" \"2015-02-21\" \"2015-02-21\" \"2015-02-21\" \"2015-02-21\" #> [2166] \"2015-02-21\" \"2015-02-22\" \"2015-02-22\" \"2015-02-22\" \"2015-02-22\" #> [2171] \"2015-02-22\" \"2015-02-22\" \"2015-02-22\" \"2015-02-22\" \"2015-02-23\" #> [2176] \"2015-02-23\" \"2015-02-23\" \"2015-02-23\" \"2015-02-23\" \"2015-02-23\" #> [2181] \"2015-02-24\" \"2015-02-24\" \"2015-02-24\" \"2015-02-24\" \"2015-02-24\" #> [2186] \"2015-02-24\" \"2015-02-24\" \"2015-02-24\" \"2015-02-24\" \"2015-02-25\" #> [2191] \"2015-02-25\" \"2015-02-25\" \"2015-02-25\" \"2015-02-25\" \"2015-02-26\" #> [2196] \"2015-02-26\" \"2015-02-26\" \"2015-02-26\" \"2015-02-26\" \"2015-02-26\" #> [2201] \"2015-02-27\" \"2015-02-27\" \"2015-02-27\" \"2015-02-27\" \"2015-02-27\" #> [2206] \"2015-02-28\" \"2015-02-28\" \"2015-02-28\" \"2015-02-28\" \"2015-02-28\" #> [2211] \"2015-02-28\" \"2015-02-28\" \"2015-03-01\" \"2015-03-01\" \"2015-03-01\" #> [2216] \"2015-03-01\" \"2015-03-01\" \"2015-03-01\" \"2015-03-01\" \"2015-03-01\" #> [2221] \"2015-03-01\" \"2015-03-01\" \"2015-03-02\" \"2015-03-02\" \"2015-03-02\" #> [2226] \"2015-03-02\" \"2015-03-02\" \"2015-03-02\" \"2015-03-02\" \"2015-03-03\" #> [2231] \"2015-03-03\" \"2015-03-03\" \"2015-03-03\" \"2015-03-03\" \"2015-03-03\" #> [2236] \"2015-03-04\" \"2015-03-04\" \"2015-03-04\" \"2015-03-04\" \"2015-03-04\" #> [2241] \"2015-03-04\" \"2015-03-04\" \"2015-03-05\" \"2015-03-05\" \"2015-03-05\" #> [2246] \"2015-03-05\" \"2015-03-05\" \"2015-03-05\" \"2015-03-05\" \"2015-03-05\" #> [2251] \"2015-03-06\" \"2015-03-06\" \"2015-03-06\" \"2015-03-06\" \"2015-03-06\" #> [2256] \"2015-03-06\" \"2015-03-07\" \"2015-03-07\" \"2015-03-07\" \"2015-03-07\" #> [2261] \"2015-03-07\" \"2015-03-08\" \"2015-03-08\" \"2015-03-08\" \"2015-03-08\" #> [2266] \"2015-03-08\" \"2015-03-08\" \"2015-03-09\" \"2015-03-09\" \"2015-03-09\" #> [2271] \"2015-03-09\" \"2015-03-09\" \"2015-03-09\" \"2015-03-09\" \"2015-03-10\" #> [2276] \"2015-03-10\" \"2015-03-10\" \"2015-03-11\" \"2015-03-11\" \"2015-03-11\" #> [2281] \"2015-03-11\" \"2015-03-11\" \"2015-03-11\" \"2015-03-12\" \"2015-03-12\" #> [2286] \"2015-03-12\" \"2015-03-12\" \"2015-03-12\" \"2015-03-13\" \"2015-03-13\" #> [2291] \"2015-03-13\" \"2015-03-13\" \"2015-03-13\" \"2015-03-13\" \"2015-03-13\" #> [2296] \"2015-03-13\" \"2015-03-14\" \"2015-03-14\" \"2015-03-14\" \"2015-03-14\" #> [2301] \"2015-03-14\" \"2015-03-15\" \"2015-03-15\" \"2015-03-15\" \"2015-03-15\" #> [2306] \"2015-03-16\" \"2015-03-16\" \"2015-03-16\" \"2015-03-16\" \"2015-03-16\" #> [2311] \"2015-03-16\" \"2015-03-16\" \"2015-03-16\" \"2015-03-16\" \"2015-03-17\" #> [2316] \"2015-03-17\" \"2015-03-17\" \"2015-03-17\" \"2015-03-17\" \"2015-03-18\" #> [2321] \"2015-03-18\" \"2015-03-18\" \"2015-03-18\" \"2015-03-18\" \"2015-03-18\" #> [2326] \"2015-03-19\" \"2015-03-19\" \"2015-03-19\" \"2015-03-19\" \"2015-03-19\" #> [2331] \"2015-03-19\" \"2015-03-20\" \"2015-03-20\" \"2015-03-20\" \"2015-03-20\" #> [2336] \"2015-03-20\" \"2015-03-20\" \"2015-03-20\" \"2015-03-20\" \"2015-03-21\" #> [2341] \"2015-03-21\" \"2015-03-21\" \"2015-03-21\" \"2015-03-21\" \"2015-03-21\" #> [2346] \"2015-03-21\" \"2015-03-22\" \"2015-03-22\" \"2015-03-22\" \"2015-03-22\" #> [2351] \"2015-03-22\" \"2015-03-23\" \"2015-03-23\" \"2015-03-23\" \"2015-03-23\" #> [2356] \"2015-03-23\" \"2015-03-23\" \"2015-03-24\" \"2015-03-24\" \"2015-03-24\" #> [2361] \"2015-03-25\" \"2015-03-25\" \"2015-03-25\" \"2015-03-25\" \"2015-03-25\" #> [2366] \"2015-03-25\" \"2015-03-25\" \"2015-03-25\" \"2015-03-26\" \"2015-03-26\" #> [2371] \"2015-03-26\" \"2015-03-26\" \"2015-03-27\" \"2015-03-27\" \"2015-03-27\" #> [2376] \"2015-03-27\" \"2015-03-27\" \"2015-03-27\" \"2015-03-28\" \"2015-03-28\" #> [2381] \"2015-03-29\" \"2015-03-29\" \"2015-03-29\" \"2015-03-29\" \"2015-03-30\" #> [2386] \"2015-03-30\" \"2015-03-30\" \"2015-03-30\" \"2015-03-30\" \"2015-03-31\" #> [2391] \"2015-03-31\" \"2015-03-31\" \"2015-04-01\" \"2015-04-01\" \"2015-04-01\" #> [2396] \"2015-04-01\" \"2015-04-02\" \"2015-04-02\" \"2015-04-02\" \"2015-04-02\" #> [2401] \"2015-04-02\" \"2015-04-02\" \"2015-04-03\" \"2015-04-03\" \"2015-04-03\" #> [2406] \"2015-04-03\" \"2015-04-03\" \"2015-04-03\" \"2015-04-03\" \"2015-04-03\" #> [2411] \"2015-04-03\" \"2015-04-04\" \"2015-04-04\" \"2015-04-04\" \"2015-04-04\" #> [2416] \"2015-04-04\" \"2015-04-04\" \"2015-04-04\" \"2015-04-04\" \"2015-04-05\" #> [2421] \"2015-04-05\" \"2015-04-05\" \"2015-04-06\" \"2015-04-06\" \"2015-04-06\" #> [2426] \"2015-04-06\" \"2015-04-06\" \"2015-04-07\" \"2015-04-07\" \"2015-04-07\" #> [2431] \"2015-04-07\" \"2015-04-08\" \"2015-04-08\" \"2015-04-08\" \"2015-04-08\" #> [2436] \"2015-04-09\" \"2015-04-09\" \"2015-04-09\" \"2015-04-09\" \"2015-04-09\" #> [2441] \"2015-04-09\" \"2015-04-09\" \"2015-04-09\" \"2015-04-10\" \"2015-04-11\" #> [2446] \"2015-04-11\" \"2015-04-11\" \"2015-04-11\" \"2015-04-11\" \"2015-04-12\" #> [2451] \"2015-04-12\" \"2015-04-12\" \"2015-04-12\" \"2015-04-12\" \"2015-04-12\" #> [2456] \"2015-04-13\" \"2015-04-13\" \"2015-04-13\" \"2015-04-13\" \"2015-04-13\" #> [2461] \"2015-04-14\" \"2015-04-14\" \"2015-04-14\" \"2015-04-14\" \"2015-04-14\" #> [2466] \"2015-04-14\" \"2015-04-15\" \"2015-04-15\" \"2015-04-15\" \"2015-04-16\" #> [2471] \"2015-04-16\" \"2015-04-16\" \"2015-04-16\" \"2015-04-16\" \"2015-04-17\" #> [2476] \"2015-04-17\" \"2015-04-17\" \"2015-04-18\" \"2015-04-18\" \"2015-04-18\" #> [2481] \"2015-04-18\" \"2015-04-18\" \"2015-04-18\" \"2015-04-18\" \"2015-04-19\" #> [2486] \"2015-04-19\" \"2015-04-19\" \"2015-04-19\" \"2015-04-20\" \"2015-04-20\" #> [2491] \"2015-04-20\" \"2015-04-20\" \"2015-04-20\" \"2015-04-21\" \"2015-04-21\" #> [2496] \"2015-04-21\" \"2015-04-21\" \"2015-04-21\" \"2015-04-22\" \"2015-04-22\" #> [2501] \"2015-04-22\" \"2015-04-22\" \"2015-04-22\" \"2015-04-22\" \"2015-04-23\" #> [2506] \"2015-04-23\" \"2015-04-23\" \"2015-04-24\" \"2015-04-24\" \"2015-04-24\" #> [2511] \"2015-04-24\" \"2015-04-25\" \"2015-04-25\" \"2015-04-25\" \"2015-04-25\" #> [2516] \"2015-04-26\" \"2015-04-26\" \"2015-04-26\" \"2015-04-26\" \"2015-04-26\" #> [2521] \"2015-04-26\" \"2015-04-27\" \"2015-04-27\" \"2015-04-27\" \"2015-04-27\" #> [2526] \"2015-04-28\" \"2015-04-28\" \"2015-04-28\" \"2015-04-28\" \"2015-04-28\" #> [2531] \"2015-04-28\" \"2015-04-29\" \"2015-04-29\" \"2015-04-30\" \"2015-04-30\" #> > get_dates_name(i) #> [1] \"date_index\" #> > get_interval(i) #> > get_n(i) #> count  #>  5829  #> > get_timespan(i) #> Time difference of 389 days"},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert incident object to dataframe — as.data.frame.incidence_df","title":"Convert incident object to dataframe — as.data.frame.incidence_df","text":"Convert incident object dataframe","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert incident object to dataframe — as.data.frame.incidence_df","text":"","code":"# S3 method for incidence_df as.data.frame(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert incident object to dataframe — as.data.frame.incidence_df","text":"x incidence() object. ... used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert incident object to dataframe — as.data.frame.incidence_df","text":"","code":"dat <- data.frame(dates = Sys.Date() + 1:100,                   names = rep(c(\"Jo\", \"John\"), 5))  dat <- incidence(dat, date_index = dates, groups = names) as.data.frame(dat) #>     date_index names count #> 1   2022-11-24    Jo     1 #> 2   2022-11-25  John     1 #> 3   2022-11-26    Jo     1 #> 4   2022-11-27  John     1 #> 5   2022-11-28    Jo     1 #> 6   2022-11-29  John     1 #> 7   2022-11-30    Jo     1 #> 8   2022-12-01  John     1 #> 9   2022-12-02    Jo     1 #> 10  2022-12-03  John     1 #> 11  2022-12-04    Jo     1 #> 12  2022-12-05  John     1 #> 13  2022-12-06    Jo     1 #> 14  2022-12-07  John     1 #> 15  2022-12-08    Jo     1 #> 16  2022-12-09  John     1 #> 17  2022-12-10    Jo     1 #> 18  2022-12-11  John     1 #> 19  2022-12-12    Jo     1 #> 20  2022-12-13  John     1 #> 21  2022-12-14    Jo     1 #> 22  2022-12-15  John     1 #> 23  2022-12-16    Jo     1 #> 24  2022-12-17  John     1 #> 25  2022-12-18    Jo     1 #> 26  2022-12-19  John     1 #> 27  2022-12-20    Jo     1 #> 28  2022-12-21  John     1 #> 29  2022-12-22    Jo     1 #> 30  2022-12-23  John     1 #> 31  2022-12-24    Jo     1 #> 32  2022-12-25  John     1 #> 33  2022-12-26    Jo     1 #> 34  2022-12-27  John     1 #> 35  2022-12-28    Jo     1 #> 36  2022-12-29  John     1 #> 37  2022-12-30    Jo     1 #> 38  2022-12-31  John     1 #> 39  2023-01-01    Jo     1 #> 40  2023-01-02  John     1 #> 41  2023-01-03    Jo     1 #> 42  2023-01-04  John     1 #> 43  2023-01-05    Jo     1 #> 44  2023-01-06  John     1 #> 45  2023-01-07    Jo     1 #> 46  2023-01-08  John     1 #> 47  2023-01-09    Jo     1 #> 48  2023-01-10  John     1 #> 49  2023-01-11    Jo     1 #> 50  2023-01-12  John     1 #> 51  2023-01-13    Jo     1 #> 52  2023-01-14  John     1 #> 53  2023-01-15    Jo     1 #> 54  2023-01-16  John     1 #> 55  2023-01-17    Jo     1 #> 56  2023-01-18  John     1 #> 57  2023-01-19    Jo     1 #> 58  2023-01-20  John     1 #> 59  2023-01-21    Jo     1 #> 60  2023-01-22  John     1 #> 61  2023-01-23    Jo     1 #> 62  2023-01-24  John     1 #> 63  2023-01-25    Jo     1 #> 64  2023-01-26  John     1 #> 65  2023-01-27    Jo     1 #> 66  2023-01-28  John     1 #> 67  2023-01-29    Jo     1 #> 68  2023-01-30  John     1 #> 69  2023-01-31    Jo     1 #> 70  2023-02-01  John     1 #> 71  2023-02-02    Jo     1 #> 72  2023-02-03  John     1 #> 73  2023-02-04    Jo     1 #> 74  2023-02-05  John     1 #> 75  2023-02-06    Jo     1 #> 76  2023-02-07  John     1 #> 77  2023-02-08    Jo     1 #> 78  2023-02-09  John     1 #> 79  2023-02-10    Jo     1 #> 80  2023-02-11  John     1 #> 81  2023-02-12    Jo     1 #> 82  2023-02-13  John     1 #> 83  2023-02-14    Jo     1 #> 84  2023-02-15  John     1 #> 85  2023-02-16    Jo     1 #> 86  2023-02-17  John     1 #> 87  2023-02-18    Jo     1 #> 88  2023-02-19  John     1 #> 89  2023-02-20    Jo     1 #> 90  2023-02-21  John     1 #> 91  2023-02-22    Jo     1 #> 92  2023-02-23  John     1 #> 93  2023-02-24    Jo     1 #> 94  2023-02-25  John     1 #> 95  2023-02-26    Jo     1 #> 96  2023-02-27  John     1 #> 97  2023-02-28    Jo     1 #> 98  2023-03-01  John     1 #> 99  2023-03-02    Jo     1 #> 100 2023-03-03  John     1"},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert incident object to a tibble — as_tibble","title":"Convert incident object to a tibble — as_tibble","text":"Convert incident object tibble","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert incident object to a tibble — as_tibble","text":"","code":"# S3 method for incidence_df as_tibble(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert incident object to a tibble — as_tibble","text":"x incidence() object. ... used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert incident object to a tibble — as_tibble","text":"","code":"dat <- data.frame(dates = Sys.Date() + 1:100,                   names = rep(c(\"Jo\", \"John\"), 5))  dat <- incidence(dat, date_index = dates, groups = names) as_tibble(dat) #> # A tibble: 100 × 3 #>    date_index names count #>    <date>     <chr> <int> #>  1 2022-11-24 Jo        1 #>  2 2022-11-25 John      1 #>  3 2022-11-26 Jo        1 #>  4 2022-11-27 John      1 #>  5 2022-11-28 Jo        1 #>  6 2022-11-29 John      1 #>  7 2022-11-30 Jo        1 #>  8 2022-12-01 John      1 #>  9 2022-12-02 Jo        1 #> 10 2022-12-03 John      1 #> # … with 90 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/reference/build_incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to incidence — build_incidence","title":"Coerce to incidence — build_incidence","text":"build_incidence() coerces object incidence events.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/build_incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to incidence — build_incidence","text":"","code":"build_incidence(   x,   date_index,   groups = NULL,   counts = NULL,   na_as_group = TRUE,   FUN = identity,   args = list() )"},{"path":"http://www.reconverse.org/incidence2/dev/reference/build_incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to incidence — build_incidence","text":"x data frame representing linelist (potentially pre-aggregated dataset). date_index time index(es) given data. Multiple inputs make sense x linelist, situation, avoid ambiguity, vector must named.  names used resultant count columns. groups optional vector giving names groups observations incidence grouped. counts count variables given data.  NULL (default) data taken linelist individual observations. na_as_group logical value indicating missing group values (NA) treated separate category (TRUE) removed consideration (FALSE). Defaults TRUE. FUN Function applied dates_index vectors grouping. first argument FUN must work dates_index vector. Defaults identity function. args List additional arguments passed FUN.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/build_incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to incidence — build_incidence","text":"incidence_df`` object.  subclass [tibble][tibble::tbl-df`] represents aggregated count observations. contain following columns: date_index:  default interval 1 day used dates given observations given name \"date\", otherwise, values obtained specified date grouping column name \"date_index\" (See Interval specification ). count (name count variables): aggregated observation counts. groups (specified): column(s) containing categories given groups.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete counts for all date and group combinations — complete_counts","title":"Complete counts for all date and group combinations — complete_counts","text":"function ensures incidence object range dates grouping. default missing counts filled 0L.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete counts for all date and group combinations — complete_counts","text":"","code":"complete_counts(x, fill = 0L)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete counts for all date and group combinations — complete_counts","text":"x incidence() object. fill value replace missing counts . Defaults 0L.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete counts for all date and group combinations — complete_counts","text":"","code":"dat <- data.frame(   dates = Sys.Date() + 1:4,   groups = rep(c(\"grp1\",\"grp2\"), 2),   counts = 1:4 )  i <- incidence(dat, date_index = dates, groups = groups, counts = counts) complete_counts(i) #> An incidence object: 8 x 3 #> date range: [2022-11-24] to [2022-11-27] #> counts: 10 #> interval: 1 day #> cumulative: FALSE #>  #>   date_index groups counts #>   <date>     <chr>   <int> #> 1 2022-11-24 grp1        1 #> 2 2022-11-25 grp1        0 #> 3 2022-11-26 grp1        3 #> 4 2022-11-27 grp1        0 #> 5 2022-11-24 grp2        0 #> 6 2022-11-25 grp2        2 #> 7 2022-11-26 grp2        0 #> 8 2022-11-27 grp2        4"},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":null,"dir":"Reference","previous_headings":"","what":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"dataset containing daily time-series cases, tests, hospitalisations, deaths UK.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"","code":"covidregionaldataUK"},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"data frame 6370 rows 26 variables: date date counts reported (YYYY-MM-DD) region region name region_code region code cases_new new reported cases day cases_total total reported cases including day deaths_new new reported deaths day deaths_total total reported deaths including day recovered_new new reported recoveries day recovered_total total reported coveries including day hosp_new new reported hospitalisations day hosp_total total reported hospitalisations including day (note cumulative total new reported, total currently hospital). tested_new tests day tested_total total tests completed including day","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"https://CRAN.R-project.org/package=covidregionaldata","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"Extracted using covidregionaldata package 2021-06-03.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute cumulative 'incidence' — cumulate","title":"Compute cumulative 'incidence' — cumulate","text":"cumulate S3 generic compute cumulative numbers, methods different types objects: default method wrapper cumsum incidence objects: computes cumulative incidence time","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute cumulative 'incidence' — cumulate","text":"","code":"cumulate(x, ...)  # S3 method for default cumulate(x, ...)  # S3 method for incidence_df cumulate(x, fill = 0L, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute cumulative 'incidence' — cumulate","text":"x incidence object. ... currently used fill Value complete missing date-grouping combinations . NULL, completion performed. Default: 0L.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute cumulative 'incidence' — cumulate","text":"","code":"dat <- data.frame(   dates = as.integer(c(0,1,2,2,3,5,7)),   groups = factor(c(1, 2, 3, 3, 3, 3, 1)) )  i <- incidence(dat, date_index = dates, groups = groups) i #> An incidence object: 6 x 3 #> date range: [0] to [7] #> cases: 7 #> interval: 1 day #> cumulative: FALSE #>  #>   date_index groups count #>        <int> <fct>  <int> #> 1          0 1          1 #> 2          1 2          1 #> 3          2 3          2 #> 4          3 3          1 #> 5          5 3          1 #> 6          7 1          1  cumulative_i <- cumulate(i) cumulative_i #> An incidence object: 24 x 3 #> date range: [0] to [7] #> interval: 1 day #> cumulative: TRUE #>  #>    date_index groups count #>         <int> <fct>  <int> #>  1          0 1          1 #>  2          1 1          1 #>  3          2 1          1 #>  4          3 1          1 #>  5          4 1          1 #>  6          5 1          1 #>  7          6 1          1 #>  8          7 1          2 #>  9          0 2          0 #> 10          1 2          1 #> # … with 14 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/reference/deprecated-accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated accessor functions — deprecated-accessors","title":"Deprecated accessor functions — deprecated-accessors","text":"accessor functions now deprecated favour better named alternatives left available backwards compatibility.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/deprecated-accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated accessor functions — deprecated-accessors","text":"","code":"get_counts_name(x, ...)  get_date_group_names(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/deprecated-accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated accessor functions — deprecated-accessors","text":"x incidence() object. ... used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/deprecated-accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated accessor functions — deprecated-accessors","text":"get_counts_name(): get_count_names(). get_date_group_names(): get_dates_name()","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/deprecated-accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated accessor functions — deprecated-accessors","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) {   withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist     i <- incidence(dat,                    date_index = date_of_onset,                    groups = c(gender, hospital))      get_counts_name(i)      get_date_group_names(i)   }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > i <- incidence(dat, date_index = date_of_onset, groups = c(gender, hospital)) #> > get_counts_name(i) #> [1] \"count\" #> > get_date_group_names(i) #> [1] \"date_index\""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the incidence of events — incidence","title":"Compute the incidence of events — incidence","text":"Compute incidence events","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the incidence of events — incidence","text":"","code":"incidence(   x,   date_index,   groups = NULL,   interval = 1L,   na_as_group = TRUE,   counts = NULL,   firstdate = NULL )"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the incidence of events — incidence","text":"x data frame representing linelist (potentially pre-aggregated dataset). date_index time index(es) given data.  name(s) corresponding desired date column(s) x class: integer, numeric, Date, POSIXct, POSIXlt, character. (See Note  numeric character formats). Multiple inputs make sense x linelist, situation, avoid ambiguity, vector must named.  names used resultant count columns. groups optional vector giving names groups observations incidence grouped. interval integer character indicating (fixed) size time interval used computing incidence; defaults 1 day. can also text string corresponds valid date interval, e.g.   details can found \"Interval specification\" \"Week intervals\" sections . na_as_group logical value indicating missing group values (NA) treated separate category (TRUE) removed consideration (FALSE). Defaults TRUE. counts count variables given data.  NULL (default) data taken linelist individual observations. firstdate interval numeric days/months numeric prefix greater 1, can optionally specify date wish anchor intervals begin .  NULL (default) intervals start minimum value contained date_index column. Note class firstdate must Date date_index column Date, POSIXct, POSIXlt, character integer otherwise.","code":"* (x) day(s) * (x) weeks(s) * (x) epiweeks(s) * (x) isoweeks(s) * (x) months(s) * (x) quarter(s) * (x) years(s)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the incidence of events — incidence","text":"incidence2 object.  subclass incidence_df aggregated count observations grouped according specified interval , optionally, given groups.  default contain following columns: date / date_index:  default interval 1 day used dates given observations given name \"date\", otherwise, values obtained specified date grouping column name \"date_index\" (See Interval specification ). groups (specified): Column(s) containing categories given groups. count (name count variables): aggregated observation counts.","code":""},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"input-data-date-index-","dir":"Reference","previous_headings":"","what":"Input data (date_index)","title":"Compute the incidence of events — incidence","text":"Decimal (numeric) dates: truncated. Character dates unambiguous yyyy-mm-dd (ISO 8601) format. format trigger error.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"interval-specification-interval-","dir":"Reference","previous_headings":"","what":"Interval specification (interval)","title":"Compute the incidence of events — incidence","text":"incidence() uses grates package generate date groupings. grouping used depends value interval. can specified either integer value standard specification \"day\", \"week\", \"month\", \"quarter\" \"year\". format situation similar used seq.Date() values can optionally preceded (positive negative) integer space, followed \"s\".  prefix given: \"week\"    : uses \"grates_yearweek\" class (see grates::as_yearweek()). \"month\"   : uses \"grates_month\" class (see grates::as_month()). \"quarter\" : uses \"grates_quarter\" class (see grates::as_quarter()). \"year\"    : uses \"grates_year\" class (see grates::as_year()). prefix provided (e.g. 2 weeks) output object class \"period\" (see as_period()).  Note values \"month\", \"quarter\" \"year\" intervals always chosen start beginning calendar equivalent.  input integer value input treated specified days (.e. 2 2 days) produce output. interval values produce grouped classes 1, 1L, \"day\" \"days\" (without prefix) used.  situation returned object standard \"Date\" class.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"week-intervals","dir":"Reference","previous_headings":"","what":"Week intervals","title":"Compute the incidence of events — incidence","text":"possible construct incidence objects standardized day week. default state use ISO 8601 definition weeks, start Monday. can specify day week incidence object standardised using pattern \"n W weeks\" \"W\" represents weekday English current locale \"n\" represents duration, can ommitted.  examples specifying weeks starting different days assuming data started 2016-09-05, ISO week 36 2016: interval = \"2 monday weeks\" (Monday 2016-09-05) interval = \"1 tue week\" (Tuesday 2016-08-30) interval = \"1 Wed week\" (Wednesday 2016-08-31) interval = \"1 Thursday week\" (Thursday 2016-09-01) interval = \"1 F week\" (Friday 2016-09-02) interval = \"1 Saturday week\" (Saturday 2016-09-03) interval = \"Sunday week\" (Sunday 2016-09-04) also possible use something like \"3 weeks: Saturday\"; addition, keywords reserved specific days week: interval = \"week\", (Default, Monday) interval = \"ISOweek\"  (Monday) interval = \"EPIweek\"  (Sunday) interval = \"MMWRweek\" (Sunday)","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the incidence of events — incidence","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) {   withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist      # daily incidence     incidence(dat, date_of_onset)      # weekly incidence     incidence(dat, date_of_onset, interval = \"week\")      # starting on a Monday     incidence(dat, date_of_onset, interval = \"isoweek\")      # starting on a Sunday     incidence(dat, date_of_onset, interval = \"epiweek\")      # group by gender     incidence(dat, date_of_onset, interval = 7, groups = gender)      # group by gender and hospital     incidence(dat, date_of_onset, interval = \"2 weeks\", groups = c(gender, hospital))   }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > incidence(dat, date_of_onset) #> An incidence object: 367 x 2 #> date range: [2014-04-07] to [2015-04-30] #> cases: 5829 #> interval: 1 day #> cumulative: FALSE #>  #>    date_index count #>    <date>     <int> #>  1 2014-04-07     1 #>  2 2014-04-15     1 #>  3 2014-04-21     2 #>  4 2014-04-25     1 #>  5 2014-04-26     1 #>  6 2014-04-27     1 #>  7 2014-05-01     2 #>  8 2014-05-03     1 #>  9 2014-05-04     1 #> 10 2014-05-05     1 #> # … with 357 more rows #> > incidence(dat, date_of_onset, interval = \"week\") #> An incidence object: 56 x 2 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index count #>        <yrwk> <int> #>  1   2014-W15     1 #>  2   2014-W16     1 #>  3   2014-W17     5 #>  4   2014-W18     4 #>  5   2014-W19    12 #>  6   2014-W20    17 #>  7   2014-W21    15 #>  8   2014-W22    19 #>  9   2014-W23    23 #> 10   2014-W24    21 #> # … with 46 more rows #> > incidence(dat, date_of_onset, interval = \"isoweek\") #> An incidence object: 56 x 2 #> date range: [2014-W15] to [2015-W18] #> cases: 5829 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>    date_index count #>        <yrwk> <int> #>  1   2014-W15     1 #>  2   2014-W16     1 #>  3   2014-W17     5 #>  4   2014-W18     4 #>  5   2014-W19    12 #>  6   2014-W20    17 #>  7   2014-W21    15 #>  8   2014-W22    19 #>  9   2014-W23    23 #> 10   2014-W24    21 #> # … with 46 more rows #> > incidence(dat, date_of_onset, interval = \"epiweek\") #> An incidence object: 56 x 2 #> date range: [2014-W15] to [2015-W17] #> cases: 5829 #> interval: 1 (Sunday) week  #> cumulative: FALSE #>  #>    date_index count #>        <yrwk> <int> #>  1   2014-W15     1 #>  2   2014-W16     1 #>  3   2014-W17     4 #>  4   2014-W18     4 #>  5   2014-W19    12 #>  6   2014-W20    15 #>  7   2014-W21    15 #>  8   2014-W22    22 #>  9   2014-W23    22 #> 10   2014-W24    17 #> # … with 46 more rows #> > incidence(dat, date_of_onset, interval = 7, groups = gender) #> An incidence object: 109 x 3 #> date range: [2014-04-07 to 2014-04-13] to [2015-04-27 to 2015-05-03] #> cases: 5829 #> interval: 7 days #> cumulative: FALSE #>  #>                  date_index gender count #>                    <period> <fct>  <int> #>  1 2014-04-07 to 2014-04-13 f          1 #>  2 2014-04-14 to 2014-04-20 m          1 #>  3 2014-04-21 to 2014-04-27 f          4 #>  4 2014-04-21 to 2014-04-27 m          1 #>  5 2014-04-28 to 2014-05-04 f          4 #>  6 2014-05-05 to 2014-05-11 f          9 #>  7 2014-05-05 to 2014-05-11 m          3 #>  8 2014-05-12 to 2014-05-18 f          7 #>  9 2014-05-12 to 2014-05-18 m         10 #> 10 2014-05-19 to 2014-05-25 f          8 #> # … with 99 more rows #> > incidence(dat, date_of_onset, interval = \"2 weeks\", groups = c(gender,  #> +     hospital)) #> An incidence object: 316 x 4 #> date range: [2014-04-07 to 2014-04-20] to [2015-04-20 to 2015-05-03] #> cases: 5829 #> interval: 14 days #> cumulative: FALSE #>  #>                  date_index gender hospital                                count #>                    <period> <fct>  <fct>                                   <int> #>  1 2014-04-07 to 2014-04-20 f      Military Hospital                           1 #>  2 2014-04-07 to 2014-04-20 m      Connaught Hospital                          1 #>  3 2014-04-21 to 2014-05-04 f      NA                                          3 #>  4 2014-04-21 to 2014-05-04 f      Connaught Hospital                          1 #>  5 2014-04-21 to 2014-05-04 f      other                                       2 #>  6 2014-04-21 to 2014-05-04 f      Princess Christian Maternity Hospital …     1 #>  7 2014-04-21 to 2014-05-04 f      Rokupa Hospital                             1 #>  8 2014-04-21 to 2014-05-04 m      other                                       1 #>  9 2014-05-05 to 2014-05-18 f      NA                                          4 #> 10 2014-05-05 to 2014-05-18 f      Connaught Hospital                          3 #> # … with 306 more rows  # use of first_date dat <- data.frame(dates = Sys.Date() + sample(-3:10, 10, replace = TRUE)) incidence(dat, dates, interval = \"week\", firstdate = Sys.Date() + 1) #> An incidence object: 2 x 2 #> date range: [2022-W47] to [2022-W48] #> cases: 8 #> interval: 1 (Monday) week  #> cumulative: FALSE #>  #>   date_index count #>       <yrwk> <int> #> 1   2022-W47     5 #> 2   2022-W48     3"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"incidence2: Compute, Handle and Plot Incidence of Dated Events — incidence2-package","title":"incidence2: Compute, Handle and Plot Incidence of Dated Events — incidence2-package","text":"Provides functions classes compute, handle visualise incidence dated events defined time interval. Dates can provided various standard formats. class 'incidence2' used store computed incidence can easily manipulated, subsetted, plotted. package part RECON (https://www.repidemicsconsortium.org/) toolkit outbreak analysis (https://www.reconverse.org).","code":""},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"incidence2: Compute, Handle and Plot Incidence of Dated Events — incidence2-package","text":"Maintainer: Tim Taylor tim.taylor@hiddenelephants.co.uk (ORCID) contributors: Thibaut Jombart thibautjombart@gmail.com [contributor] Zhian N. Kamvar zkamvar@gmail.com (ORCID) [contributor]","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep first and last occurences — keep","title":"Keep first and last occurences — keep","text":"keep_first() (keep_last) keeps first (last) n entries occur date ordering.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep first and last occurences — keep","text":"","code":"keep_first(x, n, ...)  # S3 method for default keep_first(x, n, ...)  # S3 method for incidence_df keep_first(x, n, ...)  # S3 method for grates_yearweek keep_first(x, n, ...)  # S3 method for grates_month keep_first(x, n, ...)  # S3 method for grates_quarter keep_first(x, n, ...)  # S3 method for grates_year keep_first(x, n, ...)  # S3 method for grates_period keep_first(x, n, ...)  keep_last(x, n, ...)  # S3 method for default keep_last(x, n, ...)  # S3 method for incidence_df keep_last(x, n, ...)  # S3 method for grates_yearweek keep_last(x, n, ...)  # S3 method for grates_month keep_last(x, n, ...)  # S3 method for grates_quarter keep_last(x, n, ...)  # S3 method for grates_year keep_last(x, n, ...)  # S3 method for grates_period keep_last(x, n, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep first and last occurences — keep","text":"x Object filter. n Number entries keep. ... currently used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep first and last occurences — keep","text":"objected chosen entries.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/new_incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence constructor and validator — new_incidence","title":"Incidence constructor and validator — new_incidence","text":"Creates validates incidence object. Mainly use developing packages work incidence objects.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/new_incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence constructor and validator — new_incidence","text":"","code":"new_incidence(   x,   date,   groups = NULL,   counts,   measurements = NULL,   validate = TRUE )  validate_incidence(x)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/new_incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incidence constructor and validator — new_incidence","text":"x incidence-like object date time index `x. groups optional vector giving names groups x. counts count variables x measurements optional vector giving names measurement variables x. validate logical value indicating whether validate input. FALSE, minimal checks made can give performance advantage desired.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/new_incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incidence constructor and validator — new_incidence","text":"incidence object (invisibly validate_incidence())","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/new_incidence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Incidence constructor and validator — new_incidence","text":"new_incidence() creates new incidence object subclass tibble (.e. class incidence, tbl_df, tbl data.frame). validate_incidence() checks object internal consistency. object considered incidence object must: * inherit incidence data.frame class; * single column representing date_index name variable stored date attribute; * one columns representing counts name variables stored counts attribute; * zero columns representing groups , present, names stored groups attribute; * zero columns representing measurement , present, names stored measurements attribute; * duplicated rows regards date group variables.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palettes used in incidence — vibrant","title":"Color palettes used in incidence — vibrant","text":"functions color palettes used incidence. palettes come https://personal.sron.nl/~pault/#sec:qualitative exclude grey, reserved missing data.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palettes used in incidence — vibrant","text":"","code":"vibrant(n)  muted(n)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color palettes used in incidence — vibrant","text":"n number colors","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palettes used in incidence — vibrant","text":"","code":"vibrant(5) #> [1] \"#0077BB\" \"#33BBEE\" \"#009988\" \"#EE7733\" \"#CC3311\" muted(10) #> Using more colors (10) than this palette can handle (9); some colors will be interpolated. #>  [1] \"#332288\" \"#7EB9E2\" \"#53B1AB\" \"#228855\" \"#5C8933\" \"#B7AF51\" \"#D7AA77\" #>  [8] \"#BC566F\" \"#8B255C\" \"#AA4499\""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting functions — plot.incidence2","title":"Plotting functions — plot.incidence2","text":"incidence2 includes two plotting functions simplify graph creation.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting functions — plot.incidence2","text":"","code":"# S3 method for incidence2 plot(   x,   count = NULL,   fill = NULL,   centre_dates = TRUE,   date_format = \"%Y-%m-%d\",   stack = TRUE,   title = NULL,   col_pal = vibrant,   alpha = 0.7,   color = NA,   xlab = \"\",   ylab = NULL,   n_breaks = 6,   width = 1,   show_cases = FALSE,   border = \"white\",   na_color = \"grey\",   legend = c(\"right\", \"left\", \"bottom\", \"top\", \"none\"),   angle = 0,   size = NULL,   ... )  facet_plot(x, ...)  # S3 method for incidence2 facet_plot(   x,   count = NULL,   facets = NULL,   centre_dates = TRUE,   date_format = \"%Y-%m-%d\",   stack = TRUE,   fill = NULL,   title = NULL,   col_pal = vibrant,   alpha = 0.7,   color = NA,   xlab = \"\",   ylab = NULL,   n_breaks = 3,   width = 1,   show_cases = FALSE,   border = \"white\",   na_color = \"grey\",   legend = c(\"bottom\", \"top\", \"left\", \"right\", \"none\"),   angle = 0,   size = NULL,   nrow = NULL,   ... )"},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting functions — plot.incidence2","text":"x incidence() object. count count variable y-axis. NULL (default) first entry returned get_count_names(x) used. fill variable color plots . NULL distinction made plot colors. centre_dates interval one single week, month, quarter year x_axis labels centred custom category labels. Set option FALSE use date labels breaks. date_format Format use \"Date\" scales required. value used format.Date() can input acceptable function (defaults \"%Y-%m-%d). stack logical indicating bars multiple groups stacked, displayed side--side. used fill NULL. title Optional title graph. col_pal col_pal color palette used groups; defaults vibrant (see ?palettes). alpha alpha level color transparency, 1 fully opaque 0 fully transparent; defaults 0.7. color color used borders bars; NA invisible borders; defaults NA. xlab label used x-axis; empty default. ylab label used y-axis; default, label generated automatically according time interval used incidence computation. n_breaks Approximate number breaks calculated using scales::breaks_pretty (default 6). width Value 0 1 indicating relative size bars interval. Default 1. show_cases TRUE (default: FALSE), observation colored border. border defaults white border unless specified otherwise. normally used outbreaks small number cases. Note: can used stack = TRUE border show_cases TRUE represents color used borders individual squares plotted (defaults \"white\"). na_color colour plot NA values graphs (default: grey). legend Position legend plot. angle Rotation angle text. size text size pts. ... arguments pass ggplot2::scale_x_continuous(). facets variable facet plots .  NULL use group_labels incidence object. nrow Number rows.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting functions — plot.incidence2","text":"facet_plot() plot() generate ggplot2::ggplot() object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting functions — plot.incidence2","text":"plot creates one-pane graph incidence object. facet_plot creates multi-facet graph grouped incidence object. object groups returns output call plot(). incidence() object rolling average column average overlaid top.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting functions — plot.incidence2","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE) && requireNamespace(\"ggplot2\", quietly = TRUE)) {   withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist      inci <- incidence(dat,                       date_index = date_of_onset,                       interval = 7,                       groups = hospital)      inci2 <- incidence(dat,                       date_index = date_of_onset,                       interval = 7,                       groups = c(hospital, gender))      plot(inci)     plot(inci, fill = hospital)     plot(inci, fill = hospital, stack = FALSE)      facet_plot(inci)     facet_plot(inci2)     facet_plot(inci2, facets = gender)     facet_plot(inci2, facets = hospital, fill = gender)   }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > inci <- incidence(dat, date_index = date_of_onset, interval = 7, groups = hospital) #> > inci2 <- incidence(dat, date_index = date_of_onset, interval = 7, groups = c(hospital,  #> +     gender)) #> > plot(inci)  #> > plot(inci, fill = hospital)  #> > plot(inci, fill = hospital, stack = FALSE)  #> > facet_plot(inci)  #> > facet_plot(inci2)  #> > facet_plot(inci2, facets = gender)  #> > facet_plot(inci2, facets = hospital, fill = gender)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/print_incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an incidence object. — print_incidence","title":"Print an incidence object. — print_incidence","text":"Print incidence object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/print_incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an incidence object. — print_incidence","text":"","code":"# S3 method for incidence_df print(x, ...)  # S3 method for incidence_df format(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/print_incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an incidence object. — print_incidence","text":"x 'incidence' object. ... Additional arguments passed tibble format method.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Regroup 'incidence' objects — regroup","title":"Regroup 'incidence' objects — regroup","text":"function regroups incidence() object across specified groups. resulting incidence() object contains counts summed groups present input.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regroup 'incidence' objects — regroup","text":"","code":"regroup(x, groups = NULL)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regroup 'incidence' objects — regroup","text":"x incidence() object. groups groups sum .  NULL (default) function ignores groups.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regroup 'incidence' objects — regroup","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) {   withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist     i <- incidence(dat,                    date_index = date_of_onset,                    groups = c(gender, hospital))      regroup(i)      regroup(i, hospital)   }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > i <- incidence(dat, date_index = date_of_onset, groups = c(gender, hospital)) #> > regroup(i) #> An incidence object: 367 x 2 #> date range: [2014-04-07] to [2015-04-30] #> cases: 5829 #> interval: 1 day #> cumulative: FALSE #>  #>    date_index count #>    <date>     <int> #>  1 2014-04-07     1 #>  2 2014-04-15     1 #>  3 2014-04-21     2 #>  4 2014-04-25     1 #>  5 2014-04-26     1 #>  6 2014-04-27     1 #>  7 2014-05-01     2 #>  8 2014-05-03     1 #>  9 2014-05-04     1 #> 10 2014-05-05     1 #> # … with 357 more rows #> > regroup(i, hospital) #> An incidence object: 1,635 x 3 #> date range: [2014-04-07] to [2015-04-30] #> cases: 5829 #> interval: 1 day #> cumulative: FALSE #>  #>    date_index hospital                                     count #>    <date>     <fct>                                        <int> #>  1 2014-04-07 Military Hospital                                1 #>  2 2014-04-15 Connaught Hospital                               1 #>  3 2014-04-21 other                                            2 #>  4 2014-04-25 NA                                               1 #>  5 2014-04-26 other                                            1 #>  6 2014-04-27 NA                                               1 #>  7 2014-05-01 Princess Christian Maternity Hospital (PCMH)     1 #>  8 2014-05-01 Rokupa Hospital                                  1 #>  9 2014-05-03 Connaught Hospital                               1 #> 10 2014-05-04 NA                                               1 #> # … with 1,625 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of an incidence object — summary.incidence_df","title":"Summary of an incidence object — summary.incidence_df","text":"Summary incidence object","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of an incidence object — summary.incidence_df","text":"","code":"# S3 method for incidence_df summary(object, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of an incidence object — summary.incidence_df","text":"object 'incidence' object. ... used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of an incidence object — summary.incidence_df","text":"object (invisibly).","code":""},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-123","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.3","title":"incidence2 1.2.3","text":"CRAN release: 2021-11-07","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"new-functions-1-2-3","dir":"Changelog","previous_headings":"","what":"New functions","title":"incidence2 1.2.3","text":"Reintroduces cumulate() functionality (previously deprecated 1.2.0).","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"breaking-changes-1-2-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"incidence2 1.2.3","text":"Default fill argument complete_counts() now 0 rather NA.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-122","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.2","title":"incidence2 1.2.2","text":"CRAN release: 2021-08-23","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"bug-fixes-1-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"incidence2 1.2.2","text":"Fixes bug input object incidence data.table.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-121","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.1","title":"incidence2 1.2.1","text":"CRAN release: 2021-07-14","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"incidence2 1.2.1","text":"Fixes bug incidence() one column given date_index. Fixes incorrect test take account changing time zones.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-120","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.0","title":"incidence2 1.2.0","text":"CRAN release: 2021-07-07","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"new-functions-1-2-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"incidence2 1.2.0","text":"new_incidence(): minimal incidence constructor. validate_incidence(): Check internal consistency incidence-like object. build_incidence(): Allows construct incidence object whilst specifying date grouping function. format.incidence()","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"deprecated-functions-1-2-0","dir":"Changelog","previous_headings":"","what":"Deprecated functions","title":"incidence2 1.2.0","text":"cumulate() now give deprecation error. removed function avoid users erroneously regressing cumulative count.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"incidence2 1.2.0","text":"Fixes bug incidence() dates character vector default, daily, interval specified.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"other-updates-1-2-0","dir":"Changelog","previous_headings":"","what":"Other updates","title":"incidence2 1.2.0","text":"Now uses dplyr handle list based columns (e.g. record-type objects vctrs). data.frames atomic columns, data.table still used. Printing summaries incidence objects improved remove duplication overview section.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-110","dir":"Changelog","previous_headings":"","what":"incidence2 1.1.0","title":"incidence2 1.1.0","text":"New function complete_counts(). plot() facet_plot() now centre_dates argument can set FALSE get histogram-esque date labels single month, quarter yearweek groupings. Internal refactoring due breakages changes upstream grates package.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-100","dir":"Changelog","previous_headings":"","what":"incidence2 1.0.0","title":"incidence2 1.0.0","text":"CRAN release: 2021-03-30 Due multiple changes underlying representation incidence2 objects release may possibly break old workflows particularly relying old implementations date grouping: Now uses package grates date grouping. introduces s3 classes yrwk, yrmon, yrqtr, yr, period int_period well associated constructors incidence now builds upon. result aweek dependency dropped. Add’s keep_first keep_last functions. Construction incidence objects now faster due underlying use data.table.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-022","dir":"Changelog","previous_headings":"","what":"incidence2 0.2.2","title":"incidence2 0.2.2","text":"CRAN release: 2020-11-12 Fixes bug get_interval. Removes message displayed incidence class dropped. Refactoring internal code improve maintainability. Tests now use 3rd edition testthat.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-021","dir":"Changelog","previous_headings":"","what":"incidence2 0.2.1","title":"incidence2 0.2.1","text":"CRAN release: 2020-10-16 Fixes bug .data.frame.incidence2 Limits internal reliance dplyr.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-020","dir":"Changelog","previous_headings":"","what":"incidence2 0.2.0","title":"incidence2 0.2.0","text":"CRAN release: 2020-09-22 Fixes issue monthly incidence objects show_cases = TRUE (see #42). Additional checks added assessing whether manipulated incidence object maintains class. Improved implementation speed. NA’s now ignored count variable pre-aggregated input incidence function. Fixes axis labelling spacing.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-010","dir":"Changelog","previous_headings":"","what":"incidence2 0.1.0","title":"incidence2 0.1.0","text":"CRAN release: 2020-09-07 Initial release.","code":""}]
