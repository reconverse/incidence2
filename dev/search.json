[{"path":"http://www.reconverse.org/incidence2/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Tim Taylor Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"what-does-it-do","dir":"Articles","previous_headings":"","what":"What does it do?","title":"incidence2","text":"{incidence2} R package implements functions compute, handle visualise incidence data. aims intuitive use interactive data exploration part robust outbreak analytic pipelines. package based around objects namesake class, <incidence2>. objects data frame subclass additional invariants. , <incidence2> object must: one column representing date index (need date object must inherent ordering time); one column representing count variable (.e. counted) one variable representing associated count; zero columns representing groups; duplicated rows regards date group variables. create work <incidence2> objects provide number functions: incidence(): construction incidence objects linelists pre-aggregated data sets. plot.incidence2(): generate simple plots reasonable defaults. regroup(): regroup incidence different groups one global incidence time series. keep_first(), keep_last(): keep rows corresponding first (last) set grouped dates (ordered time) <incidence> object. keep_peaks(): keep rows corresponding maximum count value grouping <incidence> object. complete_dates(): ensure every possible combination date groupings represented count. cumulate(): calculate cumulative incidence time. print.incidence2() summary.incidence2() methods. .data.frame.incidence2() conversion method. Accessor functions accessing underlying variables: get_date_index(), get_count_variable(), get_count_value(), get_groups(), get_count_value_name(), get_count_variable_name(), get_date_index_name() get_group_names().","code":""},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"incidence2","text":"following sections give overview package utilising two different data sets. first datasets comes {outbreaks} package synthetic linelist generated simulated Ebola Virus Disease (EVD) outbreak. second data set available within {incidence2} represents pre-aggregated time-series Covid cases, tests, hospitalisations, deaths UK regions obtained using {covidregionaldata} package (extracted 2021-06-03).","code":"library(outbreaks)  # for the underlying data library(ggplot2)    # For custom plotting later library(incidence2)  #> Loading required package: grates  ebola <- ebola_sim_clean$linelist str(ebola) #> 'data.frame':    5829 obs. of  11 variables: #>  $ case_id                : chr  \"d1fafd\" \"53371b\" \"f5c3d8\" \"6c286a\" ... #>  $ generation             : int  0 1 1 2 2 0 3 3 2 3 ... #>  $ date_of_infection      : Date, format: NA \"2014-04-09\" ... #>  $ date_of_onset          : Date, format: \"2014-04-07\" \"2014-04-15\" ... #>  $ date_of_hospitalisation: Date, format: \"2014-04-17\" \"2014-04-20\" ... #>  $ date_of_outcome        : Date, format: \"2014-04-19\" NA ... #>  $ outcome                : Factor w/ 2 levels \"Death\",\"Recover\": NA NA 2 1 2 NA 2 1 2 1 ... #>  $ gender                 : Factor w/ 2 levels \"f\",\"m\": 1 2 1 1 1 1 1 1 2 2 ... #>  $ hospital               : Factor w/ 5 levels \"Connaught Hospital\",..: 2 1 3 NA 3 NA 1 4 3 5 ... #>  $ lon                    : num  -13.2 -13.2 -13.2 -13.2 -13.2 ... #>  $ lat                    : num  8.47 8.46 8.48 8.46 8.45 ... covid <- covidregionaldataUK str(covid) #> 'data.frame':    6370 obs. of  13 variables: #>  $ date           : Date, format: \"2020-01-30\" \"2020-01-30\" ... #>  $ region         : chr  \"East Midlands\" \"East of England\" \"England\" \"London\" ... #>  $ region_code    : chr  \"E12000004\" \"E12000006\" \"E92000001\" \"E12000007\" ... #>  $ cases_new      : num  NA NA 2 NA NA NA NA NA NA NA ... #>  $ cases_total    : num  NA NA 2 NA NA NA NA NA NA NA ... #>  $ deaths_new     : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ deaths_total   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ recovered_new  : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ recovered_total: num  NA NA NA NA NA NA NA NA NA NA ... #>  $ hosp_new       : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ hosp_total     : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ tested_new     : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ tested_total   : num  NA NA NA NA NA NA NA NA NA NA ..."},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"computing-incidence-from-a-linelist","dir":"Articles","previous_headings":"Usage","what":"Computing incidence from a linelist","title":"incidence2","text":"compute daily incidence pass incidence() linelist observation data. input form data frame must also pass name variable data can use index input. Note whilst refer index date_index restriction ’s type, save needing represent relative time observation (.e. ordering).  daily data quite noisy, may want pre group dates prior calculating incidence. One way utilise functions {grates} package. use as_isoweek() function convert ‘date onset’ isoweek (week starting Monday) calculating incidence incidence:  grouping dates prior calling incidence() makes clear future readers code (including ) transformations applied input data. grouping, however, common useful operation chosen integrate much {grates} functionality directly incidence2. integration done via interval parameter incidence() call. can take values: day daily (mapping <Date> objects); week(s), isoweek(s) weekly (mapping <grates_isoweek>); epiweek(s) (mapping <grates_epiweek>); month(s), yearmonth(s) monthly (<grates_yearmonth>); quarter(s), yearquarter(s) quarterly (<grates_yearquarter>); year(s) yearly (<grates_year>). example, following equivalent inci output : wish aggregate specified groups can use groups argument. instance, computing incidence gender: grouped data, plot method create faceted plot across groups unless fill variable specified:   incidence() also supports multiple date inputs: multiple date indices given, used rows resultant plot, unless resultant variable used fill:","code":"daily <- incidence(ebola, date_index = \"date_of_onset\") daily #> # incidence:  367 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <date>     <chr>          <int> #>  1 2014-04-07 date_of_onset      1 #>  2 2014-04-15 date_of_onset      1 #>  3 2014-04-21 date_of_onset      2 #>  4 2014-04-25 date_of_onset      1 #>  5 2014-04-26 date_of_onset      1 #>  6 2014-04-27 date_of_onset      1 #>  7 2014-05-01 date_of_onset      2 #>  8 2014-05-03 date_of_onset      1 #>  9 2014-05-04 date_of_onset      1 #> 10 2014-05-05 date_of_onset      1 #> # ℹ 357 more rows plot(daily) # isoweek incidence weekly_ebola <- transform(ebola, date_of_onset = as_isoweek(date_of_onset)) inci <- incidence(weekly_ebola, date_index = \"date_of_onset\") inci #> # incidence:  56 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <isowk>    <chr>          <int> #>  1 2014-W15   date_of_onset      1 #>  2 2014-W16   date_of_onset      1 #>  3 2014-W17   date_of_onset      5 #>  4 2014-W18   date_of_onset      4 #>  5 2014-W19   date_of_onset     12 #>  6 2014-W20   date_of_onset     17 #>  7 2014-W21   date_of_onset     15 #>  8 2014-W22   date_of_onset     19 #>  9 2014-W23   date_of_onset     23 #> 10 2014-W24   date_of_onset     21 #> # ℹ 46 more rows plot(inci, border_colour = \"white\") # isoweek incidence using the interval parameter inci2 <- incidence(ebola, date_index = \"date_of_onset\", interval = \"isoweek\") inci2 #> # incidence:  56 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <isowk>    <chr>          <int> #>  1 2014-W15   date_of_onset      1 #>  2 2014-W16   date_of_onset      1 #>  3 2014-W17   date_of_onset      5 #>  4 2014-W18   date_of_onset      4 #>  5 2014-W19   date_of_onset     12 #>  6 2014-W20   date_of_onset     17 #>  7 2014-W21   date_of_onset     15 #>  8 2014-W22   date_of_onset     19 #>  9 2014-W23   date_of_onset     23 #> 10 2014-W24   date_of_onset     21 #> # ℹ 46 more rows  # check equivalent identical(inci, inci2) #> [1] TRUE inci_by_gender <- incidence(     ebola,     date_index = \"date_of_onset\",     groups = \"gender\",     interval = \"isoweek\" ) inci_by_gender #> # incidence:  109 x 4 #> # count vars: date_of_onset #> # groups:     gender #>    date_index gender count_variable count #>  * <isowk>    <fct>  <chr>          <int> #>  1 2014-W15   f      date_of_onset      1 #>  2 2014-W16   m      date_of_onset      1 #>  3 2014-W17   f      date_of_onset      4 #>  4 2014-W17   m      date_of_onset      1 #>  5 2014-W18   f      date_of_onset      4 #>  6 2014-W19   f      date_of_onset      9 #>  7 2014-W19   m      date_of_onset      3 #>  8 2014-W20   f      date_of_onset      7 #>  9 2014-W20   m      date_of_onset     10 #> 10 2014-W21   f      date_of_onset      8 #> # ℹ 99 more rows plot(inci_by_gender, border_colour = \"white\", angle = 45) plot(inci_by_gender, border_colour = \"white\", angle = 45, fill = \"gender\") grouped_inci <- incidence(     ebola,     date_index = c(         onset = \"date_of_onset\",         infection = \"date_of_infection\"     ),      interval = \"isoweek\",     groups = \"gender\" ) grouped_inci #> # incidence:  218 x 4 #> # count vars: infection, onset #> # groups:     gender #>    date_index gender count_variable count #>  * <isowk>    <fct>  <chr>          <int> #>  1 2014-W12   f      infection          1 #>  2 2014-W15   f      onset              1 #>  3 2014-W15   m      infection          1 #>  4 2014-W16   f      infection          1 #>  5 2014-W16   m      onset              1 #>  6 2014-W17   f      infection          4 #>  7 2014-W17   f      onset              4 #>  8 2014-W17   m      onset              1 #>  9 2014-W18   f      infection          7 #> 10 2014-W18   f      onset              4 #> # ℹ 208 more rows plot(grouped_inci, angle = 45, border_colour = \"white\") plot(grouped_inci, angle = 45, border_colour = \"white\", fill = \"count_variable\")"},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"computing-incidence-from-pre-aggregated-data","dir":"Articles","previous_headings":"Usage","what":"Computing incidence from pre-aggregated data","title":"incidence2","text":"Covid data set wide format multiple count values given day. convert long form incidence specify similar variables also include count variables interested :","code":"monthly_covid <-      covid |>      subset(!region %in% c(\"England\", \"Scotland\", \"Northern Ireland\", \"Wales\")) |>      incidence(         date_index = \"date\",         groups = \"region\",         counts = c(\"cases_new\"),         interval = \"yearmonth\"     ) monthly_covid #> # incidence:  162 x 4 #> # count vars: cases_new #> # groups:     region #>    date_index region                   count_variable count #>  * <yrmon>    <chr>                    <fct>          <dbl> #>  1 2020-Jan   East Midlands            cases_new         NA #>  2 2020-Jan   East of England          cases_new         NA #>  3 2020-Jan   London                   cases_new         NA #>  4 2020-Jan   North East               cases_new         NA #>  5 2020-Jan   North West               cases_new         NA #>  6 2020-Jan   South East               cases_new         NA #>  7 2020-Jan   South West               cases_new         NA #>  8 2020-Jan   West Midlands            cases_new         NA #>  9 2020-Jan   Yorkshire and The Humber cases_new          1 #> 10 2020-Feb   East Midlands            cases_new         NA #> # ℹ 152 more rows plot(monthly_covid, nrow = 3, angle = 45, border_colour = \"white\") #> Warning: Removed 26 rows containing missing values (`position_stack()`)."},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"plotting-in-style-of-european-programme-for-intervention-epidemiology-training-epiet","dir":"Articles","previous_headings":"Usage","what":"Plotting in style of European Programme for Intervention Epidemiology Training (EPIET)","title":"incidence2","text":"small datasets convention EPIET display individual cases rectangles. can setting show_cases = TRUE call plot() display case individual square white border.","code":"dat <- ebola[160:180, ] i_epiet <- incidence(dat, date_index = \"date_of_onset\", date_names_to = \"date\") plot(i_epiet, color = \"white\", show_cases = TRUE, angle = 45, n_breaks = 10) i_epiet2 <- incidence(     dat, date_index = \"date_of_onset\",     groups = \"gender\", date_names_to = \"date\" ) plot(     i_epiet2, show_cases = TRUE,     color = \"white\", angle = 45, n_breaks = 10, fill = \"gender\" )"},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"regroup","dir":"Articles","previous_headings":"Usage > Modifying incidence objects","what":"regroup()","title":"incidence2","text":"Sometimes may find ’ve created grouped incidence now want change internal grouping. Assuming subset grouping already generated, can use regroup() get desired aggregation:","code":"# generate an incidence object with 3 groups x <- incidence(     ebola,     date_index = \"date_of_onset\",     interval = \"isoweek\",     groups = c(\"gender\", \"hospital\", \"outcome\") )  # regroup to just one group xx <- regroup(x, c(\"gender\", \"outcome\")) xx #> # incidence:  320 x 5 #> # count vars: date_of_onset #> # groups:     gender, outcome #>    date_index gender outcome count_variable count #>  * <isowk>    <fct>  <fct>   <chr>          <int> #>  1 2014-W15   f      NA      date_of_onset      1 #>  2 2014-W16   m      NA      date_of_onset      1 #>  3 2014-W17   f      NA      date_of_onset      1 #>  4 2014-W17   f      Death   date_of_onset      1 #>  5 2014-W17   f      Recover date_of_onset      2 #>  6 2014-W17   m      Recover date_of_onset      1 #>  7 2014-W18   f      Death   date_of_onset      1 #>  8 2014-W18   f      Recover date_of_onset      3 #>  9 2014-W19   f      NA      date_of_onset      4 #> 10 2014-W19   f      Death   date_of_onset      2 #> # ℹ 310 more rows  # drop all groups regroup(x) #> # incidence:  56 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <isowk>    <chr>          <int> #>  1 2014-W15   date_of_onset      1 #>  2 2014-W16   date_of_onset      1 #>  3 2014-W17   date_of_onset      5 #>  4 2014-W18   date_of_onset      4 #>  5 2014-W19   date_of_onset     12 #>  6 2014-W20   date_of_onset     17 #>  7 2014-W21   date_of_onset     15 #>  8 2014-W22   date_of_onset     19 #>  9 2014-W23   date_of_onset     23 #> 10 2014-W24   date_of_onset     21 #> # ℹ 46 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"cumulate","dir":"Articles","previous_headings":"Usage > Modifying incidence objects","what":"cumulate()","title":"incidence2","text":"also provide helper function, cumulate() easily generate cumulative incidences:","code":"y <- regroup(x, \"hospital\") y <- cumulate(y) y #> # incidence:  315 x 4 #> # count vars: date_of_onset #> # groups:     hospital #>    date_index hospital count_variable cumulative_count #>  * <isowk>    <fct>    <chr>                     <int> #>  1 2014-W17   NA       date_of_onset                 2 #>  2 2014-W18   NA       date_of_onset                 3 #>  3 2014-W19   NA       date_of_onset                 4 #>  4 2014-W20   NA       date_of_onset                 8 #>  5 2014-W21   NA       date_of_onset                12 #>  6 2014-W22   NA       date_of_onset                16 #>  7 2014-W23   NA       date_of_onset                26 #>  8 2014-W24   NA       date_of_onset                34 #>  9 2014-W25   NA       date_of_onset                42 #> 10 2014-W26   NA       date_of_onset                51 #> # ℹ 305 more rows plot(y, angle = 45, nrow = 3)"},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"keep_first-keep_last-and-keep_peaks","dir":"Articles","previous_headings":"Usage > subsetting and other manipulations","what":"keep_first(), keep_last() and keep_peaks()","title":"incidence2","text":"data grouped date, may want select first last entries based particular date grouping using keep_first() keep_last(): Similarly may want quickly view incidence peaks:","code":"inci <- incidence(     ebola,     date_index = \"date_of_onset\",     interval = \"isoweek\",     groups = c(\"hospital\", \"gender\") )  keep_first(inci, 3) #> # incidence:  36 x 5 #> # count vars: date_of_onset #> # groups:     hospital, gender #>    date_index hospital           gender count_variable count #>  * <isowk>    <fct>              <fct>  <chr>          <int> #>  1 2014-W15   NA                 f      date_of_onset      0 #>  2 2014-W16   NA                 f      date_of_onset      0 #>  3 2014-W17   NA                 f      date_of_onset      2 #>  4 2014-W15   NA                 m      date_of_onset      0 #>  5 2014-W16   NA                 m      date_of_onset      0 #>  6 2014-W17   NA                 m      date_of_onset      0 #>  7 2014-W15   Connaught Hospital f      date_of_onset      0 #>  8 2014-W16   Connaught Hospital f      date_of_onset      0 #>  9 2014-W17   Connaught Hospital f      date_of_onset      0 #> 10 2014-W15   Connaught Hospital m      date_of_onset      0 #> # ℹ 26 more rows keep_last(inci, 3) #> # incidence:  36 x 5 #> # count vars: date_of_onset #> # groups:     hospital, gender #>    date_index hospital           gender count_variable count #>  * <isowk>    <fct>              <fct>  <chr>          <int> #>  1 2015-W16   NA                 f      date_of_onset      9 #>  2 2015-W17   NA                 f      date_of_onset      4 #>  3 2015-W18   NA                 f      date_of_onset      1 #>  4 2015-W16   NA                 m      date_of_onset      5 #>  5 2015-W17   NA                 m      date_of_onset      8 #>  6 2015-W18   NA                 m      date_of_onset      1 #>  7 2015-W16   Connaught Hospital f      date_of_onset      9 #>  8 2015-W17   Connaught Hospital f      date_of_onset      5 #>  9 2015-W18   Connaught Hospital f      date_of_onset      7 #> 10 2015-W16   Connaught Hospital m      date_of_onset      5 #> # ℹ 26 more rows keep_peaks(inci) #> # incidence:  14 x 5 #> # count vars: date_of_onset #> # groups:     hospital, gender #>    date_index hospital                               gender count_variable count #>  * <isowk>    <fct>                                  <fct>  <chr>          <int> #>  1 2014-W38   NA                                     f      date_of_onset     46 #>  2 2014-W40   NA                                     m      date_of_onset     41 #>  3 2014-W39   Connaught Hospital                     f      date_of_onset     57 #>  4 2014-W38   Connaught Hospital                     m      date_of_onset     48 #>  5 2014-W38   Military Hospital                      f      date_of_onset     26 #>  6 2014-W38   Military Hospital                      m      date_of_onset     28 #>  7 2014-W42   other                                  f      date_of_onset     32 #>  8 2014-W38   other                                  m      date_of_onset     26 #>  9 2014-W38   Princess Christian Maternity Hospital… f      date_of_onset     13 #> 10 2014-W40   Princess Christian Maternity Hospital… f      date_of_onset     13 #> 11 2014-W38   Princess Christian Maternity Hospital… m      date_of_onset     12 #> 12 2014-W42   Rokupa Hospital                        f      date_of_onset     15 #> 13 2014-W40   Rokupa Hospital                        m      date_of_onset     17 #> 14 2014-W44   Rokupa Hospital                        m      date_of_onset     17"},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"complete_dates","dir":"Articles","previous_headings":"Usage > subsetting and other manipulations","what":"complete_dates()","title":"incidence2","text":"Sometimes incidence data span consecutive units time, different groupings may cover different periods. end provide complete_dates() function ensures complete identical range dates given counts (default filling 0 value).","code":"dat <- data.frame(     dates = as.Date(c(\"2020-01-01\", \"2020-01-04\")),     gender = c(\"male\", \"female\") ) i <- incidence(dat, date_index = \"dates\", groups = \"gender\") i #> # incidence:  2 x 4 #> # count vars: dates #> # groups:     gender #>   date_index gender count_variable count #> * <date>     <chr>  <chr>          <int> #> 1 2020-01-01 male   dates              1 #> 2 2020-01-04 female dates              1 complete_dates(i) #> # incidence:  8 x 4 #> # count vars: dates #> # groups:     gender #>   date_index gender count_variable count #>   <date>     <chr>  <chr>          <int> #> 1 2020-01-01 female dates              0 #> 2 2020-01-01 male   dates              1 #> 3 2020-01-02 female dates              0 #> 4 2020-01-02 male   dates              0 #> 5 2020-01-03 female dates              0 #> 6 2020-01-03 male   dates              0 #> 7 2020-01-04 female dates              1 #> 8 2020-01-04 male   dates              0"},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"preservation-of-class","dir":"Articles","previous_headings":"Usage > subsetting and other manipulations","what":"preservation of class","title":"incidence2","text":"<incidence2> objects carefully constructed preserve structure range different operations can applied data frames. mean operation applied <incidence2> object long invariants object preserved (.e. groups, interval uniqueness rows) object retain ’s incidence class. invariants preserved <data.frame> returned instead.","code":"# filtering preserves class subset(inci, gender == \"f\" & hospital == \"Rokupa Hospital\") #> # incidence:  48 x 5 #> # count vars: date_of_onset #> # groups:     hospital, gender #>    date_index hospital        gender count_variable count #>  * <isowk>    <fct>           <fct>  <chr>          <int> #>  1 2014-W18   Rokupa Hospital f      date_of_onset      1 #>  2 2014-W20   Rokupa Hospital f      date_of_onset      1 #>  3 2014-W22   Rokupa Hospital f      date_of_onset      1 #>  4 2014-W23   Rokupa Hospital f      date_of_onset      1 #>  5 2014-W25   Rokupa Hospital f      date_of_onset      1 #>  6 2014-W27   Rokupa Hospital f      date_of_onset      1 #>  7 2014-W28   Rokupa Hospital f      date_of_onset      4 #>  8 2014-W29   Rokupa Hospital f      date_of_onset      2 #>  9 2014-W30   Rokupa Hospital f      date_of_onset      1 #> 10 2014-W31   Rokupa Hospital f      date_of_onset      1 #> # ℹ 38 more rows inci[c(1L, 3L, 5L), ] #> # incidence:  3 x 5 #> # count vars: date_of_onset #> # groups:     hospital, gender #>   date_index hospital          gender count_variable count #> * <isowk>    <fct>             <fct>  <chr>          <int> #> 1 2014-W15   Military Hospital f      date_of_onset      1 #> 2 2014-W17   NA                f      date_of_onset      2 #> 3 2014-W17   other             m      date_of_onset      1  # Adding columns preserve class inci$future <- inci$date_index + 999L inci #> # incidence:  601 x 6 #> # count vars: date_of_onset #> # groups:     hospital, gender #>    date_index hospital                        gender count_variable count future #>  * <isowk>    <fct>                           <fct>  <chr>          <int> <isow> #>  1 2014-W15   Military Hospital               f      date_of_onset      1 2033-… #>  2 2014-W16   Connaught Hospital              m      date_of_onset      1 2033-… #>  3 2014-W17   NA                              f      date_of_onset      2 2033-… #>  4 2014-W17   other                           f      date_of_onset      2 2033-… #>  5 2014-W17   other                           m      date_of_onset      1 2033-… #>  6 2014-W18   NA                              f      date_of_onset      1 2033-… #>  7 2014-W18   Connaught Hospital              f      date_of_onset      1 2033-… #>  8 2014-W18   Princess Christian Maternity H… f      date_of_onset      1 2033-… #>  9 2014-W18   Rokupa Hospital                 f      date_of_onset      1 2033-… #> 10 2014-W19   NA                              f      date_of_onset      1 2033-… #> # ℹ 591 more rows  # rename preserve class names(inci)[names(inci) == \"date_index\"] <- \"isoweek\" inci #> # incidence:  601 x 6 #> # count vars: date_of_onset #> # groups:     hospital, gender #>    isoweek  hospital                          gender count_variable count future #>  * <isowk>  <fct>                             <fct>  <chr>          <int> <isow> #>  1 2014-W15 Military Hospital                 f      date_of_onset      1 2033-… #>  2 2014-W16 Connaught Hospital                m      date_of_onset      1 2033-… #>  3 2014-W17 NA                                f      date_of_onset      2 2033-… #>  4 2014-W17 other                             f      date_of_onset      2 2033-… #>  5 2014-W17 other                             m      date_of_onset      1 2033-… #>  6 2014-W18 NA                                f      date_of_onset      1 2033-… #>  7 2014-W18 Connaught Hospital                f      date_of_onset      1 2033-… #>  8 2014-W18 Princess Christian Maternity Hos… f      date_of_onset      1 2033-… #>  9 2014-W18 Rokupa Hospital                   f      date_of_onset      1 2033-… #> 10 2014-W19 NA                                f      date_of_onset      1 2033-… #> # ℹ 591 more rows  # select returns a data frame unless all date, count and group variables are # preserved in the output str(inci[,-1L]) #> 'data.frame':    601 obs. of  5 variables: #>  $ hospital      : Factor w/ 5 levels \"Connaught Hospital\",..: 2 1 NA 3 3 NA 1 4 5 NA ... #>  $ gender        : Factor w/ 2 levels \"f\",\"m\": 1 2 1 1 2 1 1 1 1 1 ... #>  $ count_variable: chr  \"date_of_onset\" \"date_of_onset\" \"date_of_onset\" \"date_of_onset\" ... #>  $ count         : int  1 1 2 2 1 1 1 1 1 1 ... #>  $ future        : 'grates_isoweek' int  2033-W22 2033-W23 2033-W24 2033-W24 2033-W24 2033-W25 2033-W25 2033-W25 2033-W25 2033-W26 ... inci[, -6L] #> # incidence:  601 x 5 #> # count vars: date_of_onset #> # groups:     hospital, gender #>    isoweek  hospital                                 gender count_variable count #>  * <isowk>  <fct>                                    <fct>  <chr>          <int> #>  1 2014-W15 Military Hospital                        f      date_of_onset      1 #>  2 2014-W16 Connaught Hospital                       m      date_of_onset      1 #>  3 2014-W17 NA                                       f      date_of_onset      2 #>  4 2014-W17 other                                    f      date_of_onset      2 #>  5 2014-W17 other                                    m      date_of_onset      1 #>  6 2014-W18 NA                                       f      date_of_onset      1 #>  7 2014-W18 Connaught Hospital                       f      date_of_onset      1 #>  8 2014-W18 Princess Christian Maternity Hospital (… f      date_of_onset      1 #>  9 2014-W18 Rokupa Hospital                          f      date_of_onset      1 #> 10 2014-W19 NA                                       f      date_of_onset      1 #> # ℹ 591 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/articles/incidence2.html","id":"accessing-variable-information","dir":"Articles","previous_headings":"Usage","what":"Accessing variable information","title":"incidence2","text":"provide multiple accessors easily access information <incidence2> object’s structure:","code":"# the name of the date_index variable of x get_date_index_name(inci) #> [1] \"isoweek\"  # alias for `get_date_index_name()` get_dates_name(inci) #> [1] \"isoweek\"  # the name of the count variable of x get_count_variable_name(inci) #> [1] \"count_variable\"  # the name of the count value of x get_count_value_name(inci) #> [1] \"count\"  # the name(s) of the group variable(s) of x get_group_names(inci) #> [1] \"hospital\" \"gender\"  # list containing date_index variable of x str(get_date_index(inci)) #>  'grates_isoweek' int [1:601] 2014-W15 2014-W16 2014-W17 2014-W17 2014-W17 2014-W18 2014-W18 2014-W18 2014-W18 2014-W19 ...  # alias for get_date_index str(get_dates(inci)) #>  'grates_isoweek' int [1:601] 2014-W15 2014-W16 2014-W17 2014-W17 2014-W17 2014-W18 2014-W18 2014-W18 2014-W18 2014-W19 ...  # list containing the count variable of x str(get_count_variable(inci)) #>  chr [1:601] \"date_of_onset\" \"date_of_onset\" \"date_of_onset\" ...  # list containing count value of x str(get_count_value(inci)) #>  int [1:601] 1 1 2 2 1 1 1 1 1 1 ...  # list of the group variable(s) of x str(get_groups(inci))  #> List of 2 #>  $ hospital: Factor w/ 5 levels \"Connaught Hospital\",..: 2 1 NA 3 3 NA 1 4 5 NA ... #>  $ gender  : Factor w/ 2 levels \"f\",\"m\": 1 2 1 1 2 1 1 1 1 1 ..."},{"path":"http://www.reconverse.org/incidence2/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tim Taylor. Author, maintainer. Thibaut Jombart. Contributor.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taylor T (2023). incidence2: Compute, Handle Plot Incidence Dated Events. R package version 2.2.2.9000, https://github.com/reconverse/incidence2, https://www.reconverse.org/incidence2/.","code":"@Manual{,   title = {incidence2: Compute, Handle and Plot Incidence of Dated Events},   author = {Tim Taylor},   year = {2023},   note = {R package version 2.2.2.9000, https://github.com/reconverse/incidence2},   url = {https://www.reconverse.org/incidence2/}, }"},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"incidence2","dir":"","previous_headings":"","what":"Compute, Handle and Plot Incidence of Dated Events","title":"Compute, Handle and Plot Incidence of Dated Events","text":"{incidence2} R package implements functions classes compute, handle visualise incidence linelist data. refocusses scope original {incidence} package. Unlike original package, {incidence2} concentrates initial calculation, manipulation plotting resultant incidence objects.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package","title":"Compute, Handle and Plot Incidence of Dated Events","text":"can install released version {incidence2} CRAN : development version {incidence2} can installed GitHub :","code":"install.packages(\"incidence2\") remotes::install_github(\"reconverse/incidence2\", build_vignettes = TRUE)"},{"path":"http://www.reconverse.org/incidence2/dev/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Compute, Handle and Plot Incidence of Dated Events","text":"overview {incidence2} provided vignette distributed package: vignette(\"incidence2\", package = \"incidence2\")","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Access various elements of an incidence object — accessors","title":"Access various elements of an incidence object — accessors","text":"Access various elements incidence object","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access various elements of an incidence object — accessors","text":"","code":"get_date_index_name(x, ...)  # S3 method for default get_date_index_name(x, ...)  # S3 method for incidence2 get_date_index_name(x, ...)  get_dates_name(x, ...)  get_count_variable_name(x, ...)  # S3 method for default get_count_variable_name(x, ...)  # S3 method for incidence2 get_count_variable_name(x, ...)  get_count_value_name(x, ...)  # S3 method for default get_count_value_name(x, ...)  # S3 method for incidence2 get_count_value_name(x, ...)  get_group_names(x, ...)  # S3 method for default get_group_names(x, ...)  # S3 method for incidence2 get_group_names(x, ...)  get_date_index(x, ...)  # S3 method for default get_date_index(x, ...)  # S3 method for incidence2 get_date_index(x, ...)  get_dates(x, ...)  get_count_variable(x, ...)  # S3 method for default get_count_variable(x, ...)  # S3 method for incidence2 get_count_variable(x, ...)  get_count_value(x, ...)  # S3 method for default get_count_value(x, ...)  # S3 method for incidence2 get_count_value(x, ...)  get_groups(x, ...)  # S3 method for default get_groups(x, ...)  # S3 method for incidence2 get_groups(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access various elements of an incidence object — accessors","text":"x R object. ... currently used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access various elements of an incidence object — accessors","text":"get_date_index_name(): name date_index variable x. get_dates_name(): Alias get_date_index_name(). get_count_variable_name(): name count variable x. get_count_value_name(): name count value x. get_group_names(): name(s) group variable(s) x. get_date_index(): date_index variable x. get_dates(): Alias get_date_index(). get_count_variable(): count variable x. get_count_value(): count value x. get_groups(): List group variable(s) x.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access various elements of an incidence object — accessors","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) { withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist     i <- incidence(dat, date_index = \"date_of_onset\",                    groups = c(\"gender\", \"hospital\"))      get_count_variable_name(i)     get_group_names(i)     get_dates_name(i) }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > i <- incidence(dat, date_index = \"date_of_onset\", groups = c(\"gender\",  #> +     \"hospital\")) #> > get_count_variable_name(i) #> [1] \"count_variable\" #> > get_group_names(i) #> [1] \"gender\"   \"hospital\" #> > get_dates_name(i) #> [1] \"date_index\""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert incident object to a data frame — as.data.frame.incidence2","title":"Convert incident object to a data frame — as.data.frame.incidence2","text":"Convert incident object data frame","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert incident object to a data frame — as.data.frame.incidence2","text":"","code":"# S3 method for incidence2 as.data.frame(x, row.names, optional, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert incident object to a data frame — as.data.frame.incidence2","text":"x <incidence2> object. row.names used. optional used. ... used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as.data.frame.incidence2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert incident object to a data frame — as.data.frame.incidence2","text":"","code":"dat <- data.frame(     dates = Sys.Date() + 1:100,     names = rep(c(\"Jo\", \"John\"), 5) )  dat <- incidence(dat, date_index = \"dates\", groups = \"names\") as.data.frame(dat) #>     date_index names count_variable count #> 1   2023-12-06    Jo          dates     1 #> 2   2023-12-07  John          dates     1 #> 3   2023-12-08    Jo          dates     1 #> 4   2023-12-09  John          dates     1 #> 5   2023-12-10    Jo          dates     1 #> 6   2023-12-11  John          dates     1 #> 7   2023-12-12    Jo          dates     1 #> 8   2023-12-13  John          dates     1 #> 9   2023-12-14    Jo          dates     1 #> 10  2023-12-15  John          dates     1 #> 11  2023-12-16    Jo          dates     1 #> 12  2023-12-17  John          dates     1 #> 13  2023-12-18    Jo          dates     1 #> 14  2023-12-19  John          dates     1 #> 15  2023-12-20    Jo          dates     1 #> 16  2023-12-21  John          dates     1 #> 17  2023-12-22    Jo          dates     1 #> 18  2023-12-23  John          dates     1 #> 19  2023-12-24    Jo          dates     1 #> 20  2023-12-25  John          dates     1 #> 21  2023-12-26    Jo          dates     1 #> 22  2023-12-27  John          dates     1 #> 23  2023-12-28    Jo          dates     1 #> 24  2023-12-29  John          dates     1 #> 25  2023-12-30    Jo          dates     1 #> 26  2023-12-31  John          dates     1 #> 27  2024-01-01    Jo          dates     1 #> 28  2024-01-02  John          dates     1 #> 29  2024-01-03    Jo          dates     1 #> 30  2024-01-04  John          dates     1 #> 31  2024-01-05    Jo          dates     1 #> 32  2024-01-06  John          dates     1 #> 33  2024-01-07    Jo          dates     1 #> 34  2024-01-08  John          dates     1 #> 35  2024-01-09    Jo          dates     1 #> 36  2024-01-10  John          dates     1 #> 37  2024-01-11    Jo          dates     1 #> 38  2024-01-12  John          dates     1 #> 39  2024-01-13    Jo          dates     1 #> 40  2024-01-14  John          dates     1 #> 41  2024-01-15    Jo          dates     1 #> 42  2024-01-16  John          dates     1 #> 43  2024-01-17    Jo          dates     1 #> 44  2024-01-18  John          dates     1 #> 45  2024-01-19    Jo          dates     1 #> 46  2024-01-20  John          dates     1 #> 47  2024-01-21    Jo          dates     1 #> 48  2024-01-22  John          dates     1 #> 49  2024-01-23    Jo          dates     1 #> 50  2024-01-24  John          dates     1 #> 51  2024-01-25    Jo          dates     1 #> 52  2024-01-26  John          dates     1 #> 53  2024-01-27    Jo          dates     1 #> 54  2024-01-28  John          dates     1 #> 55  2024-01-29    Jo          dates     1 #> 56  2024-01-30  John          dates     1 #> 57  2024-01-31    Jo          dates     1 #> 58  2024-02-01  John          dates     1 #> 59  2024-02-02    Jo          dates     1 #> 60  2024-02-03  John          dates     1 #> 61  2024-02-04    Jo          dates     1 #> 62  2024-02-05  John          dates     1 #> 63  2024-02-06    Jo          dates     1 #> 64  2024-02-07  John          dates     1 #> 65  2024-02-08    Jo          dates     1 #> 66  2024-02-09  John          dates     1 #> 67  2024-02-10    Jo          dates     1 #> 68  2024-02-11  John          dates     1 #> 69  2024-02-12    Jo          dates     1 #> 70  2024-02-13  John          dates     1 #> 71  2024-02-14    Jo          dates     1 #> 72  2024-02-15  John          dates     1 #> 73  2024-02-16    Jo          dates     1 #> 74  2024-02-17  John          dates     1 #> 75  2024-02-18    Jo          dates     1 #> 76  2024-02-19  John          dates     1 #> 77  2024-02-20    Jo          dates     1 #> 78  2024-02-21  John          dates     1 #> 79  2024-02-22    Jo          dates     1 #> 80  2024-02-23  John          dates     1 #> 81  2024-02-24    Jo          dates     1 #> 82  2024-02-25  John          dates     1 #> 83  2024-02-26    Jo          dates     1 #> 84  2024-02-27  John          dates     1 #> 85  2024-02-28    Jo          dates     1 #> 86  2024-02-29  John          dates     1 #> 87  2024-03-01    Jo          dates     1 #> 88  2024-03-02  John          dates     1 #> 89  2024-03-03    Jo          dates     1 #> 90  2024-03-04  John          dates     1 #> 91  2024-03-05    Jo          dates     1 #> 92  2024-03-06  John          dates     1 #> 93  2024-03-07    Jo          dates     1 #> 94  2024-03-08  John          dates     1 #> 95  2024-03-09    Jo          dates     1 #> 96  2024-03-10  John          dates     1 #> 97  2024-03-11    Jo          dates     1 #> 98  2024-03-12  John          dates     1 #> 99  2024-03-13    Jo          dates     1 #> 100 2024-03-14  John          dates     1"},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to an incidence object — as_incidence","title":"Coerce to an incidence object — as_incidence","text":"Generic coercion <incidence2> object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to an incidence object — as_incidence","text":"","code":"as_incidence(x, ...)  # S3 method for default as_incidence(x, ...)  # S3 method for incidence2 as_incidence(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to an incidence object — as_incidence","text":"x R object. ... Additional arguments passed methods.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/as_incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to an incidence object — as_incidence","text":"<incidence2> object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete dates for all group combinations — complete_dates","title":"Complete dates for all group combinations — complete_dates","text":"function ensures incidence object range dates grouping. default missing counts filled 0L.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete dates for all group combinations — complete_dates","text":"","code":"complete_dates(x, expand = TRUE, fill = 0L, by = 1L, allow_POSIXct = FALSE)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete dates for all group combinations — complete_dates","text":"x <incidence2> object. expand [logical] range dates minimum maximum value date index also created. expand TRUE (default) complete_dates attempt use function(x) seq(min(x), max(x), = 1) generate complete sequence dates. fill [numeric] value replace missing counts . Defaults 0L. [Defunct] Ignored. allow_POSIXct [logical] function work POSIXct dates? Defaults FALSE.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete dates for all group combinations — complete_dates","text":"<incidence2> object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/complete_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete dates for all group combinations — complete_dates","text":"","code":"x <- data.frame(     dates = Sys.Date() + c(1,3,4),     groups = c(\"grp1\",\"grp2\", \"grp1\"),     counts = 1:3 )  i <- incidence(x, date_index = \"dates\", groups = \"groups\", counts = \"counts\") complete_dates(i) #> # incidence:  8 x 4 #> # count vars: counts #> # groups:     groups #>   date_index groups count_variable count #>   <date>     <chr>  <fct>          <int> #> 1 2023-12-06 grp1   counts             1 #> 2 2023-12-06 grp2   counts             0 #> 3 2023-12-07 grp1   counts             0 #> 4 2023-12-07 grp2   counts             0 #> 5 2023-12-08 grp1   counts             0 #> 6 2023-12-08 grp2   counts             2 #> 7 2023-12-09 grp1   counts             3 #> 8 2023-12-09 grp2   counts             0"},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":null,"dir":"Reference","previous_headings":"","what":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"dataset containing daily time-series cases, tests, hospitalisations, deaths UK.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"","code":"covidregionaldataUK"},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"data frame 6370 rows 26 variables: date date counts reported (YYYY-MM-DD) region region name region_code region code cases_new new reported cases day cases_total total reported cases including day deaths_new new reported deaths day deaths_total total reported deaths including day recovered_new new reported recoveries day recovered_total total reported coveries including day hosp_new new reported hospitalisations day hosp_total total reported hospitalisations including day (note cumulative total new reported, total currently hospital). tested_new tests day tested_total total tests completed including day","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"https://CRAN.R-project.org/package=covidregionaldata","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/covidregionaldataUK.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regional data for COVID-19 cases in the UK — covidregionaldataUK","text":"Extracted using covidregionaldata package 2021-06-03.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute cumulative 'incidence' — cumulate","title":"Compute cumulative 'incidence' — cumulate","text":"cumulate() computes cumulative incidence time <incidence2> object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute cumulative 'incidence' — cumulate","text":"","code":"cumulate(x)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute cumulative 'incidence' — cumulate","text":"x [incidence2] object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/cumulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute cumulative 'incidence' — cumulate","text":"","code":"dat <- data.frame(   dates = as.integer(c(0,1,2,2,3,5,7)),   groups = factor(c(1, 2, 3, 3, 3, 3, 1)) )  i <- incidence(dat, date_index = \"dates\", groups = \"groups\") cumulate(i) #> # incidence:  6 x 4 #> # count vars: dates #> # groups:     groups #>   date_index groups count_variable cumulative_count #> *      <int> <fct>  <chr>                     <int> #> 1          0 1      dates                         1 #> 2          7 1      dates                         2 #> 3          1 2      dates                         1 #> 4          2 3      dates                         2 #> 5          3 3      dates                         3 #> 6          5 3      dates                         4"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the incidence of events — incidence","title":"Compute the incidence of events — incidence","text":"incidence() calculates event incidence different events across specified time periods groupings.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the incidence of events — incidence","text":"","code":"incidence(   x,   date_index,   groups = NULL,   counts = NULL,   count_names_to = \"count_variable\",   count_values_to = \"count\",   date_names_to = \"date_index\",   rm_na_dates = TRUE,   interval = NULL,   offset = NULL,   ... )"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the incidence of events — incidence","text":"x data frame object representing linelist pre-aggregated dataset. date_index [character] time index(es) given data. name(s) corresponding desired date column(s) x. name vector can used convenient relabelling resultant output. Multiple indices make sense  x linelist. groups [character] optional vector giving names groups observations incidence grouped. counts [character] count variables given data.  NULL (default) data taken linelist individual observations. count_names_to [character] column create store counts column names provided counts NULL. count_values_to [character] name column store resultant count values . date_names_to [character] name column store date variables . rm_na_dates [logical] NA dates removed prior aggregation? interval optional scalar integer string indicating (fixed) size desired time interval wish use computing incidence. Defaults NULL case date_index columns left unchanged. Numeric values coerced integer treated number days group. Text strings can one :   details can found \"Interval specification\" section. offset applicable interval NULL. optional scalar integer date indicating value wish start counting periods relative Unix Epoch: Default value NULL corresponds 0L. integer values stored scaled n (offset <- .integer(offset) %% n). date values first converted integer offset (offset <- floor(.numeric(offset))) scaled via n . ... currently used.","code":"* day or daily * week(s) or weekly * epiweek(s) * isoweek(s) * month(s) or monthly * yearmonth(s) * quarter(s) or quarterly * yearquarter(s) * year(s) or yearly"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the incidence of events — incidence","text":"object class <incidence2, data.frame>.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the incidence of events — incidence","text":"<incidence2> objects sub class data frame additional invariants. , <incidence2> object must: one column representing date index (need date object must inherent ordering time); one column representing count variable (.e. counted) one variable representing associated count; zero columns representing groups; duplicated rows regards date group variables.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"interval-specification","dir":"Reference","previous_headings":"","what":"Interval specification","title":"Compute the incidence of events — incidence","text":"interval specified, incidence(), predominantly uses grates package generate appropriate date groupings. grouping used depends value interval. can specified either integer value string corresponding one classes: integer values:                     <grates_period> object, grouped specified number days. day, daily:                         <Date> objects. week(s), weekly, isoweek:           <grates_isoweek> objects. epiweek(s):                         <grates_epiweek> objects. month(s), monthly, yearmonth:       <grates_yearmonth> objects. quarter(s), quarterly, yearquarter: <grates_yearquarter> objects. year(s) yearly:                 <grates_year> objects. \"day\" \"daily\" interval, provide thin wrapper around .Date() ensures underlying data whole numbers time zones respected. Note additional arguments forwarded .Date() greater flexibility users advised modifying input prior calling incidence().","code":""},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the incidence of events — incidence","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) { withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist     incidence(dat, \"date_of_onset\")     incidence(dat, \"date_of_onset\", groups = c(\"gender\", \"hospital\")) }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > incidence(dat, \"date_of_onset\") #> # incidence:  367 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <date>     <chr>          <int> #>  1 2014-04-07 date_of_onset      1 #>  2 2014-04-15 date_of_onset      1 #>  3 2014-04-21 date_of_onset      2 #>  4 2014-04-25 date_of_onset      1 #>  5 2014-04-26 date_of_onset      1 #>  6 2014-04-27 date_of_onset      1 #>  7 2014-05-01 date_of_onset      2 #>  8 2014-05-03 date_of_onset      1 #>  9 2014-05-04 date_of_onset      1 #> 10 2014-05-05 date_of_onset      1 #> # ℹ 357 more rows #> > incidence(dat, \"date_of_onset\", groups = c(\"gender\", \"hospital\")) #> # incidence:  2,535 x 5 #> # count vars: date_of_onset #> # groups:     gender, hospital #>    date_index gender hospital                               count_variable count #>  * <date>     <fct>  <fct>                                  <chr>          <int> #>  1 2014-04-07 f      Military Hospital                      date_of_onset      1 #>  2 2014-04-15 m      Connaught Hospital                     date_of_onset      1 #>  3 2014-04-21 f      other                                  date_of_onset      1 #>  4 2014-04-21 m      other                                  date_of_onset      1 #>  5 2014-04-25 f      NA                                     date_of_onset      1 #>  6 2014-04-26 f      other                                  date_of_onset      1 #>  7 2014-04-27 f      NA                                     date_of_onset      1 #>  8 2014-05-01 f      Princess Christian Maternity Hospital… date_of_onset      1 #>  9 2014-05-01 f      Rokupa Hospital                        date_of_onset      1 #> 10 2014-05-03 f      Connaught Hospital                     date_of_onset      1 #> # ℹ 2,525 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence2-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions now defunct in package incidence2 — incidence2-defunct","title":"Functions now defunct in package incidence2 — incidence2-defunct","text":"functions now defunct.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence2-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions now defunct in package incidence2 — incidence2-defunct","text":"","code":"new_incidence(   x,   date,   groups = NULL,   counts,   measurements = NULL,   validate = TRUE )  validate_incidence(x)  build_incidence(   x,   date_index,   groups = NULL,   counts = NULL,   na_as_group = TRUE,   FUN = identity,   args = list() )  get_n(x)  get_interval(x, ...)  get_timespan(x, ...)  facet_plot(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"incidence2: Compute, Handle and Plot Incidence of Dated Events — incidence2-package","title":"incidence2: Compute, Handle and Plot Incidence of Dated Events — incidence2-package","text":"Provides functions classes compute, handle visualise incidence dated events defined time interval. Dates can provided various standard formats. class 'incidence2' used store computed incidence can easily manipulated, subsetted, plotted. package part RECON (https://www.repidemicsconsortium.org/) toolkit outbreak analysis (https://www.reconverse.org).","code":""},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/reference/incidence2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"incidence2: Compute, Handle and Plot Incidence of Dated Events — incidence2-package","text":"Maintainer: Tim Taylor tim.taylor@hiddenelephants.co.uk (ORCID) contributors: Thibaut Jombart thibautjombart@gmail.com [contributor]","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep first, last and peak occurences — keep","title":"Keep first, last and peak occurences — keep","text":"keep_first() keep_last() keep first last n rows occur grouping ascending date order. keep_peaks() keeps rows maximum count value group.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep first, last and peak occurences — keep","text":"","code":"keep_first(x, n, complete_dates = TRUE, ...)  keep_last(x, n, complete_dates = TRUE, ...)  keep_peaks(x, complete_dates = TRUE, first_only = FALSE, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep first, last and peak occurences — keep","text":"x <incidence2> object. n [integer] Number entries keep. double vectors converted via .integer(n). complete_dates [bool] complete_dates() called data prior keeping first entries. Defaults TRUE. ... arguments passed complete_dates(). first_only [bool] first peak (date) kept. Defaults TRUE.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep first, last and peak occurences — keep","text":"Incidence object chosen entries.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/keep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep first, last and peak occurences — keep","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) { withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist     inci <- incidence(dat, \"date_of_onset\")     keep_first(inci, 3)     keep_last(inci, 3) }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > inci <- incidence(dat, \"date_of_onset\") #> > keep_first(inci, 3) #> # incidence:  3 x 3 #> # count vars: date_of_onset #>   date_index count_variable count #> * <date>     <chr>          <int> #> 1 2014-04-07 date_of_onset      1 #> 2 2014-04-08 date_of_onset      0 #> 3 2014-04-09 date_of_onset      0 #> > keep_last(inci, 3) #> # incidence:  3 x 3 #> # count vars: date_of_onset #>   date_index count_variable count #> * <date>     <chr>          <int> #> 1 2015-04-28 date_of_onset      8 #> 2 2015-04-29 date_of_onset      2 #> 3 2015-04-30 date_of_onset      2"},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palettes used in incidence — vibrant","title":"Color palettes used in incidence — vibrant","text":"functions color palettes used incidence. palettes come https://personal.sron.nl/~pault/#sec:qualitative exclude grey, reserved missing data.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palettes used in incidence — vibrant","text":"","code":"vibrant(n)  muted(n)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color palettes used in incidence — vibrant","text":"n [integer] Number colours. double vectors converted via .integer(n).","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palettes used in incidence — vibrant","text":"","code":"vibrant(5) #> [1] \"#0077BB\" \"#33BBEE\" \"#009988\" \"#EE7733\" \"#CC3311\" muted(10) #> Using more colors (10) than this palette can handle (9); some colors will be interpolated. #>  [1] \"#332288\" \"#7EB9E2\" \"#53B1AB\" \"#228855\" \"#5C8933\" \"#B7AF51\" \"#D7AA77\" #>  [8] \"#BC566F\" \"#8B255C\" \"#AA4499\""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an incidence object — plot.incidence2","title":"Plot an incidence object — plot.incidence2","text":"plot() can used provide bar plot incidence object. Due complexities automating plotting experimental nature may better use ggplot2 directly.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an incidence object — plot.incidence2","text":"","code":"# S3 method for incidence2 plot(   x,   y,   width = 1,   colour_palette = vibrant,   border_colour = NA,   na_colour = \"grey\",   alpha = 0.7,   fill = NULL,   legend = c(\"right\", \"left\", \"bottom\", \"top\", \"none\"),   title = NULL,   angle = 0,   size = NULL,   nrow = NULL,   n_breaks = 6L,   show_cases = FALSE,   ... )"},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an incidence object — plot.incidence2","text":"x <incidence2> object. y used. Required compatibility plot() generic. width [numeric] Value 0 1 indicating relative size bars interval. Default 1. colour_palette [function] color palette used different count variables. Defaults vibrant (see ?palettes). border_colour [character] color used borders bars. Use NA (default) invisible borders. na_colour [character] colour plot NA values graphs. Defaults grey. alpha [numeric] alpha level color transparency, 1 fully opaque 0 fully transparent Defaults 0.7. fill [character] variable colour plots . Must group count variable mean variable used facetting. NULL distinction made plot colours. legend [character] Position legend plot. applied fill NULL. One \"right\" (default), \"left\", \"bottom\", \"top\" \"none\". title [character] Optional title graph. angle [numeric] Rotation angle text. size [numeric] text size pts. nrow [integer] Number rows used facetting group variables present just one count incidence object. Numeric values coerced integer via .integer(). n_breaks [integer] Approximate number breaks calculated using scales::breaks_pretty. Numeric values coerced integer via .integer(). Default 6L. show_cases [logical] TRUE, observation shown individually square format. Normally used outbreaks small number cases. Defaults FALSE. ... currently used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an incidence object — plot.incidence2","text":"[ggplot2::ggplot()] object.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/plot.incidence2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an incidence object — plot.incidence2","text":"Faceting occur automatically either grouping variables multiple counts present. multiple count variables, count occupy different row resulting plot. Utilises ggplot2 must installed use.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/print.incidence2.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an incidence object. — print.incidence2","title":"Print an incidence object. — print.incidence2","text":"Printing <incidence2> objects handled via pillar package.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/print.incidence2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an incidence object. — print.incidence2","text":"","code":"# S3 method for incidence2 print(x, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/print.incidence2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an incidence object. — print.incidence2","text":"x <incidence2> object. ... Additional arguments passed pillar::tbl_format_setup().","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/print.incidence2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an incidence object. — print.incidence2","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) { withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist      (out <- incidence(dat, \"date_of_onset\"))      # use `n` to print more lines     print(out, n = 20L) }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > (out <- incidence(dat, \"date_of_onset\")) #> # incidence:  367 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <date>     <chr>          <int> #>  1 2014-04-07 date_of_onset      1 #>  2 2014-04-15 date_of_onset      1 #>  3 2014-04-21 date_of_onset      2 #>  4 2014-04-25 date_of_onset      1 #>  5 2014-04-26 date_of_onset      1 #>  6 2014-04-27 date_of_onset      1 #>  7 2014-05-01 date_of_onset      2 #>  8 2014-05-03 date_of_onset      1 #>  9 2014-05-04 date_of_onset      1 #> 10 2014-05-05 date_of_onset      1 #> # ℹ 357 more rows #> > print(out, n = 20L) #> # incidence:  367 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <date>     <chr>          <int> #>  1 2014-04-07 date_of_onset      1 #>  2 2014-04-15 date_of_onset      1 #>  3 2014-04-21 date_of_onset      2 #>  4 2014-04-25 date_of_onset      1 #>  5 2014-04-26 date_of_onset      1 #>  6 2014-04-27 date_of_onset      1 #>  7 2014-05-01 date_of_onset      2 #>  8 2014-05-03 date_of_onset      1 #>  9 2014-05-04 date_of_onset      1 #> 10 2014-05-05 date_of_onset      1 #> 11 2014-05-06 date_of_onset      3 #> 12 2014-05-07 date_of_onset      2 #> 13 2014-05-08 date_of_onset      2 #> 14 2014-05-09 date_of_onset      2 #> 15 2014-05-10 date_of_onset      1 #> 16 2014-05-11 date_of_onset      1 #> 17 2014-05-12 date_of_onset      3 #> 18 2014-05-13 date_of_onset      3 #> 19 2014-05-14 date_of_onset      3 #> 20 2014-05-16 date_of_onset      2 #> # ℹ 347 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Regroup 'incidence' objects — regroup","title":"Regroup 'incidence' objects — regroup","text":"function regroups <incidence2> object across specified groups. resulting <incidence2> object contains counts summed groups present input.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regroup 'incidence' objects — regroup","text":"","code":"regroup(x, groups = NULL)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regroup 'incidence' objects — regroup","text":"x <incidence2> object. groups [character] groups sum . NULL (default) function returns corresponding object groupings.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/regroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regroup 'incidence' objects — regroup","text":"","code":"if (requireNamespace(\"outbreaks\", quietly = TRUE)) { withAutoprint({     data(ebola_sim_clean, package = \"outbreaks\")     dat <- ebola_sim_clean$linelist     i <- incidence(         dat,         date_index = \"date_of_onset\",         groups = c(\"gender\", \"hospital\")     )     regroup(i)     regroup(i, \"hospital\") }) } #> > data(ebola_sim_clean, package = \"outbreaks\") #> > dat <- ebola_sim_clean$linelist #> > i <- incidence(dat, date_index = \"date_of_onset\", groups = c(\"gender\",  #> +     \"hospital\")) #> > regroup(i) #> # incidence:  367 x 3 #> # count vars: date_of_onset #>    date_index count_variable count #>  * <date>     <chr>          <int> #>  1 2014-04-07 date_of_onset      1 #>  2 2014-04-15 date_of_onset      1 #>  3 2014-04-21 date_of_onset      2 #>  4 2014-04-25 date_of_onset      1 #>  5 2014-04-26 date_of_onset      1 #>  6 2014-04-27 date_of_onset      1 #>  7 2014-05-01 date_of_onset      2 #>  8 2014-05-03 date_of_onset      1 #>  9 2014-05-04 date_of_onset      1 #> 10 2014-05-05 date_of_onset      1 #> # ℹ 357 more rows #> > regroup(i, \"hospital\") #> # incidence:  1,635 x 4 #> # count vars: date_of_onset #> # groups:     hospital #>    date_index hospital                                     count_variable count #>  * <date>     <fct>                                        <chr>          <int> #>  1 2014-04-07 Military Hospital                            date_of_onset      1 #>  2 2014-04-15 Connaught Hospital                           date_of_onset      1 #>  3 2014-04-21 other                                        date_of_onset      2 #>  4 2014-04-25 NA                                           date_of_onset      1 #>  5 2014-04-26 other                                        date_of_onset      1 #>  6 2014-04-27 NA                                           date_of_onset      1 #>  7 2014-05-01 Princess Christian Maternity Hospital (PCMH) date_of_onset      1 #>  8 2014-05-01 Rokupa Hospital                              date_of_onset      1 #>  9 2014-05-03 Connaught Hospital                           date_of_onset      1 #> 10 2014-05-04 NA                                           date_of_onset      1 #> # ℹ 1,625 more rows"},{"path":"http://www.reconverse.org/incidence2/dev/reference/s3_register.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a method for a suggested dependency — s3_register","title":"Register a method for a suggested dependency — s3_register","text":"Generally, recommend way register S3 method use S3Method() namespace directive (often generated automatically @export roxygen2 tag). However, technique requires generic imported package, sometimes want suggest package, provide method package loaded. s3_register() can called package's .onLoad() dynamically register method generic's package loaded.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/s3_register.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a method for a suggested dependency — s3_register","text":"generic Name generic form pkg::generic. class Name class method Optionally, implementation method. default, found looking function called generic.class package environment. Note providing method can dangerous use devtools. namespace method reloaded devtools::load_all(), function keep inheriting old namespace. might cause crashes dangling .Call() pointers.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/s3_register.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a method for a suggested dependency — s3_register","text":"R 3.5.0 later, s3_register() also useful demonstrating class creation vignette, since method lookup longer always involves lexical scope. R 3.6.0 later, can achieve similar effect using \"delayed method registration\", .e. placing following NAMESPACE file:","code":"if (getRversion() >= \"3.6.0\") {   S3method(package::generic, class) }"},{"path":"http://www.reconverse.org/incidence2/dev/reference/s3_register.html","id":"usage-in-other-packages","dir":"Reference","previous_headings":"","what":"Usage in other packages","title":"Register a method for a suggested dependency — s3_register","text":"avoid taking dependency vctrs, copy source s3_register() package. licensed permissive unlicense make crystal clear happy . need include license even credit us using function.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/s3_register.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a method for a suggested dependency — s3_register","text":"","code":"# A typical use case is to dynamically register tibble/pillar methods # for your class. That way you avoid creating a hard dependency on packages # that are not essential, while still providing finer control over # printing when they are used.  .onLoad <- function(...) {   s3_register(\"pillar::pillar_shaft\", \"vctrs_vctr\")   s3_register(\"tibble::type_sum\", \"vctrs_vctr\") }"},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence2.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of an incidence object — summary.incidence2","title":"Summary of an incidence object — summary.incidence2","text":"Summary incidence object","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of an incidence object — summary.incidence2","text":"","code":"# S3 method for incidence2 summary(object, ...)"},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of an incidence object — summary.incidence2","text":"object 'incidence' object. ... used.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of an incidence object — summary.incidence2","text":"object (invisibly).","code":""},{"path":"http://www.reconverse.org/incidence2/dev/reference/summary.incidence2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of an incidence object — summary.incidence2","text":"","code":"data(ebola_sim_clean, package = \"outbreaks\") dat <- ebola_sim_clean$linelist inci <- incidence(dat, \"date_of_onset\", groups = c(\"gender\", \"hospital\")) summary(inci) #> From:          2014-04-07 #> To:            2015-04-30 #> Groups:        gender, hospital #>  #> Total observations: #> # A data frame: 12 × 4 #>    gender hospital                                     count_variable count #>    <fct>  <fct>                                        <chr>          <int> #>  1 f      Military Hospital                            date_of_onset    439 #>  2 m      Connaught Hospital                           date_of_onset    848 #>  3 f      other                                        date_of_onset    437 #>  4 m      other                                        date_of_onset    439 #>  5 f      NA                                           date_of_onset    739 #>  6 f      Princess Christian Maternity Hospital (PCMH) date_of_onset    220 #>  7 f      Rokupa Hospital                              date_of_onset    210 #>  8 f      Connaught Hospital                           date_of_onset    889 #>  9 m      Rokupa Hospital                              date_of_onset    241 #> 10 m      Military Hospital                            date_of_onset    450 #> 11 m      Princess Christian Maternity Hospital (PCMH) date_of_onset    200 #> 12 m      NA                                           date_of_onset    717"},{"path":[]},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"incidence2 (development version)","text":"plot.incidence2() now works applied  objects  date_index. inadvertently broken 2.2.1 release. Thanks @Bisaloo report (#110).","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-221","dir":"Changelog","previous_headings":"","what":"incidence2 2.2.1","title":"incidence2 2.2.1","text":"CRAN release: 2023-06-13","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"new-features-2-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"incidence2 2.2.1","text":"plot.incidence2() gains arguments n_breaks, fill, show_cases legend allowing wider range plot styles. See vignette(\"incidence2\", package = \"incidence2\") examples.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-210","dir":"Changelog","previous_headings":"","what":"incidence2 2.1.0","title":"incidence2 2.1.0","text":"CRAN release: 2023-05-30","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"new-features-2-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"incidence2 2.1.0","text":"Specifying interval = \"day\" interval = daily call incidence force resultant date_index variable <Date>. Functionally wrapper around .Date() ensures underlying data whole numbers time zones respected.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"minor-breaking-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"(minor) breaking changes","title":"incidence2 2.1.0","text":"incidence() now warn objects created  columns. motivation , internally,  objects represented seconds since UNIX epoch , experience, level granularity normally desired aggregation. parameter complete_dates() now defunct. previously passed underlying seq function , practice, always forced 1 match precision underlying date_index. complete_dates() now error called input  date_index. Users must now explicitly set argument allow_POSIXct = TRUE maintain old behaviour.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-200","dir":"Changelog","previous_headings":"","what":"incidence2 2.0.0","title":"incidence2 2.0.0","text":"CRAN release: 2023-03-17 Version 2.0.0 major, breaking release incidence2. undertaken significant refactor simplifies underlying code base makes user interface consistent robust. Although main changes highlighted , users strongly advised read accompanying documentation vignettes.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"breaking-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"incidence2 2.0.0","text":"longer support NSE (e.g. tidyselect semantics) within package. motivation removing support NSE complexity can bring underlying code (making long term maintenance harder) complexity can cause users / developers want build top incidence2. new_incidence(), validate_incidence(), build_incidence(), get_n(), get_interval(), get_timespan() facet_plot() now defunct error called. complete_counts() now renamed complete_dates() gains two new parameters, expand . expand TRUE (default) complete_dates() attempt use function(x) seq(min(x), max(x), = ) generate complete sequence dates. incidence() function now always returns output long format dedicated columns count variables values (set arguments count_names_to count_values_to). incidence() now less flexible can accept interval argument. complex date groupings users encouraged perform require data transformations prior calling incidence(). default plotting incidence objects greatly simplified. Sensible defaults chosen enable quick visual overview incidence objects users advised call ggplot2 directly bespoke plotting.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-123","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.3","title":"incidence2 1.2.3","text":"CRAN release: 2021-11-07","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"new-functions-1-2-3","dir":"Changelog","previous_headings":"","what":"New functions","title":"incidence2 1.2.3","text":"Reintroduces cumulate() functionality (previously deprecated 1.2.0).","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"breaking-changes-1-2-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"incidence2 1.2.3","text":"Default fill argument complete_counts() now 0 rather NA.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-122","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.2","title":"incidence2 1.2.2","text":"CRAN release: 2021-08-23","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"bug-fixes-1-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"incidence2 1.2.2","text":"Fixes bug input object incidence data.table.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-121","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.1","title":"incidence2 1.2.1","text":"CRAN release: 2021-07-14","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"incidence2 1.2.1","text":"Fixes bug incidence() one column given date_index. Fixes incorrect test take account changing time zones.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-120","dir":"Changelog","previous_headings":"","what":"incidence2 1.2.0","title":"incidence2 1.2.0","text":"CRAN release: 2021-07-07","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"new-functions-1-2-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"incidence2 1.2.0","text":"new_incidence(): minimal incidence constructor. validate_incidence(): Check internal consistency incidence-like object. build_incidence(): Allows construct incidence object whilst specifying date grouping function. format.incidence()","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"deprecated-functions-1-2-0","dir":"Changelog","previous_headings":"","what":"Deprecated functions","title":"incidence2 1.2.0","text":"cumulate() now give deprecation error. removed function avoid users erroneously regressing cumulative count.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"incidence2 1.2.0","text":"Fixes bug incidence() dates character vector default, daily, interval specified.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"other-updates-1-2-0","dir":"Changelog","previous_headings":"","what":"Other updates","title":"incidence2 1.2.0","text":"Now uses dplyr handle list based columns (e.g. record-type objects vctrs). data.frames atomic columns, data.table still used. Printing summaries incidence objects improved remove duplication overview section.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-110","dir":"Changelog","previous_headings":"","what":"incidence2 1.1.0","title":"incidence2 1.1.0","text":"New function complete_counts(). plot() facet_plot() now centre_dates argument can set FALSE get histogram-esque date labels single month, quarter yearweek groupings. Internal refactoring due breakages changes upstream grates package.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-100","dir":"Changelog","previous_headings":"","what":"incidence2 1.0.0","title":"incidence2 1.0.0","text":"CRAN release: 2021-03-30 Due multiple changes underlying representation incidence2 objects release may possibly break old workflows particularly relying old implementations date grouping: Now uses package grates date grouping. introduces s3 classes yrwk, yrmon, yrqtr, yr, period int_period well associated constructors incidence now builds upon. result aweek dependency dropped. Add’s keep_first keep_last functions. Construction incidence objects now faster due underlying use data.table.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-022","dir":"Changelog","previous_headings":"","what":"incidence2 0.2.2","title":"incidence2 0.2.2","text":"CRAN release: 2020-11-12 Fixes bug get_interval. Removes message displayed incidence class dropped. Refactoring internal code improve maintainability. Tests now use 3rd edition testthat.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-021","dir":"Changelog","previous_headings":"","what":"incidence2 0.2.1","title":"incidence2 0.2.1","text":"CRAN release: 2020-10-16 Fixes bug .data.frame.incidence2 Limits internal reliance dplyr.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-020","dir":"Changelog","previous_headings":"","what":"incidence2 0.2.0","title":"incidence2 0.2.0","text":"CRAN release: 2020-09-22 Fixes issue monthly incidence objects show_cases = TRUE (see #42). Additional checks added assessing whether manipulated incidence object maintains class. Improved implementation speed. NA’s now ignored count variable pre-aggregated input incidence function. Fixes axis labelling spacing.","code":""},{"path":"http://www.reconverse.org/incidence2/dev/news/index.html","id":"incidence2-010","dir":"Changelog","previous_headings":"","what":"incidence2 0.1.0","title":"incidence2 0.1.0","text":"CRAN release: 2020-09-07 Initial release.","code":""}]
